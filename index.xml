<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bryan Ford&#39;s Blog</title>
    <link>https://bford.github.io/index.xml</link>
    <description>Recent content on Bryan Ford&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 16 Jun 2018 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://bford.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Sightseeing Around Lausanne</title>
      <link>https://bford.github.io/2018/06/16/lausanne/</link>
      <pubDate>Sat, 16 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://bford.github.io/2018/06/16/lausanne/</guid>
      <description>

&lt;p&gt;For the benefit those visiting but not yet familiar with
&lt;a href=&#34;https://www.epfl.ch/&#34;&gt;EPFL&lt;/a&gt;,
&lt;a href=&#34;http://www.lausanne.ch/en/&#34;&gt;Lausanne&lt;/a&gt;,
or other parts of the
&lt;a href=&#34;https://www.region-du-leman.ch/en/&#34;&gt;Lake Geneva Region&lt;/a&gt;,
I thought I&amp;rsquo;d write a quick summary of some of my personal favorite
places and sights in the area.
This is completely my personal perspective;
I make no pretense at being objective or unbiased here
and am not trying to write a proper travel guide.
But with that in mind, I hope you might find something interesting here.&lt;/p&gt;

&lt;h2 id=&#34;in-lausanne&#34;&gt;In Lausanne&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;IMG_6185.jpg&#34; alt=&#34;Lausanne Cathedral&#34; style=&#34;display:block;margin-left:auto;margin-right:auto;width:90%&#34;&gt;
&lt;div style=&#34;float:right;width:20%;padding:10px&#34;&gt;
&lt;img src=&#34;IMG_7842.jpg&#34; alt=&#34;Lausanne Cathedral&#34;&gt;
&lt;img src=&#34;IMG_4543.jpg&#34; alt=&#34;Saint-Maire Castle&#34;&gt;
&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;The heart of Lausanne, worth wandering around in to get a feel for the city,
is in the area of the Flon, Riponne, and Bessieres stops
on the M2 line of the
&lt;a href=&#34;https://en.wikipedia.org/wiki/Lausanne_Metro&#34;&gt;Lausanne Metro&lt;/a&gt;.
From the
&lt;a href=&#34;https://www.sbb.ch/en/station-services/railway-stations/lausanne-station.html&#34;&gt;main train station&lt;/a&gt;,
climb the steep pedestrian street Rue du Petit-Chêne straight up the hill
and you get to
&lt;a href=&#34;https://www.lausanne-tourisme.ch/en/P10663/saint-francois-church&#34;&gt;St-Francois Church&lt;/a&gt; near Flon.
Get used to climbing;
Lausanne embraces its three dimensions.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.lausanne-tourisme.ch/en/P10284/palud-square&#34;&gt;Place de la Palud&lt;/a&gt;
has the city hall,
a colorful
&lt;a href=&#34;https://www.lausanne-tourisme.ch/en/P10607/fountain-place-de-la-palud&#34;&gt;fountain&lt;/a&gt;,
and a mechanical clock to entertain the kids every hour.
The
&lt;a href=&#34;https://www.lausanne-tourisme.ch/en/P10661/lausanne-cathedral&#34;&gt;cathedral&lt;/a&gt;
has a tower you can climb during the day for a great view,
or at night see the nightwatchman
&lt;a href=&#34;https://www.nationalgeographic.com/travel/digital-nomad/2012/06/29/the-nightwatchman-of-lausanne/&#34;&gt;preserve his 700-year tradition&lt;/a&gt;
of calling out the hour.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.lausanne-tourisme.ch/en/P10664/chateau-saint-maire&#34;&gt;Château Saint-Maire&lt;/a&gt;,
at the other end of the old town area on the hill,
is a pretty castle but normally doesn&amp;rsquo;t let tourists in
because it&amp;rsquo;s been busy hosting the region&amp;rsquo;s government since around 1400.&lt;/p&gt;

&lt;p&gt;If you like museums,
Lausanne&amp;rsquo;s unique &amp;ldquo;must-see&amp;rdquo; museum is the
&lt;a href=&#34;https://www.artbrut.ch/en_GB&#34;&gt;Collection de l&amp;rsquo;Art Brut&lt;/a&gt;,
exhibiting the work of artists who were disconnected
from mainstream art education or culture &amp;ndash;
often producing pieces both naïve and amazingly intricate,
as if by a child with a 20-year attention span.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;art-brut.jpg&#34; alt=&#34;Collection de l&#39;Art Brut&#34; style=&#34;display:block;margin-left:auto;margin-right:auto;width:50%&#34;&gt;&lt;/p&gt;

&lt;p&gt;The
&lt;a href=&#34;https://www.fondation-hermitage.ch/actualite/&#34;&gt;Hermitage museum&lt;/a&gt;
is small but often hosts excellent temporary exhibitions,
and is on a pleasant park walk (i.e., climb) up to
&lt;a href=&#34;https://www.lausanne-tourisme.ch/fr/P528/parc-de-sauvabelin&#34;&gt;Lake Sauvabelin&lt;/a&gt;,
and its
&lt;a href=&#34;https://www.lausanne-tourisme.ch/en/P10611/sauvabelin-tower&#34;&gt;tower&lt;/a&gt;
with a view even more amazing than the cathedral
but missing the nightwatchman.&lt;/p&gt;

&lt;p&gt;At the downslope end of the M2 line is
&lt;a href=&#34;https://www.lausanne-tourisme.ch/en/P15594/ouchy&#34;&gt;Ouchy&lt;/a&gt;,
with pleasant lakeside walks in both directions.
A short walk east along the lake is the
&lt;a href=&#34;https://www.theguardian.com/sport/2017/sep/07/corruption-olympic-movement-ioc&#34;&gt;Olympic park&lt;/a&gt;
and
&lt;a href=&#34;https://www.lausanne-tourisme.ch/en/P375/the-olympic-museum&#34;&gt;museum&lt;/a&gt;,
home of the famous committee the locals call &amp;ldquo;vacuum cleaners&amp;rdquo; for
&lt;a href=&#34;https://www.theguardian.com/sport/2017/sep/07/corruption-olympic-movement-ioc&#34;&gt;what they do to money&lt;/a&gt;.
The lakeside walk west of Ouchy is a pleasant way to get
to or from EPFL if you have an hour to spare,
but the walk east of Ouchy to
&lt;a href=&#34;https://www.myswitzerland.com/en-ch/lutry.html&#34;&gt;Lutry&lt;/a&gt;
is even prettier.
The half-hour boat ride across the lake to
&lt;a href=&#34;https://en.wikipedia.org/wiki/%C3%89vian-les-Bains&#34;&gt;Évian-les-Bains&lt;/a&gt;,
where that water comes from, is also pleasant.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;IMG_2416.jpg&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;div style=&#34;clear:right&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;lavaux&#34;&gt;Lavaux&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;IMG_5291.jpg&#34; alt=&#34;Lavaux Vineyards&#34; style=&#34;display:block;margin-left:auto;margin-right:auto;width:75%&#34;&gt;&lt;/p&gt;

&lt;p&gt;The most jaw-droppingly beautiful area near Lausanne is
&lt;a href=&#34;http://www.lavaux-unesco.ch/&#34;&gt;Lavaux&lt;/a&gt;,
just east of the city,
where medieval monks figured out what amazing
&lt;a href=&#34;https://swisswine.ch/en/grape/chasselas&#34;&gt;Chasselas&lt;/a&gt; wines
the sunny south-facing slopes could produce.
I like to take a train to
&lt;a href=&#34;https://en.wikipedia.org/wiki/Grandvaux&#34;&gt;Grandvaux&lt;/a&gt;
and have a drink with a view or walk in any direction,
but if you have a few hours, the
&lt;a href=&#34;https://www.myswitzerland.com/en-ch/lavaux-vineyard-terraces-the-swiss-wine-route.html&#34;&gt;hike from St-Saphorin to Lutry&lt;/a&gt;
is wonderful.
The small towns in the area offer plenty of opportunities
for wine-tasting distraction along the way.&lt;/p&gt;

&lt;h2 id=&#34;montreux-and-chillon&#34;&gt;Montreux and Chillon&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;IMG_8914.jpg&#34; alt=&#34;Gruyères Castle&#34; style=&#34;display:block;margin-left:auto;margin-right:auto;width:75%&#34;&gt;&lt;/p&gt;

&lt;p&gt;If you or your kids like castles,
&lt;a href=&#34;https://www.chillon.ch/en/&#34;&gt;Chillon&lt;/a&gt; is the one to see:
towers, medieval living quarters,
walkable battlements with window-slits of every shape,
a dungeon that held a prisoner famous enough for
&lt;a href=&#34;https://www.poetryfoundation.org/poems/43842/the-prisoner-of-chillon&#34;&gt;Lord Byron to wax poetic about&lt;/a&gt;,
all-natural gravity-flush toilets&amp;hellip;
Chillon is a pleasant half-hour lakeside walk from
&lt;a href=&#34;http://www.montreux.ch/accueil/&#34;&gt;Montreux&lt;/a&gt;,
another pretty city on the east end of the lake
with &lt;a href=&#34;https://www.montreuxjazz.com/&#34;&gt;jazz festivals&lt;/a&gt;
and &lt;a href=&#34;https://www.montreuxjazzcafe.com/en/cafe/montreux&#34;&gt;jazz cafes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;IMG_3871.jpg&#34; alt=&#34;Saint-Maurice&#34; style=&#34;float:right;width:25%;padding:10px&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;IMG_3949.jpg&#34; alt=&#34;Saint-Maurice&#34; style=&#34;float:right;width:15%;padding:10px&#34;&gt;&lt;/p&gt;

&lt;h2 id=&#34;saint-maurice&#34;&gt;Saint-Maurice&lt;/h2&gt;

&lt;p&gt;A bit farther southeast of Montreux,
in &lt;a href=&#34;https://en.wikipedia.org/wiki/Canton_of_Valais&#34;&gt;Valais&lt;/a&gt;,
is the charming town of
&lt;a href=&#34;http://www.saint-maurice.ch/&#34;&gt;Saint-Maurice&lt;/a&gt;,
nestled between sheer rock cliffs and
with a main street that someone thousands of years ago
clearly aligned for a perfect view of the mountains.
In the town is
&lt;a href=&#34;http://www.saint-maurice.ch/tourism/abbey-87.html&#34;&gt;an abbey&lt;/a&gt;
that has been operating continuously for 1500 years
and makes one of my favorite radioactive-green herbal liqueurs.&lt;/p&gt;

&lt;p&gt;A short but steep hike halfway up the nearby cliff is a
&lt;a href=&#34;http://www.saint-maurice.ch/tourism/notre-dame-scex-chapel-630.html&#34;&gt;chapel&lt;/a&gt;
cut into the rock.
A few minutes&amp;rsquo; walk north of town is the
&lt;a href=&#34;http://www.saint-maurice.ch/tourism/castle-55.html&#34;&gt;castle&lt;/a&gt;,
which doubles as a museum that sometimes has interesting exhibitions.
A hike up the hill behind the castle leads to the
&lt;a href=&#34;http://www.saint-maurice.ch/tourism/fairy-cave-54.html&#34;&gt;fairy cave&lt;/a&gt;
with an incredible underground lake and waterfall.
(And fairies of course.)&lt;/p&gt;

&lt;p&gt;&lt;div style=&#34;clear:right&#34; /&gt;&lt;/p&gt;

&lt;!--
Champery
--------
--&gt;

&lt;h2 id=&#34;gruyères&#34;&gt;Gruyères&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;IMG_0461.jpg&#34; alt=&#34;Gruyères Castle&#34; style=&#34;display:block;margin-left:auto;margin-right:auto;width:75%&#34;&gt;&lt;/p&gt;

&lt;p&gt;A lovely train ride north of the lake is the town of
&lt;a href=&#34;https://www.myswitzerland.com/en-ch/gruyere-castle.html&#34;&gt;Gruyères&lt;/a&gt;,
where the
&lt;a href=&#34;https://en.wikipedia.org/wiki/Gruy%C3%A8re_cheese&#34;&gt;famous cheese&lt;/a&gt;
originated.
Besides another amazing
&lt;a href=&#34;https://www.chateau-gruyeres.ch/en&#34;&gt;hilltop castle&lt;/a&gt;,
it also has
&lt;a href=&#34;https://www.lamaisondugruyere.ch/visits-discoveries/the-cheese-factory/&#34;&gt;a cheese factory&lt;/a&gt;
that you can tour.
They also sell my &lt;em&gt;other&lt;/em&gt; favorite
&lt;a href=&#34;http://www.lachaudiere.ch/shop/vins/grande-gruyere/&#34;&gt;radioactive-green herbal liqueur&lt;/a&gt;.
And what quaint medieval town would be complete without a
&lt;a href=&#34;https://www.hrgigermuseum.com/&#34;&gt;museum&lt;/a&gt; and
&lt;a href=&#34;http://www.hrgiger.com/barmuseum.htm&#34;&gt;bar&lt;/a&gt;
dedicated to
&lt;a href=&#34;http://www.hrgiger.com/&#34;&gt;H.R. Giger&lt;/a&gt;,
the father of Sigourney Weaver&amp;rsquo;s alien.
Fits right in!&lt;/p&gt;

&lt;!--
Romainmotier
------------
--&gt;

&lt;!--
---

*I wish to thank ...
for helpful feedback on early drafts of this post.*
--&gt;
</description>
    </item>
    
    <item>
      <title>Secure, Scalable Proof-of-Stake Blockchains</title>
      <link>https://bford.github.io/draft/stake/</link>
      <pubDate>Tue, 31 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://bford.github.io/draft/stake/</guid>
      <description>

&lt;h1 id=&#34;proof-of-what&#34;&gt;Proof-of-What?&lt;/h1&gt;

&lt;p&gt;Currently-deployed permissionless blockchains
such as Bitcoin and Ethereum rely on
&lt;a href=&#34;https://en.wikipedia.org/wiki/Proof-of-work_system&#34;&gt;proof-of-work (PoW)&lt;/a&gt;
to distribute both the computational networking costs,
and the financial rewards,
of maintaining and extending the blockchain.
In proof-of-work systems, participating &lt;em&gt;miners&lt;/em&gt;
race (&amp;ldquo;work&amp;rdquo;) to compute solutions to cryptographic puzzles.
These puzzles effectively act like self-printed lottery tickets,
in that a miniscule fraction of these proof-of-work solutions
may be easily verified by anyone as &amp;ldquo;winning&amp;rdquo; the lucky miner
the right to add one block to the blockchain and collect associated rewards.
Proof-of-work has proven practical and relatively secure,
at least for cryptocurrencies with sufficient critical mass to deter
&lt;a href=&#34;https://cryptohustle.com/51-attack-crew-extorts-and-hijacks-blockchains-for-ransom&#34;&gt;ransom or hijacking by powerful attackers&lt;/a&gt;.
However, it has been
&lt;a href=&#34;https://pando.com/2013/12/16/bitcoin-has-a-dark-side-its-carbon-footprint/&#34;&gt;recognized for years&lt;/a&gt;
that proof-of-work blockchains are
&lt;a href=&#34;https://motherboard.vice.com/en_us/article/d3zn9a/ethereum-mining-transaction-electricity-consumption-bitcoin&#34;&gt;a tremendous waste of energy&lt;/a&gt;.
Recent estimates show that
&lt;a href=&#34;http://digiconomist.net/bitcoin-energy-consumption&#34;&gt;Bitcoin now consumes more energy than 60% of the world&amp;rsquo;s countries&lt;/a&gt;,
and that
&lt;a href=&#34;http://digiconomist.net/ethereum-energy-consumption&#34;&gt;Ethereum already consumes more energy
than Cyprus or Cambodia&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Motivated in part by this energy waste and its carbon footprint,
the cryptocurrency community has developed increasing interest
in alternative security foundations such as
&lt;a href=&#34;https://en.wikipedia.org/wiki/Proof-of-stake&#34;&gt;proof-of-stake (PoS)&lt;/a&gt;.
The essence of this idea is to apportion consensus power
not according to energy wasted performing useless work,
but rather according to the amount of &amp;ldquo;stake&amp;rdquo;
that participants already hold in the system:
e.g., according to the number of coins they own.
The underlying principle is not unlike that of a traditional
&lt;a href=&#34;https://en.wikipedia.org/wiki/Joint-stock_company&#34;&gt;joint-stock company&lt;/a&gt;,
in which voting power to affect a company&amp;rsquo;s decisions
(e.g., by electing board members who in turn choose executives)
is apportioned in proportion to shares of stock (&amp;ldquo;stake&amp;rdquo;)
held in the company.
The venerable underlying security principle is that stakeholders
have an interest in preserving and ideally increasing
the value of their stake &amp;ndash;
with bigger stakeholders having more to gain (or lose)
from good (or bad) decisions &amp;ndash;
thereby aligning their individual interests with those of the overall system.
While proof-of-stake conceptually represents
a sensible and promising alternative to proof-of-work,
&lt;em&gt;implementing&lt;/em&gt; proof-of-stake systems securely
&lt;a href=&#34;https://blog.sldx.com/whats-wrong-with-proof-of-stake-77d4f370be15&#34;&gt;is challenging&lt;/a&gt;,
due to many difficulties well-documented in
&lt;a href=&#34;http://bitfury.com/content/5-white-papers-research/pos-vs-pow-1.0.2.pdf&#34;&gt;a BitFury white paper&lt;/a&gt;
and elsewhere.&lt;/p&gt;

&lt;h1 id=&#34;is-proof-of-investment-really-the-answer&#34;&gt;Is Proof-of-Investment Really the Answer?&lt;/h1&gt;

&lt;p&gt;Proof-of-work and proof-of-stake are both
&lt;em&gt;investment-proportional&lt;/em&gt; security foundations,
in that they apportion consensus power and mining rewards
proportionally to prior investment
(in computational effort or coin purchases, respectively).
Many other alternatives such as
&lt;a href=&#34;https://en.wikipedia.org/wiki/Proof-of-space&#34;&gt;proof of space&lt;/a&gt;,
&lt;a href=&#34;http://dedis.cs.yale.edu/dissent/papers/hotpets14-torpath-abs&#34;&gt;proof of bandwidth&lt;/a&gt;,
and
&lt;a href=&#34;https://eprint.iacr.org/2016/145.pdf&#34;&gt;proof of human work&lt;/a&gt;
similarly fit into the same broad category,
which might be accurately classified as &lt;em&gt;proof of investment&lt;/em&gt;.
In the long term,
I am skeptical that cryptocurrencies based on proof of investment
will fundamentally transform our society or economy for the better
(or at all really).
At the end of the day,
cryptocurrencies or
&lt;a href=&#34;https://en.wikipedia.org/wiki/Decentralized_autonomous_organization&#34;&gt;decentralized autonomous organizations&lt;/a&gt;
based on proof of investment are merely a more-automated
functional equivalent to the stakeholder-driven joint-stock companies
that already dominate today&amp;rsquo;s global economy,
and hence are fundamentally nothing new.&lt;/p&gt;

&lt;p&gt;In other words, proof-of-investment cryptocurrencies
may put more white-collar office workers out of work and hasten the
&lt;a href=&#34;https://www.wired.com/brandlab/2015/04/rise-machines-future-lots-robots-jobs-humans/&#34;&gt;rise of the machines&lt;/a&gt;,
but will ultimately do little to address society&amp;rsquo;s fundamental challenges
such as
&lt;a href=&#34;https://www.theguardian.com/business/2017/jan/11/inequality-world-economy-wef-brexit-donald-trump-world-economic-forum-risk-report&#34;&gt;rising economic inequality&lt;/a&gt;.
For that purpose, I see more promise in truly democratic alternatives
such as
&lt;a href=&#34;https://zerobyte.io/publications/2017-BKJGGF-pop.pdf&#34;&gt;proof-of-personhood&lt;/a&gt;
or
&lt;a href=&#34;http://proofofindividuality.online/&#34;&gt;proof-of-individuality&lt;/a&gt;,
which could create a sort of
&amp;ldquo;permissionless &lt;a href=&#34;https://en.wikipedia.org/wiki/Basic_income&#34;&gt;basic income&lt;/a&gt;&amp;ldquo;
by apportioning voting and consensus power and currency-mining rewards
to all &lt;em&gt;human&lt;/em&gt; participants, in a one-person-one-vote distribution.
But truly democratizing and decentralizing cryptocurrencies
will require solving many further challenges.
In the meantime, even if proof-of-stake achieves nothing but
ending the energy waste and environmental impact of proof-of-work,
that goal is easily worth pursuing.
And it&amp;rsquo;s an interesting technical challenge,
so the rest of this blog post will focus on that.&lt;/p&gt;

&lt;h1 id=&#34;will-the-one-true-blockchain-please-raise-your-hand&#34;&gt;Will the One True Blockchain Please Raise Your Hand?&lt;/h1&gt;

&lt;h1 id=&#34;long-term-attacks&#34;&gt;Long-term Attacks&lt;/h1&gt;
</description>
    </item>
    
    <item>
      <title>How Do You Know It&#39;s On the Blockchain? With a SkipChain.</title>
      <link>https://bford.github.io/2017/08/01/skipchain/</link>
      <pubDate>Tue, 01 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://bford.github.io/2017/08/01/skipchain/</guid>
      <description>

&lt;p&gt;A &lt;a href=&#34;https://en.wikipedia.org/wiki/Blockchain&#34;&gt;blockchain&lt;/a&gt;,
or distributed ledger,
is a log maintained collectively by a distributed group of participants
who agree on and record transactions without relying for security on
any single trusted party.
While initially popularized by &lt;a href=&#34;https://en.wikipedia.org/wiki/Bitcoin&#34;&gt;Bitcoin&lt;/a&gt;
and its derivatives,
the blockchain abstraction is not specific to currencies,
and there is exploding industry interest in many non-currency uses.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&#34;blockchain.svg&#34; alt=&#34;Blockchain&#34;&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Many of these diverse use-cases, however,
require users to be able to &lt;em&gt;verify&lt;/em&gt; whether or not
some transaction has been committed to a blockchain.
With currently-deployed blockchains, however,
securely verifying transactions unfortunately requires the user&amp;rsquo;s device
to be online and connected to the Internet,
and to pay the bandwidth and power costs of maintaining connectivity
with multiple (perhaps many) nodes on the blockchain&amp;rsquo;s overlay network.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;verified.jpg&#34; style=&#34;float:right;width:20%&#34;&gt;&lt;/p&gt;

&lt;p&gt;This blog post explores the challenges this verification problem
presents for important blockchain applications such as
document &lt;a href=&#34;https://en.wikipedia.org/wiki/Notary&#34;&gt;notarization&lt;/a&gt;.
We then explore one possible solution: &lt;em&gt;SkipChains&lt;/em&gt;,
a cryptographically-traversable, offline- and peer-to-peer-verifiable
blockchain structure.
SkipChains were introduced by the
&lt;a href=&#34;http://dedis.epfl.ch/&#34;&gt;Decentralized/Destributed Systems (DEDIS) lab&lt;/a&gt;
at &lt;a href=&#34;https://www.epfl.ch/&#34;&gt;EPFL&lt;/a&gt;
as part of &lt;a href=&#34;https://eprint.iacr.org/2017/648&#34;&gt;Chainiac&lt;/a&gt;,
a blockchain-based software update system to be presented at
&lt;a href=&#34;https://www.usenix.org/conference/usenixsecurity17/technical-sessions/presentation/nikitin&#34;&gt;USENIX Security &amp;lsquo;17&lt;/a&gt;.
While introduced in the context of a software update system,
this blog post focuses not on software updates
but other potential applications of blockchains and SkipChains.&lt;/p&gt;

&lt;h1 id=&#34;using-blockchains-in-document-notarization&#34;&gt;Using Blockchains in Document Notarization&lt;/h1&gt;

&lt;p&gt;One attractive and widely-discussed non-currency use-case for blockchains is
in electronically timestamping and notarizing documents
such as &lt;a href=&#34;https://link.springer.com/chapter/10.1007/978-3-319-45153-4_48/fulltext.html&#34;&gt;academic degrees&lt;/a&gt;
or &lt;a href=&#34;https://www.ubitquity.io/home/resources/worldbank_land_paper_ubitquity_march_2016.pdf&#34;&gt;land records&lt;/a&gt;.
The essence of the idea is to use a blockchain&amp;rsquo;s tamper-resistance property
to make it harder to forge, back-date, or modify important records.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;award-certificate.jpg&#34; style=&#34;border:10px solid white;float:right;width:30%&#34;&gt;&lt;/p&gt;

&lt;p&gt;While a promising application,
current blockchain approaches to document notarization suffer from
several important caveats and limitations.
Some are already well-known:
for example, that
&lt;a href=&#34;https://www.multichain.com/blog/2017/05/blockchain-immutability-myth/&#34;&gt;blockchains are not always immutable in practice&lt;/a&gt;.
Further,
in this use-case the blockchain itself
really provides only one narrow security property:
proof that a particular electronic document &lt;em&gt;existed&lt;/em&gt; at some time.
A blockchain does not automatically provide
&lt;a href=&#34;https://decentralize.today/does-notarization-on-the-blockchain-actually-work-d8006443c0b9&#34;&gt;other important security properties&lt;/a&gt;
that we traditionally depend on notaries for,
such as to verify the &lt;em&gt;identities&lt;/em&gt; of the parties signing a document,
and to attest that this signing was done freely and not under duress.
Blockchains are certainly useful and can improve the security of notarization,
but are not an automatic replacement.&lt;/p&gt;

&lt;h1 id=&#34;how-do-you-know-it-s-on-the-blockchain&#34;&gt;How Do You Know It&amp;rsquo;s On the Blockchain?&lt;/h1&gt;

&lt;p&gt;Current blockchains have another important limitation,
not yet widely recognized,
that severely affects their usefulness for notarization applications.
If someone shows you an electronic document,
stating they hold a particular academic degree or land title for example,
and they claim this document is &amp;ldquo;on the blockchain,&amp;rdquo;
how do you use your favorite personal mobile device
(smart phone, laptop, etc.)
to verify that the claimed document actually &lt;em&gt;is on the blockhchain&lt;/em&gt;?
With current public blockchains such as
&lt;a href=&#34;https://en.wikipedia.org/wiki/Bitcoin&#34;&gt;Bitcoin&lt;/a&gt; and
&lt;a href=&#34;https://www.ethereum.org/&#34;&gt;Ethereum&lt;/a&gt;,
securely verifying that a document is indeed on the blockchain
requires your device to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Be online with a working connection to the Internet,&lt;/li&gt;
&lt;li&gt;Be well-connected with multiple &amp;ldquo;full nodes&amp;rdquo;
on the blockchain&amp;rsquo;s overlay network, and&lt;/li&gt;
&lt;li&gt;Regularly &amp;ndash; and ideally continually &amp;ndash; invest the bandwidth
and power costs of &amp;ldquo;following&amp;rdquo; the blockchain.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For example, suppose Alice is a certified electrician
who shows up for a job at Bob&amp;rsquo;s home,
but Bob asks for verifiable proof of Alice&amp;rsquo;s professional credentials.
Assume that Alice&amp;rsquo;s &amp;ldquo;electrician&amp;rdquo; certificate is a digital credential
that was issued by an academic or government organization that Bob trusts,
and was encoded in an open format
such as &lt;a href=&#34;https://www.blockcerts.org/&#34;&gt;Blockcerts&lt;/a&gt;,
and &amp;ldquo;notarized&amp;rdquo; by attaching it to
a blockchain transaction at the time Alice earned the credential.
Alice might have obtained this credential months or even years
before Bob calls Alice to work on his home.&lt;/p&gt;

&lt;p&gt;When Alice shows up to the appointment,
she can use her smart phone to send her credential,
along with a
&lt;a href=&#34;https://en.wikipedia.org/wiki/Merkle_tree&#34;&gt;cryptographic proof of its inclusion&lt;/a&gt;
in some blockchain transaction,
to Bob&amp;rsquo;s smart phone for verification.
For example, Alice might send her credential to Bob&amp;rsquo;s device
via Bluetooth or Wifi, or by displaying a
&lt;a href=&#34;https://en.wikipedia.org/wiki/QR_code&#34;&gt;QR code&lt;/a&gt;
for Bob&amp;rsquo;s device to scan.
But then what, precisely, does Bob&amp;rsquo;s device &lt;em&gt;do&lt;/em&gt; to verify that
Alice&amp;rsquo;s credential is indeed on the blockchain?
Without this critical verification step,
Alice could be showing Bob a forged certificate
that was never actually notarized,
or a tampered certificate with the name or date changed.
Returning briefly to &lt;a href=&#34;https://eprint.iacr.org/2017/648&#34;&gt;Chainiac&lt;/a&gt;&amp;rsquo;s
motivating use-case,
Alice might be asking Bob to install an application or OS update &amp;ndash;
but without verifying that this update is indeed on the blockchain,
Alice could give Bob a secretly backdoored image that the software vendor
&lt;a href=&#34;https://freedom-to-tinker.com/2016/03/10/apple-fbi-and-software-transparency/&#34;&gt;was coerced into signing&lt;/a&gt;.
Bob might never know that the document or software Alice gave her
was not the official, notarized version
that everyone else sees on the public blockchain.&lt;/p&gt;

&lt;h2 id=&#34;bad-solution-just-trust-someone&#34;&gt;Bad Solution: Just Trust Someone&lt;/h2&gt;

&lt;p&gt;The Blockcerts &lt;a href=&#34;https://github.com/blockchain-certificates/cert-verifier-js#verification-process&#34;&gt;verification process&lt;/a&gt; documentation specifies that:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A Blockchain Certificate must have a &lt;code&gt;certificate.signature.anchors&lt;/code&gt; field, which must contain at least one anchor to a blockchain transaction.&lt;/p&gt;

&lt;p&gt;[&amp;hellip;]&lt;/p&gt;

&lt;p&gt;Supplied with the blockchain identifier and transaction id, the transaction can be obtained from a service like &lt;a href=&#34;http://blockchain.info&#34;&gt;blockchain.info&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There are two crucial unstated and unaddressed issues here,
and in similar blockchain-based notarization schemes.
These issues are not in any way specific to Blockcerts, however,
but arise from basic limitations of current blockchains.&lt;/p&gt;

&lt;p&gt;First, in order for Bob to retrieve the transaction from
&lt;a href=&#34;http://blockchain.info&#34;&gt;blockchain.info&lt;/a&gt;
and verify that it indeed anchors the certificate Alice presented,
both Bob and &lt;a href=&#34;http://blockchain.info&#34;&gt;blockchain.info&lt;/a&gt;
must be online and able to communicate with each other.
If Bob lives in a remote village in the developing world
where Internet connectivity is slow and expensive,
online verification might not be so practical.
Bob may then just have to take Alice&amp;rsquo;s word &amp;ndash;
not exactly the security advancement we hoped for,
especially since poor, disconnected communities already
tend to be vulnerable to fraud and criminal attack.
Alternatively, Bob&amp;rsquo;s Internet access might be temporarily unavailable &amp;ndash;
perhaps because that&amp;rsquo;s what Alice showed up to fix.
Or perhaps Alice is the captain of a
&lt;a href=&#34;https://www.nytimes.com/2017/03/04/business/dealbook/blockchain-ibm-bitcoin.html&#34;&gt;container ship&lt;/a&gt;
that just arrived in Bob&amp;rsquo;s port,
in which case Bob needs to verify thousands of bills of lading.
This online verification incurs substantial communication costs
even when it works reliably &amp;ndash;
and the entire port may have to shut down
during a temporary Internet outage.&lt;/p&gt;

&lt;p&gt;Second, the basic security purpose of the blockchain concept
is to &lt;em&gt;distribute trust&lt;/em&gt; so that your security is not dependent
on any one central authority or trusted third party.
But any Web-based transaction query service like
&lt;a href=&#34;http://blockchain.info&#34;&gt;blockchain.info&lt;/a&gt;
is just such an authority or trusted party.
If the service is compromised or malicious, its HTTPS private key is stolen,
its &lt;a href=&#34;https://www.gohacking.com/dns-hijacking/&#34;&gt;domain name is hijacked&lt;/a&gt;,
or if &lt;em&gt;any&lt;/em&gt; Web certificate authority
&lt;a href=&#34;https://arstechnica.com/information-technology/2017/03/google-takes-symantec-to-the-woodshed-for-mis-issuing-30000-https-certs/&#34;&gt;mis-issues an HTTPS certificate for it&lt;/a&gt;,
then the attacker can collude with Alice to convince Bob
that any arbitrary document is &amp;ldquo;on the blockchain&amp;rdquo; when it isn&amp;rsquo;t.&lt;/p&gt;

&lt;p&gt;The transaction query service becomes a single point of failure or compromise,
exactly what the blockchain concept was supposed to eliminate.
And if you&amp;rsquo;re going to have single points of failure or compromise,
you&amp;rsquo;ll be much better off using vastly cheaper and more mature technology
such as Oracle databases or Amazon cloud services.&lt;/p&gt;

&lt;h1 id=&#34;mediocre-solution-simplified-payment-validation-spv&#34;&gt;Mediocre Solution: Simplified Payment Validation (SPV)&lt;/h1&gt;

&lt;p&gt;Bob could in principle run a
&lt;a href=&#34;https://bitcoin.org/en/full-node#what-is-a-full-node&#34;&gt;Bitcoin full node&lt;/a&gt;,
thereby maintaining a mirror copy of the entire blockchain.
Having a full local copy of the blockchain would make it quick and easy
for Bob to verify Alice&amp;rsquo;s certificate, and quite secure.
But the sheer size of the blockchain and the continual bandwidth requirements
of downloading every block is already impractical even for most users
with desktop PCs and fast Internet connections,
let alone people with only a low-power smartphone and limited network bandwidth.&lt;/p&gt;

&lt;p&gt;This verification efficiency problem is precisely what motivates
&lt;a href=&#34;https://bitcoin.org/en/developer-guide#simplified-payment-verification-spv&#34;&gt;Simplified Payment Verification (SPV)&lt;/a&gt;,
a common technique in mobile Bitcoin clients.
In short, an SPV client maintains connections
with one or (preferably) several full nodes,
and downloads only block headers (about 80 bytes every 10 minutes)
rather than full blocks.
While vastly more economical than running a full node,
an SPV client must still be online to verify transactions,
and still consumes substantial precious bandwidth and power
to follow the blockchain.
The bandwidth an SPV client must consume to &amp;ldquo;catch up&amp;rdquo; with the blockchain
is linearly proportional to the time since the client was last run,
which can be megabytes if the app hasn&amp;rsquo;t synced for several months &amp;ndash;
and much more on a faster blockchain such as Ethereum,
which produces new blocks
&lt;a href=&#34;https://etherscan.io/chart/blocktime&#34;&gt;every 15 seconds&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;SPV also introduces security weaknesses.
If the client downloads the blockchain from only a single full node,
then that full node again becomes a single point of failure or compromise.
This full node could isolate the client from the rest of the network
and present the client with a fake &amp;ldquo;view&amp;rdquo; of the blockchain &amp;ndash;
e.g., a fork of the public blockchain with much less work,
containing a secretly forged certificate that Alice wants Bob to accept.
If the SPV client adopts the more secure practice of syncing against
multiple independent full nodes,
these connections consume more bandwidth and power.
Even full nodes and well-connected SPV clients
remain vulnerable to
&lt;a href=&#34;http://vanbever.eu/pdfs/vanbever_bitcoin_routing_attacks_oakland_2017.pdf&#34;&gt;routing-based hijacking and isolation attacks&lt;/a&gt;.
In addition, SPV may not scale to large number of thin clients
without a specialized
&lt;a href=&#34;https://people.csail.mit.edu/alinush/papers/catena-sp2017.pdf&#34;&gt;header relay network&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The fundamental problem is that in a conventional proof-of-work blockchain
like Bitcoin or Ethereum,
there is no cryptographic means for anyone
to distinguish the &lt;em&gt;real&lt;/em&gt; public blockchain from a fake one,
except by comparing the amount of work invested in two competing views.
In other words, current blockchains
can never be validated in any absolute sense,
but only &lt;em&gt;relative&lt;/em&gt; to the perspectives of other active communication partners.
Because all verification is relativistic,
anyone who is not online,
or who an attacker can isolate from the rest of the network even temporarily,
can be tricked into accepting a secret, fake blockchain
forked from the real blockchain at an arbitrary time in the past
with relatively modest proof-of-work effort by the attacker.&lt;/p&gt;

&lt;p&gt;In summary, verifying a transaction on a current public blockchain
such as Bitcoin or Ethereum
fundamentally requires the verifier to be &lt;em&gt;online&lt;/em&gt; and &lt;em&gt;well-connected&lt;/em&gt;.
Absent either of these requirements,
verification of a transaction &amp;ndash; or a certificate anchored in a transaction &amp;ndash;
is either impossible or insecure.&lt;/p&gt;

&lt;h1 id=&#34;better-solution-collectively-signed-transactions&#34;&gt;Better Solution: Collectively Signed Transactions&lt;/h1&gt;

&lt;p&gt;In a &lt;a href=&#34;https://www.usenix.org/conference/usenixsecurity16/technical-sessions/presentation/kogias&#34;&gt;paper at USENIX Security &amp;lsquo;16&lt;/a&gt;
we introduced
&lt;a href=&#34;http://hackingdistributed.com/2016/08/04/byzcoin/&#34;&gt;ByzCoin&lt;/a&gt;,
a next-generation blockchain architecture developed by the
&lt;a href=&#34;http://dedis.epfl.ch/&#34;&gt;Decentralized/Destributed Systems (DEDIS) lab&lt;/a&gt;
at &lt;a href=&#34;https://www.epfl.ch/&#34;&gt;EPFL&lt;/a&gt;.
In summary, ByzCoin offers immediate transaction finality
through scalable
&lt;a href=&#34;https://en.wikipedia.org/wiki/Byzantine_fault_tolerance&#34;&gt;Byzantine consensus&lt;/a&gt;,
improves on Bitcoin&amp;rsquo;s transaction throughput by two orders of magnitude
(from ~7 to ~900 transactions per second),
and similarly improves on Bitcoin&amp;rsquo;s transaction latency by
an order magnitude
(from ~10 minutes to 1&amp;ndash;2 minutes).&lt;/p&gt;

&lt;p&gt;One of the tools ByzCoin uses to make Byzantine consensus scale well
is to leverage &lt;em&gt;collective signing&lt;/em&gt; or &lt;em&gt;CoSi&lt;/em&gt;,
an efficient digital signature aggregation protocol
that we introuced in
&lt;a href=&#34;http://dedis.cs.yale.edu/dissent/papers/witness-abs&#34;&gt;an earlier paper&lt;/a&gt;
we presented at
&lt;a href=&#34;http://www.ieee-security.org/TC/SP2016/program.html&#34;&gt;IEEE Security &amp;amp; Privacy &amp;lsquo;16&lt;/a&gt;
(a top security/privacy conference still affectionately known as &amp;ldquo;Oakland&amp;rdquo;
even though the conference is no longer actually held in Oakland).
To enable the use of Byzantine consensus in a proof-of-work blockchain,
ByzCoin forms a &lt;em&gt;consensus group&lt;/em&gt;
from a sample of recently-successful proof-of-work miners &amp;ndash;
e.g., from the past day or the past week of mining effort.
This consensus group then executes the classic
&lt;a href=&#34;http://www.pmg.csail.mit.edu/papers/bft-tocs.pdf&#34;&gt;PBFT&lt;/a&gt;
consensus algorithm to commit transactions securely with immediate finality.&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;Prepare&lt;/em&gt; and &lt;em&gt;Commit&lt;/em&gt; phases of in the PBFT protocol
traditionally uses unscalable &amp;ldquo;all-to-all&amp;rdquo; communication, however,
as illustrated below.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&#34;bft-tocs.svg&#34; alt=&#34;Phases of Castro-Liskov PBFT protocol&#34; style=&#34;width:80%&#34;&gt;
&lt;a href=&#34;http://www.pmg.csail.mit.edu/papers/bft-tocs.pdf&#34;&gt;Castro and Liskov, Fig. 1&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;In place of all-to-all communication,
ByzCoin instead employs CoSi during each of these phases.
Each run of CoSi produces
a single compact, efficiently-verifiable collective signature
cryptographically attesting that a sufficient fraction of the consensus group
has &amp;ldquo;signed off&amp;rdquo; on preparing, or committing, each new block.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&#34;cosi-blocks.svg&#34; alt=&#34;Collectively signed blockchain as in ByzCoin&#34; style=&#34;width:50%&#34;&gt;
&lt;a href=&#34;https://www.usenix.org/system/files/conference/usenixsecurity16/sec16_paper_kokoris-kogias.pdf&#34;&gt;Kokoris et al, Fig. 1&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;While ByzCoin&amp;rsquo;s collective signatures were mainly intended
for the consumption of other miners in the consensus group,
in principle &lt;em&gt;anyone&lt;/em&gt; can check these collective signatures
to determine whether a block has been committed to the blockchain.
The verifier can be a low-power device with little or no Internet connectivity,
and doesn&amp;rsquo;t need to maintain connections with many other network nodes,
because the collective signature itself contains cryptographic evidence
that a sufficient threshold of miners have validated and committed the block.&lt;/p&gt;

&lt;h1 id=&#34;following-an-evolving-consensus-group&#34;&gt;Following an Evolving Consensus Group&lt;/h1&gt;

&lt;p&gt;So does ByzCoin already solve the offline transaction verification problem?
Not quite.
To check a collective signature,
the verifier needs to know the correct &lt;em&gt;public keys&lt;/em&gt;
representing the set of miners comprising the consensus group
at the moment in time when the block in question was committed.
Because ByzCoin forms this consensus group from a constantly-rotating sample
of miners who recently solved proof-of-work puzzles,
this set of public keys may continually change &amp;ndash;
up to once every few minutes.&lt;/p&gt;

&lt;p&gt;If Bob wants to verify a certificate Alice notarized on the blockchain
a year or two ago,
that block might have been committed and collectively signed
by a completely different set of miners, with different public keys,
from the set of miners who are &lt;em&gt;currently&lt;/em&gt; committing transactions &amp;ndash;
or who were committing transactions
as of the last time Bob&amp;rsquo;s personal device caught up with the blockchain.
If Bob&amp;rsquo;s device is online now or synced recently,
then Alice&amp;rsquo;s certificate may be long in the past
with respect to Bob&amp;rsquo;s latest reference point on the blockchain.
In this case,
Bob&amp;rsquo;s device can in principle &amp;ldquo;walk backwards&amp;rdquo; on the blockchain
from his reference point to the block containing Alice&amp;rsquo;s certificate,
following the hash links from each block to the immediately prior one,
provided Bob has stored (or otherwise has access to)
all the relevant block headers.&lt;/p&gt;

&lt;p&gt;If Bob&amp;rsquo;s device has been offline for a long time, however,
then Bob&amp;rsquo;s reference point on the blockchain may be behind Alice&amp;rsquo;s in time.
In this case, Bob&amp;rsquo;s device must &lt;em&gt;walk forward&lt;/em&gt; in time on the blockchain
from his reference point to the block containing Alice&amp;rsquo;s certificate.
Bob obviously won&amp;rsquo;t have the relevant block headers yet,
since he was offline when they were committed &amp;ndash;
but &lt;em&gt;Alice&lt;/em&gt; might have copies of those intervening block headers,
which she can simply send to Bob via peer-to-peer communication.
How does Bob know these more recent block headers Alice supplied him
represent correct blocks from &amp;ldquo;the one true blockchain&amp;rdquo;
and not a fake blockchain that Alice concocted to mislead Bob?
With conventional blockchains, he can&amp;rsquo;t tell the difference &amp;ndash;
but with ByzCoin or Chainiac, he simply checks the collective signatures.&lt;/p&gt;

&lt;p&gt;Given that the consensus group changes over time, however,
what set of public keys does Bob check the collective signatures against?
This is where Chainiac&amp;rsquo;s first key feature comes into play.
Whenever the consensus group changes,
a threshold of the &lt;em&gt;previous&lt;/em&gt; consensus group
collectively signs a &amp;ldquo;forward link&amp;rdquo;
containing two pieces of information:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A secure hash-pointer to the first block committed by
the &lt;em&gt;next&lt;/em&gt; consensus group, and&lt;/li&gt;
&lt;li&gt;A description of how the consensus group changed;
i.e., which miners&amp;rsquo; public keys were added and/or removed.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The following figure illustrates how backward and forward links
work in Chainiac.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&#34;signed-chain.svg&#34; alt=&#34;Blockchain with collectively-signed forward links&#34; style=&#34;width:70%&#34;&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;All committed blocks contain back links represented by hashes,
as in a conventional blockchain.
However, once the &lt;em&gt;successor&lt;/em&gt; to a given block is committed,
the consensus group responsible for the previous block
creates and collectively signs a forward link &amp;ndash;
a bit like securely issuing an informational &amp;ldquo;addendum&amp;rdquo;
for the prior, already-committed block.
This new addendum is not covered by the next block&amp;rsquo;s backward hash link &amp;ndash;
it can&amp;rsquo;t be, because that would create
a cryptographically impossible circular dependency.
The forward link&amp;rsquo;s security is instead assured by a collective signature,
which encapsulates efficient evidence that a large number of miners
have witnessed, verified, and signed off on this forward link&amp;rsquo;s correctness.&lt;/p&gt;

&lt;p&gt;Using these collectively signed forward links
supplied by Alice along with the block headers,
Bob can securely walk forward in time from his last blockchain reference point
to Alice&amp;rsquo;s,
without actually having to trust Alice at all.
Bob learns about all relevant consensus group changes along the way,
so that he always knows exactly the correct set of public keys
against which to check each collective signature in the chain.
Since all of these forward links are collectively signed by many miners,
Alice cannot create a fake blockchain that Bob will accept
unless she compromises or colludes with a large number of miners
during the time period since Bob last synced with the blockchain.&lt;/p&gt;

&lt;h1 id=&#34;leaping-through-time-with-skipchains&#34;&gt;Leaping Through Time with SkipChains&lt;/h1&gt;

&lt;p&gt;Between the back links that are already standard in blockchains,
and the collectively-signed forward links that Chainiac introduces,
any party can securely &amp;ldquo;catch up&amp;rdquo; on a Chainiac blockchain
via peer-to-peer communication with anyone else who is more up-to-date &amp;ndash;
provided the latter party has actually stored and can forward
&lt;em&gt;all&lt;/em&gt; the intervening block headers and forward links.
As with the SPV approach, however,
even just downloading and storing all block &lt;em&gt;headers&lt;/em&gt;
can impose a significant bandwidth, power, and storage burden
on low-power mobile devices.&lt;/p&gt;

&lt;p&gt;For this reason, Chainiac introduces &lt;em&gt;SkipChains&lt;/em&gt;,
a novel cryptographic blockchain structure loosely inspired by
&lt;a href=&#34;https://en.wikipedia.org/wiki/Skip_list&#34;&gt;skip lists&lt;/a&gt;.
The fundamental idea of a skip list is to augment a conventional
&lt;a href=&#34;https://en.wikipedia.org/wiki/Linked_list&#34;&gt;singly-linked&lt;/a&gt; or
&lt;a href=&#34;https://en.wikipedia.org/wiki/Doubly_linked_list&#34;&gt;doubly-linked list&lt;/a&gt;
with additional &lt;em&gt;long-distance&lt;/em&gt; links,
which are structurally redundant,
but allow much more efficient traversal and search
across arbitrary distances along the timeline
in a logarithmic, rather than linear, number of steps.&lt;/p&gt;

&lt;p&gt;Chainiac adapts the skip list idea to blockchains
by adding long-distance links both forward and backward in time,
as illustrated below.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&#34;skipchain.svg&#34; alt=&#34;SkipChain with long-distance forward and backward links&#34; style=&#34;width:70%&#34;&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;When Chainiac creates a new block,
that block includes not just one hash link to the immediately prior block,
but also additional hash links to that point farther backward in time.
This way, any party can find, or prove the integrity of,
an old transaction anywhere in a blockchain&amp;rsquo;s prior history
with a small (logarithmic) number of hash-link steps.
This long-distance back-link refinement is not new or unique to Chainiac;
other blockchain and hash-chain designs have incorporated this idea
for backward links.&lt;/p&gt;

&lt;p&gt;What &lt;em&gt;is&lt;/em&gt; new and unique to Chainiac is
to provide long-distance &lt;em&gt;forward&lt;/em&gt; links as well
via collective signatures.
With both long-distance forward and backward links,
a SkipChain becomes cryptographically traversable in both directions,
such that one party can efficiently prove the correctness of a transaction
anywhere in time with respect to
the other party&amp;rsquo;s reference point on the blockchain,
in a logarithmic number of steps,
regardless of which party has a more up-to-date view of the blockchain.&lt;/p&gt;

&lt;p&gt;If Alice wishes to show her professional certificate to Bob, for example,
but Bob&amp;rsquo;s personal device last synced with the blockchain
months or years before when Alice received her certificate,
Alice&amp;rsquo;s device simply sends Bob&amp;rsquo;s device
a small (logarithmic) number of collectively signed forward links
to prove securely that Alice&amp;rsquo;s certificate is indeed on the blockchain.
Through this peer-to-peer interaction,
Bob&amp;rsquo;s device has now obtained a more recent blockchain reference point
from which he can not only validate Alice&amp;rsquo;s certificate,
but also validate future blockchain updates more securely.
Even if a particularly strong attacker
eventually cracks or steals the private keys
of a threshold number of members of an old consensus group,
the attacker cannot get Bob &amp;ndash;
or any other party with a more recent reference point &amp;ndash;
to accept a fake version of the blockchain.&lt;/p&gt;

&lt;h1 id=&#34;secure-key-evolution-and-management-in-skipchains&#34;&gt;Secure Key Evolution and Management in SkipChains&lt;/h1&gt;

&lt;p&gt;Like single-block forward links,
long-distance forward links in Chainiac
include metadata summarizing any changes in the public keys
of consensus group members between the source and destination points in time.
A long-distance forward link effectively summarizes all the public key changes
in the consensus group
across all the one-hop forward links the long-distance link skips over.
The size of such an update is limited
to the total number of public keys in the consensus group,
regardless of the distance in time or number of blocks the link represents,
in the worst-case where the consensus group &amp;ldquo;rolls over&amp;rdquo; completely
during that time period.&lt;/p&gt;

&lt;p&gt;Since a long-distance forward link cannot actually be formed and signed
until the (future) block it points to has been committed to the blockchain,
Chainiac keeps a subset of &amp;ldquo;old&amp;rdquo; consensus groups alive and active
for longer than they might otherwise be,
&amp;ldquo;watching&amp;rdquo; for the blockchain to grow long enough
to create and collectively sign the desired forward link.
This extension of the &amp;ldquo;signing lifetimes&amp;rdquo; of old consensus groups
can create a risk of marginally weakening security,
by giving a potential attacker more time to crack or steal
the private keys of a threshold number of members of that consensus group.
The collective signatures still ensure that the attacker
would have to compromise &lt;em&gt;many&lt;/em&gt; such members&amp;rsquo; private keys and not just one,
but even so, we would prefer to minimize the blockchain&amp;rsquo;s potential weakness
to a powerful, patient, and persistent attacker.&lt;/p&gt;

&lt;p&gt;We can bolster Chainiac&amp;rsquo;s security against long-term persistent attacks
in at least two ways.&lt;/p&gt;

&lt;p&gt;First, Chainiac can enforce a maximum forward-link distance:
one year, for example.
Under such a policy, all honest consensus group members
securely erase their private keys after at most one year,
limiting the time window an attacker has to compromise
a threshold number of private keys from an old consensus group.
This forward-link distance limit implies that extremely out-of-date
devices needing to catch up with the blockchain after multiple years
will need to catch up &amp;ldquo;one year at a time&amp;rdquo; &amp;ndash;
at a cost linear rather than logarithmic in the number of years.
This is probably not much of a problem in practice,
since few electronic devices tend to remain in use
after &lt;em&gt;that&lt;/em&gt; many years anyway.&lt;/p&gt;

&lt;p&gt;A second way to strengthen a SkipChain&amp;rsquo;s forward security,
which we have not yet implemented but plan to,
is for consensus group members to use distinct, fresh key pairs
when collectively signing each successive level of long-distance forward links.
Each time a consensus group signs a forward link at one level,
all consensus group members derive new key pairs for the next level
and include the next-level public keys in the metadata
for the forward link currently being signed.
Once the collective signature at this level is formed,
all honest consensus group members securely erase their private keys
at this level and retain only the private keys for the next level.
In this way, a powerful attacker
who can compromise a threshold number of private keys over a long time period
obtains only the ability to forge comparably long-distance forward links.
All shorter-distance forward links remain secure and unforgeable.
Such an attacker then can only compromise devices
that sync with the blockchain extremely rarely.
Devices that sync more regularly,
either by going online or via peer-to-peer updates,
remain immune to such an attacker
because they only ever follow shorter-distance forward links.&lt;/p&gt;

&lt;p&gt;Note that even devices that sync regularly with the blockchain
may sometimes still have to follow long-distance &lt;em&gt;backward&lt;/em&gt; links,
e.g., if Alice obtained her certificate several years
before she needs to show it to Bob.
Long-distance backward links are less of a security concern, however,
because they are represented by hashes rather than collective signatures,
and a hash has no private key that might be stolen or coerced.
The cryptographic hash &lt;em&gt;algorithm&lt;/em&gt; might still eventually be compromised,
but by then hopefully the blockchain has migrated to
a stronger hash algorithm with a wider output.
At this point, assuming the migration is handled carefully,
all devices with reasonably up-to-date software
need rely only on the new, stronger hashes
and become invulnerable even to an outright break
in the original hash algorithm.&lt;/p&gt;

&lt;h1 id=&#34;summary&#34;&gt;Summary&lt;/h1&gt;

&lt;p&gt;Current blockchains such as Bitcoin or Ethereum,
while showing great promise for notarization applications
such as academic credentials or professional certificates,
present the serious problem of not supporting secure
offline or peer-to-peer verification.
SkipChains solve this problem by creating a blockchain
that is cryptographically traversable and efficiently verifiable
both forward and backward in time,
using hashes for back links and collective signatures for forward links.
Multiple levels of links, inspired by skip lists,
enable efficient traversal and proofs over long distances in both directions
in a small (logarithmic) number of steps.
We hope that the offline and peer-to-peer verifiability properties
that SkipChains provide
will substantially extend the effective applicability
of future blockchain technology,
as well as increase their robustness and resilience
to communication failures or routing-based attacks.&lt;/p&gt;

&lt;!--
---

*I wish to thank ...
for helpful feedback on early drafts of this post.*
--&gt;
</description>
    </item>
    
    <item>
      <title>Technology Governs Us. Will it Govern Us Well?</title>
      <link>https://bford.github.io/2017/06/23/turing50/</link>
      <pubDate>Fri, 23 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://bford.github.io/2017/06/23/turing50/</guid>
      <description>&lt;p&gt;&lt;center&gt;
&lt;em&gt;This blog post is a transcript of my opening remarks on the panel
&amp;ldquo;Restoring Personal Privacy without Compromising National Security&amp;rdquo;
at the &lt;a href=&#34;https://www.acm.org/turing-award-50/conference&#34;&gt;50 Years of the ACM Turing Award Celebration&lt;/a&gt;.&lt;/em&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;We now live in a world in which the rules coded into the technology we use
plays as important a role in governing our lives as the formal laws written in
the public law books.
&lt;a href=&#34;http://harvardmagazine.com/2000/01/code-is-law-html&#34;&gt;Code is law&lt;/a&gt; already,
for better or worse.
Unfortunately both the technology and policy communities still tend to treat
technology as a simple set of tools, like a mechanical watch, home appliance,
or automobile, which always unquestioningly serves its operator.  A smart watch
or home appliance can now monitor our behavior and report it to a company or
government, can enforce remotely-controlled rules determining when and how it
operates, and can remotely determine what content we are allowed to view or
when and for whom the smart lock on a door to our own home opens.  Today’s cars
can already be remotely disabled or attacked, and soon will be capable of
governing where we can go and when. Technology is no longer just a set of
obedient tools but, for better or worse, also an inherent part of the system of
governance that determines what individual freedoms we do and don’t have.&lt;/p&gt;

&lt;p&gt;Unfortunately, the mindset of technology as an obedient toolset has led both
government and industry to deploy technology in ways that undermine
long-standing governance principles and undermine the basic freedoms and rights
we depend on democratic governments to uphold: principles such as rule of law,
separation of powers, and limited warrant-based search.&lt;/p&gt;

&lt;p&gt;The principle of rule-of-law states that the public should have the right to
know, debate, and challenge the rules that govern their lives.  As technology
is increasingly critical in enforcing the rules by which we live, we must
demand and work to ensure that the rule-of-law principle translates properly
into the digital domain.  We have now have well-understood technology,
especially cryptographic tools, that can ensure the integrity and correctness
of publicly-known processes while keeping sensitive details private, consistent
with rule-of-law principles.  But so far we have seen little to development or
deployment of these technologies for this purpose.&lt;/p&gt;

&lt;p&gt;Instead, law enforcement and surveillance agencies have shifted ever deeper
into the shadows. Ed Snowden and other whistleblowers cast much-needed light on
the proliferating morass of secret law embodied not only formally in the secret
proceedings of bodies such as the FISA court, but also the &lt;em&gt;de facto&lt;/em&gt; secret law
embodied in secret mass surveillance technologies, secret stockpiles of
software exploits, and the secret agency-internal processes that purportedly
govern their use.  The secrecy and non-transparency of these processes are
antithetical to democracy and rule of law, whether embodied in secret FISA
decisions or in code and databases designed and deployed in secret by
three-letter agencies.&lt;/p&gt;

&lt;p&gt;Separation of powers is intended to prevent any branch of government from
acquiring too much unaccountable power.  We also have well-understood
technology to split trust across multiple independently-operated authorities,
such as Byzantine consensus and threshold cryptography, but again it is rarely
used. In the “technology as dumb tool” mindset, government deploys
law-enforcement and surveillence technologies largely in the domain of the
executive branch.  Only that one branch effectively has any understanding of,
let alone control over, the deep technological rules and processes that
determine what protections we do and don’t have from law-enforcement and
surveillance.  Legislative and judicial oversight becomes merely a fig-leaf,
along with the whole principle of separation of powers, when no one in the
legislature or judiciary actually has any understanding of, or control over,
deep technology systems and processes deployed exclusively in the executive
branch.&lt;/p&gt;

&lt;p&gt;Finally, our Fourth and Fifth amendments are intended to impose strict limits
on government searches for law-enforcement or surveillance purposes,
recognizing that that it is more important to have democratic freedoms to
defend than to catch every last criminal.  But the obsolete mindset of
technology as “dumb tools” has led many policy-makers to underestimate the
centrality of personal devices in our lives.  Policy-makers often treat
personal devices such as laptops and smartphones, and the encrypted data they
might contain, as mere possessions similar to the contents of one’s home, and
claim that law-enforcement agencies are somehow entitled to access to these
devices.  However, this mindset neglects the reality that we now carry personal
devices with us everywhere, using them as extensions of our thoughts and
memories, and to intermediate our most intimate communications.  While the
possessions in our home enjoy Fourth Amendment protections against unreasonable
search and seizure, the contents of our minds also have Fifth Amendment
protections against self-incrimination.  Even if I remember committing a crime,
the government cannot force me to admit it, even with a warrant: that is, under
human-rights principles my mind is a legitimate “warrant-proof space.”  Now
that we rely on mobile personal devices to help us remember and communicate
wherever we travel, they have effectively become extensions of our minds and
bodies &amp;ndash; and as wearables and implants proliferate they will become only more
so.  We must recognize that our Fifth amendment protections are not complete or
effective today unless they extend the warrant-proof space of our minds to the
electronic extensions embodied in our personal devices.&lt;/p&gt;

&lt;p&gt;There is no pure technology solution divorced from policy, but there is also no
pure policy solution divorced from the reality of technology as a de facto
policy-enforcement mechanism.  We must intelligently integrate technology and
policy to restore the trustworthiness of democratic processes, rights, and
freedoms in the digital age.  Again, we have the technology tools to accomplish
this, but we must use them. Research on this topic that Joan and I and others
have worked on has demonstrated how technology can be married with policy
principles for a few proven law-enforcement processes such as
&lt;a href=&#34;http://dedis.cs.yale.edu/dissent/papers/bandits-abs&#34;&gt;private set-intersection of cell tower dumps&lt;/a&gt;
and &lt;a href=&#34;http://dedis.cs.yale.edu/dissent/papers/wpes16-chaining-abs&#34;&gt;privacy-preserving contact chaining&lt;/a&gt;.
We can and must design technology to uphold rule-of-law, by transparently
enforcing public processes for law enforcement and surveillance while keeping
details of investigations and non-targeted users private.  We can and must
design technology to enforce separation of powers, such that systems
independently operated by each branch cooperate and keep each other in check in
implementing electronic law-enforcement and surveillance processes.  We must
work to ensure that technology used in law-enforcement and surveillance
verifiably adheres to the strict limits the Fourth Amendment allows for search
of ordinary possessions and business records. Finally, our law-enforcement and
surveillance technologies must respect the contents of our
electronically-augmented minds as legitimate warrant-proof spaces essential to
upholding our freedoms of thought, speech, and association.&lt;/p&gt;

&lt;p&gt;In summary, we must discard the obsolete mindset of technology as merely a set
of dumb tools and recognize that technology has become, for better worse, an
integral part of our system of governance that determines what rights and
freedoms we all do and don’t have.  Technologists need to recognize this, and
work closely with the policy community to ensure that the policy principles
underlying our basic individual freedoms are not “lost in translation” to
digital society.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;The author wishes to thank &lt;a href=&#34;http://www.cs.yale.edu/homes/jf/&#34;&gt;Joan Feigenbaum&lt;/a&gt;
for organizing the panel, and
&lt;a href=&#34;https://www.acm.org/turing-award-50/conference&#34;&gt;all the distinguished panelists&lt;/a&gt;
for thought-provoking discussion and feedback
on early drafts of this statement.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Selfish Mining in Bitcoin and ByzCoin</title>
      <link>https://bford.github.io/2016/xx/xx/selfish/</link>
      <pubDate>Mon, 31 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://bford.github.io/2016/xx/xx/selfish/</guid>
      <description>

&lt;p&gt;XXX intro&lt;/p&gt;

&lt;p&gt;summary of selfish mining&lt;/p&gt;

&lt;p&gt;selfish mining as a transparency problem:
you get to build on a blockchain head you haven&amp;rsquo;t published.&lt;/p&gt;

&lt;p&gt;same as transparency problem in Apple FBI case for example;
that&amp;rsquo;s what CoSi is for.&lt;/p&gt;

&lt;p&gt;solution: any keyblock you build on is collectively signed,
and the next block&amp;rsquo;s hash covers the last block&amp;rsquo;s signature.&lt;/p&gt;

&lt;p&gt;if you withhold a block, you can&amp;rsquo;t get a collective signature on it;
without that collective signature,
you can&amp;rsquo;t secretly mine a next block on top of it.&lt;/p&gt;

&lt;h2 id=&#34;selfish-mining&#34;&gt;Selfish Mining&lt;/h2&gt;

&lt;p&gt;Finally, we consider the now much more well-understood problem of
&lt;a href=&#34;http://hackingdistributed.com/2013/11/04/bitcoin-is-broken/&#34;&gt;selfish mining&lt;/a&gt;.
A selfish miner strategically withholds some of its successfully mined blocks
in attempt to gain a higher share of mining rewards,
by causing other miners to waste effort mining redundant blocks.
For example, if Greedy Greg successfully mines a new block,
he might deliberately delay announcing it.
If Innocent Ivan announces a competing block,
Greg quickly races to announce and widely distribute his,
which may reliably overtake Ivan&amp;rsquo;s if Greg is fast and well-connected.
Alternatively, if Greg manages to mine a &lt;em&gt;second&lt;/em&gt; block in private
before a competing first block appears,
then Greg is in the enviable position of being able to &amp;ldquo;trump&amp;rdquo;
and eliminate that competing block once it does appear,
simply by revealing his longer private blockchain.&lt;/p&gt;

&lt;p&gt;While ByzCoin&amp;rsquo;s keyblock mining mechanism alone is still
vulnerable to selfish mining,
its microblock commitment process using Byzantine consensus
provides a clean, simple defense against selfish mining.
Any transaction microblock the consensus group commits
contains a cryptographic hash of the latest known keyblock at the time,
and any newly-mined keyblock must similarly contain
a cryptographic hash of a recently-committed microblock
(e.g., within a few microblocks from the head).
Whenever the consensus group commits a new microblock,
all honest members verify that the keyblock pointer in the new microblock
is consistent with those in all prior microblocks,
ensuring that any new keyblock is &amp;ldquo;locked in&amp;rdquo;
irreversably once the new keyblock is known.
This leaves only seconds, rather than minutes,
in which a selfish miner could
try to announce and distribute a competing keyblock.
Further, because each keyblock must reference a recent microblock,
any newly-mined keyblock becomes invalid and useless
if its owner fails to announce it
within a few microblock commitment cycles &amp;mdash;
again, on the order of seconds rather than minutes.&lt;/p&gt;

&lt;p&gt;In essence, ByzCoin&amp;rsquo;s microblock commit mechanism
enforces transparency on the keyblock mining process,
ensuring that a selfish ByzCoin miner would likely be faced with
a vanishingly small probability of profiting from
any keyblock-withholding strategy.&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;This post of course represents only an informal,
and no doubt incomplete, analysis
of the differences in incentives between Bitcoin and ByzCoin,
focusing primarily on mining incentives.
It is quite possible that a full, rigorous incentive analysis of ByzCoin
may reveal new incentive-compatibility issues that its architecture introduces.
Further, ByzCoin is still an experimental protocol
under rapid development and evoluation.&lt;/p&gt;

&lt;p&gt;Given these caveats, however,
ByzCoin&amp;rsquo;s architecture at least appears to be much more resilient
to the known strategic mining attacks against Bitcoin,
whether through block withholding or deliberate forking.
In particular,
by replacing Bitcoin&amp;rsquo;s instant-gratification, winner-take-all reward model
with a delayed-gratification, investment-dividend model,
ByzCoin ensures that the distribution of mining profits are fixed
long before any strategic miner might know about or be able to respond to
the appearance of a goose egg or other transaction fee variance.
By ensuring that keyblocks and microblocks track each other cryptographically,
ByzCoin forces miners either to announce new keyblocks quickly
or else lose them,
making selfish mining unprofitable.&lt;/p&gt;

&lt;p&gt;In short, it does not appear necessary for new cryptocurrencies to
&amp;ldquo;&lt;a href=&#34;http://freedom-to-tinker.com/2016/10/21/bitcoin-is-unstable-without-the-block-reward/&#34;&gt;make the block reward permanent and accept monetary inflation
as inevitable&lt;/a&gt;&amp;rdquo;
as Narayanan suggests.
Whether inflationary or deflationary monetary policies are preferable
is an important and highly debatable question,
but it need not be constrained by technical weaknesses of Bitcoin.
With more sophisticated blockchain architectures such as ByzCoin,
there is plenty of hope that mining incentives can work
independent of monetary policy.&lt;/p&gt;

&lt;!--
---

*I wish to thank ...
for helpful feedback on early drafts of this post.*
--&gt;
</description>
    </item>
    
    <item>
      <title>Untangling Mining Incentives in Bitcoin and ByzCoin</title>
      <link>https://bford.github.io/2016/10/25/mining/</link>
      <pubDate>Tue, 25 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://bford.github.io/2016/10/25/mining/</guid>
      <description>

&lt;!--

&lt;figure &gt;
    
        &lt;img src=&#34;blockchain.jpg&#34; /&gt;
    
    
&lt;/figure&gt;

--&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&#34;blockchain.jpg&#34; width=&#34;100%&#34;&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;As the first widely-deployed cryptocurrency,
&lt;a href=&#34;https://bitcoin.org/&#34;&gt;Bitcoin&lt;/a&gt;
has proven hugely successful and inspired a
&lt;a href=&#34;https://www.cryptocoinsnews.com/study-shows-bitcoin-blockchain-investments-near-300-million-first-six-months/&#34;&gt;blockchain fever&lt;/a&gt;
(or &lt;a href=&#34;https://joi.ito.com/weblog/2016/06/14/-the-fintech-bu.html&#34;&gt;is it a bubble?&lt;/a&gt;).
Bitcoin&amp;rsquo;s security and economic assumptions
are showing significant fractures, however.
Following previously-identified
&lt;a href=&#34;http://hackingdistributed.com/2013/11/04/bitcoin-is-broken/&#34;&gt;selfish mining&lt;/a&gt;
and
&lt;a href=&#34;http://eprint.iacr.org/2015/796&#34;&gt;stubborn mining&lt;/a&gt; attacks,
&lt;a href=&#34;http://freedom-to-tinker.com/2016/10/21/bitcoin-is-unstable-without-the-block-reward/&#34;&gt;new research from Princeton&lt;/a&gt;
being
&lt;a href=&#34;http://randomwalker.info/publications/mining_CCS.pdf&#34;&gt;presented at CCS&lt;/a&gt;
identifies further incentive weaknesses
that appear as
&lt;a href=&#34;http://qz.com/681996/everything-you-need-to-know-about-the-bitcoin-halving-event/&#34;&gt;transaction fees supplant block rewards&lt;/a&gt;
as the primary incentive for mining.&lt;/p&gt;

&lt;p&gt;In short, miners motivated by transaction fees have even greater incentive
to deviate strategically from the standard Bitcoin protocol
in selfish and potentially destructive ways.
In his summary,
&lt;a href=&#34;http://freedom-to-tinker.com/2016/10/21/bitcoin-is-unstable-without-the-block-reward/&#34;&gt;Arvind Narayanan notes&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;i&gt;
At a deeper level, our results suggest a fundamental rethinking of the role of block rewards in cryptocurrency design.
&lt;/i&gt;
&lt;/blockquote&gt;

&lt;p&gt;At least one such &amp;ldquo;rethinking of the role of block rewards&amp;rdquo;
already exists, however.
You may judge for yourself
how &amp;ldquo;fundamental&amp;rdquo; this rethinking is.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://hackingdistributed.com/2016/08/04/byzcoin/&#34;&gt;ByzCoin&lt;/a&gt;
is an experimental protocol created by the
&lt;a href=&#34;http://dedis.epfl.ch/&#34;&gt;Decentralized and Distributed Systems (DEDIS) lab&lt;/a&gt; at
&lt;a href=&#34;http://epfl.ch/&#34;&gt;EPFL&lt;/a&gt;
and presented at the
&lt;a href=&#34;https://www.usenix.org/conference/usenixsecurity16/technical-sessions/presentation/kogias&#34;&gt;USENIX Security&lt;/a&gt;
conference this past summer.
While a rigorous incentive analysis has not yet been done on ByzCoin,
informal analysis suggests that ByzCoin&amp;rsquo;s architecture
may be far more resilient to these known incentive-compatibility weaknesses.
In essence, both the new attacks &amp;mdash;
and the earlier selfish or stubborn mining attacks &amp;mdash;
appear to be ineffective against ByzCoin.
This blog post informally compares the way Bitcoin and ByzCoin
handle transaction fee incentives,
deferring the topic of selfish mining to a followup post.&lt;/p&gt;

&lt;h2 id=&#34;instant-gratification-in-bitcoin&#34;&gt;Instant Gratification in Bitcoin&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.bigfatpurse.com/2015/01/12-timeless-and-invaluable-investment-lessons-from-dilbert/&#34;&gt;
&lt;img src=&#34;dilbert.png&#34; style=&#34;float:right&#34;&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In Bitcoin, miners earn &lt;em&gt;immediate rewards&lt;/em&gt;
for successfully solving the cryptographic puzzles
that allow them to extend the blockchain.
These rewards are divided into &lt;em&gt;block rewards&lt;/em&gt;,
in which the miner may create a fixed amount of &amp;ldquo;new money&amp;rdquo;
according to
&lt;a href=&#34;http://www.coindesk.com/making-sense-bitcoins-halving/&#34;&gt;a hard-coded schedule&lt;/a&gt;,
and &lt;em&gt;transaction fees&lt;/em&gt;,
which the miner receives from Bitcoin users as an incentive
to include their transactions in the blockchain.
As block rewards regularly decrease by half &amp;mdash;
eventually dropping to zero in the year 2140 &amp;mdash;
miners&amp;rsquo; incentives shift from block rewards to transaction fees.
For the moment, however, the important point
is that Bitcoin confers both block rewards and transaction fees
to miners &lt;em&gt;immediately&lt;/em&gt;
upon the successful mining of a new block.
We might describe Bitcoin
as an &amp;ldquo;instant gratification cryptocurrency.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;Note that Bitcoin does impose a 100-block delay
before newly-mined block rewards can actually be &lt;em&gt;spent&lt;/em&gt;.
But this rule does not apply to transaction fees &amp;mdash;
and even if it did, that would be irrelevant for mining incentive purposes.
The critical fact is that the miner immediately &lt;em&gt;knows&lt;/em&gt; what his payoff will be
for successfully mining a particular block at a particular time,
and can use that information to mine strategically,
e.g., by selfishly withholding blocks
or deliberately forking the blockchain.&lt;/p&gt;

&lt;h2 id=&#34;delayed-gratification-in-byzcoin&#34;&gt;Delayed Gratification in ByzCoin&lt;/h2&gt;

&lt;div style=&#34;float:right&#34;&gt;
&lt;center&gt;
&lt;img src=&#34;byzcoin-arch.svg&#34;&gt;
&lt;p&gt;
&lt;b&gt;ByzCoin architecture&lt;/b&gt;
&lt;/center&gt;
&lt;/div&gt;

&lt;p&gt;Mining in ByzCoin, in contrast,
does not immediately confer &lt;em&gt;any&lt;/em&gt; reward on the successful miner,
but instead represents an &lt;em&gt;investment&lt;/em&gt;
whose rewards accrue gradually over a fixed time period,
such as the following day or week.
In particular, solving a cryptographic puzzle
and mining a &lt;em&gt;keyblock&lt;/em&gt; in ByzCoin
rewards the miner with a temporary &lt;em&gt;share&lt;/em&gt; in a &lt;em&gt;consensus group&lt;/em&gt;.
This consensus group is defined by a sliding window
of recently-mined blocks:
e.g., the last 1008 blocks, representing one share per keyblock mined
within approximately the past week,
at Bitcoin&amp;rsquo;s self-adjusting mining rate of 10 minutes per block.
Adopting a refinement
&lt;a href=&#34;http://eprint.iacr.org/2016/917.pdf&#34;&gt;recently suggested by Pass and Shi&lt;/a&gt;,
ByzCoin also adds a short delay, e.g., six blocks (about one hour),
before a newly-mined keyblock &lt;em&gt;enters&lt;/em&gt; the consensus group,
ensuring that miners agree on all rather than just &amp;ldquo;almost all&amp;rdquo;
consensus group members in the presence of temporary keyblock forks.&lt;/p&gt;

&lt;p&gt;The consensus group formed this way
then uses a scalable
&lt;a href=&#34;https://en.wikipedia.org/wiki/Byzantine_fault_tolerance&#34;&gt;Byzantine consensus&lt;/a&gt;
protocol based on
&lt;a href=&#34;http://dedis.cs.yale.edu/dissent/papers/witness-abs&#34;&gt;collective signing&lt;/a&gt;
to agree on and commit to &lt;em&gt;microblocks&lt;/em&gt; containing actual transactions.
Building on ideas in Eyal and Sirer&amp;rsquo;s
&lt;a href=&#34;http://hackingdistributed.com/2015/10/14/bitcoin-ng/&#34;&gt;Bitcoin-NG&lt;/a&gt;,
this decoupling enables ByzCoin to commit transaction microblocks
much more frequently than keyblocks are mined
(e.g., in seconds rather than minutes).
Due to its Byzantine consensus, however,
ByzCoin subsequently
ensures that microblocks are immediately committed permanently and
cannot subsequently be reverted or double-spent even in the near future,
as is possible in Bitcoin or Bitcoin-NG.&lt;/p&gt;

&lt;p&gt;Independent of its Byzantine consensus process,
ByzCoin also makes an important change to the way miners earn rewards.
Instead of conferring block rewards and transaction fees immediately
on the miner of each new block,
ByzCoin divides all block rewards and transaction fees
evenly among the shareholders comprising the current consensus group.
If the consensus group consists of the last 1008 successful keyblock miners,
for example,
then the transaction fees derived from all transactions committed
while this consensus group is in charge &amp;mdash;
together with the block reward associated
with the mining of the next keyblock &amp;mdash;
are split evenly among the 1008 shareholders
comprising the current consensus group.&lt;/p&gt;

&lt;p&gt;Thus, while ByzCoin miners earn no rewards immediately
upon mining a new keyblock,
that keyblock confers on them a &lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;1008&lt;/sub&gt; share
of all the block rewards &lt;em&gt;and&lt;/em&gt; transaction fees earned by anyone
during the 1008 sliding-window positions
during which this share is within the consensus group.
In short, ByzCoin gives miners &lt;em&gt;delayed&lt;/em&gt;
rather than instant gratification.
And this characteristic could have important benefits
in the stability and security of its mining incentives,
as we discuss next.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;golden-egg.jpg&#34; style=&#34;float:right;width:256px;height:266px&#34;&gt;&lt;/p&gt;

&lt;h2 id=&#34;the-goose-egg-problem&#34;&gt;The Goose Egg Problem&lt;/h2&gt;

&lt;p&gt;The creator of any Bitcoin transaction defines a &lt;em&gt;transaction fee&lt;/em&gt;,
which goes to the miner
as an incentive to include the transaction in the blockchain.
Occasionally &amp;mdash;
most likely in error &amp;mdash;
users have proven spectacularly generous with their transaction fees.
Transactions with inordinately huge fees are sometimes called &lt;em&gt;goose eggs&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;For example,
in 2015 a user
&lt;a href=&#34;https://bitcointalk.org/index.php?topic=135665.0&#34;&gt;accidentally donated 111 BTC to a miner&lt;/a&gt;,
which in this case the lucky miner graciously refunded.
This past April a transaction with
&lt;a href=&#34;https://www.cryptocoinsnews.com/user-error-sees-bitcoin-mining-pool-earn-135000-fee/&#34;&gt;a 291 BTC fee&lt;/a&gt;
(worth $139,000 at the time) appeared.
But these are only the most spectacular goose eggs:
as Arvind Narayanan observed in May,
&amp;ldquo;&lt;a href=&#34;https://twitter.com/random_walker/status/729800710280335361&#34;&gt;there have been ~150 transactions with a fee over $1,000.&lt;/a&gt;&amp;rdquo;&lt;/p&gt;

&lt;p&gt;For several years,
&lt;a href=&#34;https://www.cs.cornell.edu/people/egs/&#34;&gt;Emin Gün Sirer&lt;/a&gt;
and others have warned that goose eggs pose
an incentive problem to Bitcoin security,
in strategic miners may be inclined to &amp;ldquo;fight over&amp;rdquo; the goose egg.
Suppose for example that a goose egg appears in the transaction pool,
and Innocent Ivan is the first miner lucky enough
to create a valid Bitcoin block including this transaction.
But suppose another miner, Greedy Griffith, is paying attention and controls
significant mining power (but still under &lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;3&lt;/sub&gt; of the total).&lt;/p&gt;

&lt;p&gt;Even if Greedy Griffith is well aware of Innocent Ivan&amp;rsquo;s new block,
Griffith may be strongly inclined to ignore it and instead try to mine
a &lt;em&gt;competing&lt;/em&gt; block in hopes of &amp;ldquo;stealing&amp;rdquo; the goose egg from Ivan.
To pull off this heist,
Griffith may have to &amp;ldquo;get lucky&amp;rdquo; twice in a row
and produce &lt;em&gt;two&lt;/em&gt; new blocks
before another miner extends Ivan&amp;rsquo;s chain:
one block to compete with Ivan&amp;rsquo;s, and a second block
to convince other miners to ditch Ivan&amp;rsquo;s chain for Griffith&amp;rsquo;s.
Even if this gamble presents fairly long odds for Griffith,
the spectacular payoff presented by the goose egg makes it worth the risk.&lt;/p&gt;

&lt;div style=&#34;float:right&#34;&gt;

&lt;style&gt;
.Pileup {
 width:240px;
 height:180px;
 background:url(&#39;pileup-stat.gif&#39;);
}
.Pileup:hover {
 cursor:pointer; 
 background:url(&#39;pileup-anim.gif&#39;);
}
&lt;/style&gt;

&lt;center&gt;
&lt;div class=&#34;Pileup&#34;&gt;&lt;/div&gt;
&lt;p&gt;
&lt;b&gt;Bitcoin miners find a goose egg&lt;/b&gt;
&lt;/center&gt;
&lt;/div&gt;

&lt;p&gt;If &lt;em&gt;multiple&lt;/em&gt; miners independently emulate Greedy Griffith,
this could lead to chaos and large amounts of wasted hash power
as miners clamor over the goose egg.
In the worst case, if multiple large mining pools behaved this way,
the blockchain could even deadlock or permanently hard-fork
as different entrenched pools stubbornly refuse to honor any blockchain
other than the one in which &lt;em&gt;they&lt;/em&gt; captured the egg.&lt;/p&gt;

&lt;p&gt;Consider ByzCoin, in contrast,
where mining a keyblock confers no immediate reward,
but merely a &lt;em&gt;share&lt;/em&gt; in rewards that arrive later
while the mined keyblock is part of a consensus group.
If a transaction containing a goose egg appears,
the one and only way for &lt;em&gt;any&lt;/em&gt; miner to profit from it
is to divide it equally across the entire consensus group,
like dividends paid to shareholders.
At this point, it is too late for any greedy keyblock mining strategy
to affect this distribution of profits significantly.&lt;/p&gt;

&lt;p&gt;To start with, since ByzCoin irreversibly commits transactions
every few seconds as part of microblocks,
a greedy miner has only seconds, not minutes,
to carry out any potential mining strategy &amp;mdash;
whereas the expected time to mine a new keyblock is still long
(e.g., 10 minutes).
Second, any profit advantage of such a strategy will be counted
only in &lt;em&gt;shares&lt;/em&gt; of a goose egg;
no single miner ever gets the whole egg.
For example, suppose a goose egg appears at about the time Innocent Ivan
mines a new keyblock.
Greedy Griffith can try to mine against Ivan&amp;rsquo;s keyblock,
but this will not change the consensus group that distributes the goose egg,
since new keyblocks must &amp;ldquo;mature&amp;rdquo; for a time (e.g., six blocks)
before they become active shares in any consensus group.
Griffith would have to displace not only Ivan&amp;rsquo;s keyblock
but &lt;em&gt;several blocks before it&lt;/em&gt; to affect the profit distribution at all.
Even if he succeeded, Griffith would get only an additional 1/1008th
of the goose egg for each additional share acquired strategically.&lt;/p&gt;

&lt;h2 id=&#34;transaction-fee-market-incentives&#34;&gt;Transaction Fee Market Incentives&lt;/h2&gt;

&lt;p&gt;The &lt;a href=&#34;http://freedom-to-tinker.com/2016/10/21/bitcoin-is-unstable-without-the-block-reward/&#34;&gt;new incentive analysis by Narayanan&amp;rsquo;s group&lt;/a&gt;
in essence observes that,
as block rewards decrease and transaction fees gradually supplant them
as the primary motivation for miners to mine,
Bitcoin encounters a miniature goose egg problem
at &lt;em&gt;every single block&lt;/em&gt;.
The problem is that just after any block has been successfully mined,
there are few uncommitted transactions available &amp;mdash;
and hence minimal fees to be collected &amp;mdash;
for mining a subsequent block.
Thus, at least until this pool of uncommitted transactions builds up again,
it is more profitable for miners to treat
the bundle of ordinary transaction fees in the &lt;em&gt;previous&lt;/em&gt; block
as a small goose egg and try to capture it
by mining &lt;em&gt;against&lt;/em&gt; it rather than on top of it.&lt;/p&gt;

&lt;p&gt;Further, Narayanan&amp;rsquo;s group identifies &amp;ldquo;second-order&amp;rdquo;
greedy deviations that work even better when other miners are greedy.
For example, if Innocent Ivan has just mined a block that commits
transactions worth 10 BTC in fees,
Greedy Griffith no longer necessarily needs to mine &lt;em&gt;two&lt;/em&gt; blocks
in order to steal Ivan&amp;rsquo;s fees;
instead Griffith might just mine &lt;em&gt;one&lt;/em&gt; block that deliberately
&amp;ldquo;consumes&amp;rdquo; only a subset of transactions worth 5 BTC of fees,
deliberately leaving the other 5 BTC worth of fees
as an incentive for other greedy miners to prefer Griffith&amp;rsquo;s chain over Ivan&amp;rsquo;s.&lt;/p&gt;

&lt;p&gt;Now consider again how ByzCoin affects this situation.
Since transaction fees are divided equally
among the current consensus group,
whose membership is determined not by the &lt;em&gt;latest&lt;/em&gt; keyblock miner
but by &lt;em&gt;all&lt;/em&gt; the successful miners between an hour and a week ago,
any keyblock mining strategy has a minuscule chance
of affecting profit distribution significantly.
Since ByzCoin commits many transaction microblocks for each mined keyblock,
and rewards from all microblocks committed by the consensus group
are distributed to the same miners in the same proportion,
the precise time a transaction appears
has almost no bearing on reward distribution.
Strategic keyblock mining might, at best,
affect transactions committed close to another keyblock mining event
causing a consensus group shift &amp;mdash;
but any such effect can at most amount to changing the distribution
of one share (e.g., &lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;1008&lt;/sub&gt;) worth of transaction fee profits
from that microblock.&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;This post of course represents only an informal
and certainly incomplete analysis
of differences in incentives between Bitcoin and ByzCoin,
focusing specifically on transaction fees.
It is quite possible that a full, rigorous analysis of ByzCoin
may reveal new incentive-compatibility issues that its architecture introduces.
Further, ByzCoin is still an experimental protocol
under rapid development and evolution.&lt;/p&gt;

&lt;p&gt;Given these caveats, however,
ByzCoin&amp;rsquo;s architecture at least appears to be much more resilient
to several known strategic mining attacks against Bitcoin,
including the new attacks identified by Narayanan&amp;rsquo;s group.
By replacing Bitcoin&amp;rsquo;s instant-gratification, winner-take-all reward model
with a delayed-gratification, investment-dividend model,
ByzCoin ensures that the distribution of mining profits are fixed
long before any strategic miner might know about or be able to respond to
the appearance of a goose egg or other transaction fee variance.&lt;/p&gt;

&lt;p&gt;In short, it does not appear necessary for new cryptocurrencies to
&amp;ldquo;&lt;a href=&#34;http://freedom-to-tinker.com/2016/10/21/bitcoin-is-unstable-without-the-block-reward/&#34;&gt;make the block reward permanent and accept monetary inflation
as inevitable&lt;/a&gt;&amp;rdquo;
as Narayanan suggests.
Whether inflationary or deflationary monetary policies are preferable
is an important and highly debatable question,
but its answer need not be constrained by Bitcoin&amp;rsquo;s technical weaknesses.
With more sophisticated blockchain architectures such as ByzCoin,
there is plenty of hope that mining incentives can work
independent of monetary policy.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;The author wishes to thank
&lt;a href=&#34;https://github.com/Daeinar&#34;&gt;Philipp Jovanovic&lt;/a&gt;,
&lt;a href=&#34;https://twitter.com/kreuzuquer&#34;&gt;Ismail Khoffi&lt;/a&gt;,
&lt;a href=&#34;https://twitter.com/lefkok&#34;&gt;Lefteris Kokoris-Kogias&lt;/a&gt;,
&lt;a href=&#34;http://randomwalker.info/&#34;&gt;Arvind Narayanan&lt;/a&gt;,
&lt;a href=&#34;https://www.cs.cornell.edu/people/egs/&#34;&gt;Emin Gün Sirer&lt;/a&gt;, and
for helpful feedback on early drafts of this post.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Apple, FBI, and Software Transparency</title>
      <link>https://bford.github.io/2016/03/10/apple</link>
      <pubDate>Thu, 10 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://bford.github.io/2016/03/10/apple</guid>
      <description>

&lt;p&gt;&lt;center&gt;
&lt;em&gt;This post
&lt;a href=&#34;https://freedom-to-tinker.com/blog/bford/apple-fbi-and-software-transparency/&#34;&gt;originally appeared&lt;/a&gt;
on the
&lt;a href=&#34;https://freedom-to-tinker.com/&#34;&gt;Freedom to Tinker&lt;/a&gt; blog &lt;br&gt;
by the
&lt;a href=&#34;https://citp.princeton.edu&#34;&gt;Center for Information Technology Policy&lt;/a&gt;
at &lt;a href=&#34;http://www.princeton.edu/&#34;&gt;Princeton University&lt;/a&gt;.&lt;/em&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a href=&#34;http://www.nytimes.com/2016/02/18/technology/apple-timothy-cook-fbi-san-bernardino.html&#34;&gt;Apple versus FBI showdown&lt;/a&gt;
has quickly become
a crucial flashpoint of the
&amp;ldquo;&lt;a href=&#34;http://www.dailydot.com/politics/tim-cook-encryption-iphone-hero-businessman/&#34;&gt;new Crypto War&lt;/a&gt;.&amp;rdquo;
On February 16 the FBI invoked
&lt;a href=&#34;https://www.washingtonpost.com/news/volokh-conspiracy/wp/2016/02/19/preliminary-thoughts-on-the-apple-iphone-order-in-the-san-bernardino-case-part-2-the-all-writs-act/&#34;&gt;the All Writs Act of 1789&lt;/a&gt;,
a catch-all authority for assistance of law enforcement,
demanding that Apple create a custom version of its iOS
to help the FBI decrypt an iPhone used by one of the
&lt;a href=&#34;http://www.newyorker.com/magazine/2016/02/22/preparing-for-apocalypse-in-san-bernardino&#34;&gt;San Bernardino shooters&lt;/a&gt;.
The fact that the FBI allowed Apple to disclose the order publicly,
&lt;a href=&#34;http://www.apple.com/customer-letter/&#34;&gt;on the same day&lt;/a&gt;,
represents a rare exception to the government&amp;rsquo;s normal penchant for secrecy.&lt;/p&gt;

&lt;p&gt;The reasons behind the FBI&amp;rsquo;s unusually loud entrance are important &amp;ndash;
but even more so is the risk that after the present flurry concludes,
the FBI and other government agencies will revert
to more shadowy methods of compelling companies to backdoor their software.
This blog post explores these software transparency risks,
and how &lt;a href=&#34;http://dedis.cs.yale.edu/dissent/papers/witness-abs&#34;&gt;new technical measures&lt;/a&gt;
could help ensure that the public debate over software backdoors
&lt;em&gt;remains&lt;/em&gt; public.&lt;/p&gt;

&lt;h2 id=&#34;the-decryption-assistance-order&#34;&gt;The Decryption Assistance Order&lt;/h2&gt;

&lt;p&gt;Apple and other technology companies regularly comply with
government orders for data in their possession.
The controversial order&amp;rsquo;s key distinction, however,
is that the data is &lt;em&gt;not&lt;/em&gt; in Apple&amp;rsquo;s posession but on an encrypted iPhone,
and the order requires Apple
to create &lt;em&gt;new software&lt;/em&gt; to help the FBI circumvent that iPhone&amp;rsquo;s security.
While Apple is probably &lt;a href=&#34;http://blog.trailofbits.com/2016/02/17/apple-can-comply-with-the-fbi-court-order/&#34;&gt;technically able to comply with the FBI&amp;rsquo;s order&lt;/a&gt;,
it is
&lt;a href=&#34;https://cryptome.org/2016/02/usg-apple-016.pdf&#34;&gt;fighting the order&lt;/a&gt;
on the grounds that
&amp;ldquo;the government demands that Apple create a back door
to defeat the encryption on the iPhone,
making its users’ most confidential and personal information vulnerable
to hackers, identity thieves, hostile foreign agents,
and unwarranted government surveillance.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;Indeed,
demanding that a private company
&lt;a href=&#34;http://www.zdziarski.com/blog/?p=5645&#34;&gt;create a new forensic instrument&lt;/a&gt;
to the government&amp;rsquo;s order,
weakening the security of Apple&amp;rsquo;s own devices and
&lt;a href=&#34;http://www.slate.com/articles/technology/technology/2016/02/apple_and_the_fbi_think_iphones_are_safes_a_philosopher_explains_what_they.single.html&#34;&gt;exposing their users&amp;rsquo; innermost secrets&lt;/a&gt;,
may
&lt;a href=&#34;http://motherboard.vice.com/read/fbis-case-against-apple-could-violate-free-speech&#34;&gt;violate the first amendment&lt;/a&gt;.
At any rate, the order is
&amp;ldquo;&lt;a href=&#34;https://www.eff.org/deeplinks/2016/02/technical-perspective-apple-iphone-case&#34;&gt;like asking General Motors to build a new truck
with a fifth wheel by next month.&lt;/a&gt;&amp;rdquo;&lt;/p&gt;

&lt;p&gt;The FBI could probably create their own backdoored version of iOS.
However, Apple&amp;rsquo;s devices accept only software updates digitally
signed with a secret key
that presumably only Apple controls.
&lt;em&gt;Presumably&lt;/em&gt;.  We&amp;rsquo;ll come back to that.&lt;/p&gt;

&lt;h2 id=&#34;why-all-the-publicity&#34;&gt;Why All the Publicity?&lt;/h2&gt;

&lt;p&gt;One of the most interesting and unusual features of this particular case
is how quickly we, the public,
&lt;a href=&#34;http://www.apple.com/customer-letter/&#34;&gt;learned about it from Apple&lt;/a&gt;.
The FBI could have quietly delivered this order under seal,
as it has done with
&lt;a href=&#34;http://www.wsj.com/articles/justice-department-seeks-to-force-apple-to-extract-data-from-about-12-other-iphones-1456202213&#34;&gt;similar decryption-assistance demands to Apple&lt;/a&gt; &amp;ndash;
as well as to other companies
&lt;a href=&#34;http://www.newyorker.com/tech/elements/how-lavabit-melted-down[&#34;&gt;such as Lavabit&lt;/a&gt;,
the &lt;a href=&#34;http://www.theguardian.com/commentisfree/2014/may/20/why-did-lavabit-shut-down-snowden-email&#34;&gt;now-defunct&lt;/a&gt; E-mail provider that Edward Snowden used.&lt;/p&gt;

&lt;p&gt;Apple even &lt;a href=&#34;http://www.nytimes.com/2016/02/19/technology/how-tim-cook-became-a-bulwark-for-digital-privacy.html?smprod=nytcore-iphone&amp;amp;smid=nytcore-iphone-share&#34;&gt;reportedly requested that the FBI&amp;rsquo;s order be sealed&lt;/a&gt;,
but the FBI wanted the public showdown.
The facts of the case &lt;a href=&#34;https://www.techdirt.com/articles/20160220/22412933661/no-fbi-does-not-need-info-farooks-iphone-this-is-entirely-about-precedent.shtml&#34;&gt;undermine the FBI&amp;rsquo;s claims&lt;/a&gt;
of urgently needing this iPhone&amp;rsquo;s contents:
the killers were already long dead,
the mountain of metadata the FBI already had about the killers
revealed no hint of connections to other terrorists,
and the iPhone in question was an employer-provided work phone
that the killers did not bother to destroy
as they did their two personal phones.
The Occam&amp;rsquo;s Razor interpretation of the facts suggest
that the FBI is far less interested in the data itself
than in &lt;a href=&#34;http://www.macworld.com/article/3034355/ios/why-the-fbis-request-to-apple-will-affect-civil-rights-for-a-generation.html&#34;&gt;the court precedent&lt;/a&gt;
a legal win would establish.&lt;/p&gt;

&lt;p&gt;In short, it appears the FBI is &amp;ldquo;&lt;a href=&#34;https://medium.com/@thegrugq/feeble-noise-pollution-627acb5931a2#.nv513bwae&#34;&gt;playing politics&lt;/a&gt;&amp;rdquo;
via a
&amp;ldquo;&lt;a href=&#34;http://www.theguardian.com/technology/2016/feb/17/inside-the-fbis-encryption-battle-with-apple?CMP=twt_gu&#34;&gt;carefully planned legal battle&amp;hellip;months in the making.&lt;/a&gt;&amp;rdquo;
The iPhone in question represents a strategically-chosen battleground
on which the FBI thinks it can
&lt;a href=&#34;https://bgr.com/2016/02/17/fbi-vs-apple-smartphone-encryption/&#34;&gt;win using the terrorism card&lt;/a&gt; &amp;ndash;
even if this particular iPhone in fact has
&lt;a href=&#34;https://theintercept.com/2016/02/26/farooks-iphone-is-probably-useless-even-the-police-say-so/&#34;&gt;little or no intelligence value&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Lining up in Apple&amp;rsquo;s defense are
&lt;a href=&#34;http://www.reuters.com/article/us-apple-encryption-poll-idUSKCN0VX159&#34;&gt;a plurality of the American public&lt;/a&gt;;
public-interest organizations such as the
&lt;a href=&#34;https://www.aclu.org/blog/speak-freely/why-were-defending-apple&#34;&gt;ACLU&lt;/a&gt;,
&lt;a href=&#34;https://www.eff.org/deeplinks/2016/03/deep-dive-why-forcing-apple-write-and-sign-code-violates-first-amendment&#34;&gt;EFF&lt;/a&gt;,
and
&lt;a href=&#34;https://cdt.org/blog/cdt-files-brief-in-support-of-apple-and-strong-encryption/&#34;&gt;CDT&lt;/a&gt;;
many
&lt;a href=&#34;http://www.apple.com/pr/library/2016/03/03Amicus-Briefs-in-Support-of-Apple.html&#34;&gt;technology giants&lt;/a&gt;
including Google, Intel, Microsoft, Cisco, and Amazon;
newspapers such as the
&lt;a href=&#34;http://www.nytimes.com/2016/02/19/opinion/why-apple-is-right-to-challenge-an-order-to-help-the-fbi.html&#34;&gt;New York Times&lt;/a&gt;
and the
&lt;a href=&#34;http://www.wsj.com/article_email/apple-is-right-on-encryption-1456877827-lMyQjAxMTE2NzAzMjQwNzI3Wj&#34;&gt;Wall Street Journal&lt;/a&gt;,
the
&lt;a href=&#34;http://www.ohchr.org/EN/NewsEvents/Pages/DisplayNews.aspx?NewsID=17138&amp;amp;LangID=E&#34;&gt;UN High Commissioner for Human Rights&lt;/a&gt;;
even the
&lt;a href=&#34;http://money.cnn.com/2016/01/13/technology/nsa-michael-hayden-encryption/index.html&#34;&gt;former NSA director&lt;/a&gt;
and
&lt;a href=&#34;http://fortune.com/2016/03/03/apple-support-former-government-officials/&#34;&gt;other former top US government officials&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;the-secrecy-alternative-past-and-future&#34;&gt;The Secrecy Alternative, Past and Future&lt;/h2&gt;

&lt;p&gt;Important as this public battle is,
the FBI and governments around the world
can and often have pursued the same goals in secret:
Apple versus FBI is more the exception than the rule.
Recall the result of
&lt;a href=&#34;https://www.newamerica.org/oti/doomed-to-repeat-history-lessons-from-the-crypto-wars-of-the-1990s/&#34;&gt;the first Crypto Wars&lt;/a&gt;,
in which the US government attempted to mandate
key escrow encryption embodied in the infamous
&lt;a href=&#34;http://arstechnica.com/information-technology/2015/12/what-the-government-shouldve-learned-about-backdoors-from-the-clipper-chip/&#34;&gt;Clipper Chip&lt;/a&gt;.
While the government lost that public battle,
they did not give up but merely
&lt;a href=&#34;http://www.nytimes.com/2013/09/06/us/nsa-foils-much-internet-encryption.html?_r=0&#34;&gt;shifted their efforts to compromise encryption back into the shadows&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For example, the NSA apparently
&lt;a href=&#34;https://www.lawfareblog.com/nsas-subversion-nists-algorithm&#34;&gt;slipped a backdoor into a NIST standard for random number generation&lt;/a&gt;,
allowing the holder of a secret
to compromise all cryptographic algorithms on a device.
Demonstrating the perils of trying to keep a backdoor
accessible only to &amp;ldquo;the good guys,&amp;rdquo;
an unknown attacker recently managed to &amp;ldquo;re-key&amp;rdquo;
and take over a latent copy of this backdoored random number generator
&lt;a href=&#34;http://www.wired.com/2015/12/researchers-solve-the-juniper-mystery-and-they-say-its-partially-the-nsas-fault/&#34;&gt;in Juniper Networks routers&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Even if sanity prevails in this new round of the Crypto Wars,
we can count on continued attempts by the US and governments around the world
to aquire secret backdoors.
Governments can of course
exploit &lt;a href=&#34;http://motherboard.vice.com/read/apple-fbi-should-ask-the-nsa-to-hack-shooters-iphone&#34;&gt;software bugs&lt;/a&gt;
or &lt;a href=&#34;http://www.bloomberg.com/news/articles/2016-03-04/who-needs-apple-when-the-fbi-could-hack-terrorist-iphone-itself&#34;&gt;physical vulnerabilities&lt;/a&gt;
to break into personal devices,
but secret backdoors will remain an attractive Siren song.
It is easier, cheaper, and less risky to exploit a known backdoor
than to &amp;ldquo;&lt;a href=&#34;https://freedom-to-tinker.com/blog/dwallach/apple-the-fbi-and-the-san-bernadino-iphone/&#34;&gt;reach into the treasure chest&amp;hellip;and engineer a custom exploit&lt;/a&gt;.&amp;rdquo;&lt;/p&gt;

&lt;h2 id=&#34;the-software-update-backdoor&#34;&gt;The Software Update Backdoor&lt;/h2&gt;

&lt;p&gt;Nearly all of today&amp;rsquo;s personal devices, including Apple&amp;rsquo;s,
already have a ready-made &amp;ldquo;backdoor&amp;rdquo; ripe for exploitation,
in the form of
&lt;a href=&#34;http://arstechnica.com/security/2016/02/most-software-already-has-a-golden-key-backdoor-its-called-auto-update/&#34;&gt;automatic software updates validated by digital signatures&lt;/a&gt;.
One way the US government could
acquire a universal backdoor to Apple&amp;rsquo;s devices is
simply by demanding a copy of Apple&amp;rsquo;s secret software signing keys.
The government already showed a willingness to do exactly this,
in demanding the
&lt;a href=&#34;http://www.newyorker.com/tech/elements/how-lavabit-melted-down&#34;&gt;master keys to Lavabit&amp;rsquo;s encrypted E-mail service&lt;/a&gt;
while investigating Snowden.
This might not be entirely trivial if Apple&amp;rsquo;s software signing keys
are &lt;a href=&#34;https://www.thawte.com/code-signing/whitepaper/best-practices-for-code-signing-certificates.pdf&#34;&gt;held in hardware security modules&lt;/a&gt;
designed to thwart the extraction or cloning of secret keys.
In that case, however, the government could still simply
demand that Apple use its secret key to produce a valid digital signature
for the FBI&amp;rsquo;s backdoored version of iOS,
while keeping this process
and the existence of this backdoored iOS secret.&lt;/p&gt;

&lt;p&gt;Even if Apple wins this public battle, therefore,
they will still face well-founded post-Snowden fears and suspicions &amp;ndash;
from companies and governments around the world &amp;ndash;
as to whether Apple can be coerced into
secretly helping to sign backdoored software and firmware images.
This risk is by no means specific to Apple,
but faced by &lt;em&gt;any&lt;/em&gt; organization that creates and releases software.
Even open source software is not immune,
because you cannot be certain whether a software update
represents a correctly-compiled or backdoored version of a source release
&lt;a href=&#34;https://wiki.debian.org/ReproducibleBuilds&#34;&gt;unless you build it yourself&lt;/a&gt;,
which precious few users do.&lt;/p&gt;

&lt;h2 id=&#34;software-transparency-via-decentralized-witness-cosigning&#34;&gt;Software Transparency via Decentralized Witness Cosigning&lt;/h2&gt;

&lt;p&gt;In &lt;a href=&#34;http://www.ieee-security.org/TC/SP2016/&#34;&gt;IEEE Security &amp;amp; Privacy 2016&lt;/a&gt;
we will present a paper
(&lt;a href=&#34;http://dedis.cs.yale.edu/dissent/papers/witness-abs&#34;&gt;preliminary draft available here&lt;/a&gt;)
introducing &lt;em&gt;decentralized witness cosigning&lt;/em&gt;,
a technological means by software makers such as Apple
could protect their users
from secretly backdoored versions of their software &amp;ndash;
and in turn protect &lt;em&gt;themselves&lt;/em&gt; and their financial bottom lines from
worldwide fears and suspicions about the possibility of backdoored software.&lt;/p&gt;

&lt;p&gt;With conventional digital signatures,
as currently used for most software and firmware signing processes,
a single party (e.g., Apple) holds the secret key
needed to produce valid software images
that devices and their software update systems will accept.
Any well-designed update system refuses to accept any software image
unless it has been authenticated using a &lt;em&gt;digital certificate&lt;/em&gt;
embedded in the device,
which cryptographically identifies the software maker
via a mathematical relationship with the secret signing key.
&lt;a href=&#34;https://www.thawte.com/code-signing/whitepaper/best-practices-for-code-signing-certificates.pdf&#34;&gt;Best practices for software signing&lt;/a&gt;
are already
to keep particularly sensitive signing keys offline,
perhaps in HSMs or even split across multiple HSMs,
&lt;a href=&#34;http://www.theguardian.com/technology/2014/feb/28/seven-people-keys-worldwide-internet-security-web&#34;&gt;as ICANN does&lt;/a&gt;
in its ornate
&lt;a href=&#34;https://www.cloudflare.com/dnssec/root-signing-ceremony/&#34;&gt;DNSSEC key signing ceremony&lt;/a&gt;.
But as noted above,
such measures do not prevent the &lt;em&gt;organization&lt;/em&gt; from being coerced
into secret misuse of these signing keys.&lt;/p&gt;

&lt;p&gt;With decentralized witness cosigning,
a software maker imprints their devices and software update systems
with a digital certificate corresponding not just to their own secret key
but also to secret keys held by a group of independent &lt;em&gt;witnesses&lt;/em&gt;.
These witnesses might include other cooperating software companies,
public-interest organizations such as the ACLU, EFF, or CDT,
or major corporate customers or governments around the world
desiring not just verbal but also technological assurances
of the software maker&amp;rsquo;s commitment to transparency.
In turn, before accepting any software image
the device&amp;rsquo;s update system verifies that it has been signed
not only by the software maker but also by a threshold number
of the designated witnesses.
In essence, the device does not accept any software image
unless it arrives with a cryptographic &amp;ldquo;proof&amp;rdquo;
that this &lt;em&gt;particular&lt;/em&gt; software image has been publicly observed by &amp;ndash;
and thereby placed under the scrutiny of &amp;ndash;
a decentralized group of independent parties scattered around the world
in different jurisdictions.&lt;/p&gt;

&lt;h2 id=&#34;the-scalability-of-witness-cosigning&#34;&gt;The Scalability of Witness Cosigning&lt;/h2&gt;

&lt;p&gt;Technically, it is quite easy to implement witness cosigning
if the number of witnesses is small.
A software maker could simply gather a list of individual signatures
for each new software release,
in much the same way people have handled
&lt;a href=&#34;http://ecssba.rutgers.edu/docs/petuniv.html&#34;&gt;public petitions&lt;/a&gt;
for hundreds of years.
If we want the group of witnesses to be large, however &amp;ndash;
and we &lt;em&gt;do&lt;/em&gt;, to ensure that compromising transparency would
require not just a few but hundreds or even thousands of witnesses
to be colluding maliciously &amp;ndash;
then gathering hundreds or thousands of individual signatures
for each software release could become painful and inefficient.
Worse, every device needing to validate a software download or update
would need to check all these signatures individually,
causing delays and consuming battery power.&lt;/p&gt;

&lt;p&gt;The key technical contribution of our research is a distributed protocol
that automates this process and
makes large, decentralized witness cosigning groups practical.
I will spare you the details, but those interested can
&lt;a href=&#34;http://dedis.cs.yale.edu/dissent/papers/witness-abs&#34;&gt;find them here&lt;/a&gt;.
The oversimplified summary is that the protocol involves compressing
hundreds or thousands of signatures into a single one
that can be verified almost as simply and efficiently
verifying a normal individual signature.
For illustration,
a traditional many-signature petition handled this way might look as follows:&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;multisig.svg&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;What a classic petition would look like as a cryptographic multisignature&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;Superposing standard pencil-and-paper signatures this way
would of course offer little or no security,
but such superposition &lt;em&gt;can&lt;/em&gt; be made secure with modern digital signatures.
This is one of the remarkable properties of modern cryptography,
and is a well-understood property that
&lt;a href=&#34;https://www.cs.bu.edu/~reyzin/multisig.html&#34;&gt;long predates our work&lt;/a&gt;.
Again, our main contribution is to make witness cosigning scale.&lt;/p&gt;

&lt;h2 id=&#34;how-does-anyone-know-if-there-s-a-backdoor&#34;&gt;How Does Anyone Know If There&amp;rsquo;s a Backdoor?&lt;/h2&gt;

&lt;p&gt;Unfortunately,
independent witnesses cannot necessarily determine immediately,
during the witness cosigning process,
whether or not a particular software image actually contains a backdoor.
This is especially true in the common case where the source code is proprietary
and the software maker signs and releases only binary images.
Nevertheless, the witnesses can still proactively ensure &lt;em&gt;transparency&lt;/em&gt;
by ensuring that
&lt;em&gt;every correctly-signed software image in existence&lt;/em&gt;
has been disclosed, cataloged, and made subject to public scrutiny.&lt;/p&gt;

&lt;p&gt;For example, if future Apple devices adopted decentralized witness cosigning,
and a government attempted to coerce Apple secretly into signing
a backdoored version of iOS version 11.2.1,
then the only way Apple could do so would be to submit
the backdoored iOS version to the independent witnesses for cosigning.
Even though those witnesses could not necessarily recognize the backdoor,
they could immediately notice that two different iOS images
labeled &amp;ldquo;version 11.2.1&amp;rdquo; have been signed:
the standard one and the backdoored one.
This inconsistency alone should
immediately raise alarms and draw the attention of security companies
around the world, who could carefully inspect
the differences between the two software images.&lt;/p&gt;

&lt;p&gt;A government could of course coerce Apple to give the backdoored image
a different version number that most of their customers never receive:
e.g., &amp;ldquo;11.2.1fbi&amp;rdquo; &amp;ndash;
or a more anonymous &amp;ldquo;11.2.1.1.&amp;rdquo;
However, the witnesses would still be able to tell that an iOS image &lt;em&gt;exists&lt;/em&gt;
that has been signed but not widely distributed,
again likely drawing suspicion and careful scrutiny by security experts.&lt;/p&gt;

&lt;p&gt;Of course, Apple &amp;ndash; or a malicious Apple employee &amp;ndash;
could still slip a subtle backdoor or security &amp;ldquo;bug&amp;rdquo;
into the standard iOS releases that &lt;em&gt;everyone&lt;/em&gt; runs.
Accidental bugs and backdoors alike can persist for years without being noticed,
as &lt;a href=&#34;http://www.wired.com/2015/12/researchers-solve-the-juniper-mystery-and-they-say-its-partially-the-nsas-fault/&#34;&gt;the Juniper incident&lt;/a&gt;
amply demonstrates.
Open source software offers a transparency advantage,
especially with
&lt;a href=&#34;https://wiki.debian.org/ReproducibleBuilds&#34;&gt;reproducible builds&lt;/a&gt; &amp;ndash;
but even source-level backdoors can be
&lt;a href=&#34;http://www.underhanded-c.org/&#34;&gt;devilishly&lt;/a&gt;
&lt;a href=&#34;https://underhandedcrypto.com/&#34;&gt;tricky&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Nevertheless,
techniques and tools for analysing both source and binary software
are constantly improving,
and decentralized witness cosigning can ensure that
&lt;em&gt;all&lt;/em&gt; releases of a software distribution are publicly known
and exposed to this analysis by talented security researchers
and white-hat hackers
around the world.
An attacker who slips a backdoor into a public software release
inherently faces a risk that the backdoor could be discovered at any time.
Witness cosigning prevents attackers from sidestepping that risk of discovery,
even by secretly deploying the backdoored software only on targeted devices
under attacker-controlled conditions.&lt;/p&gt;

&lt;h2 id=&#34;proactive-versus-retroactive-transparency-approaches&#34;&gt;Proactive versus Retroactive Transparency Approaches&lt;/h2&gt;

&lt;p&gt;Decentralized witness cosigning is by no means the first
cryptographic transparency mechanism.
For example, the Public Key Infrastructure (PKI)
used to secure Web connections
&lt;a href=&#34;http://resources.infosecinstitute.com/cybercrime-exploits-digital-certificates/&#34;&gt;also has weaknesses&lt;/a&gt;
similar to software update systems.
PKI transparency mechanisms such as
&lt;a href=&#34;http://convergence.io&#34;&gt;Convergence&lt;/a&gt;,
&lt;a href=&#34;https://www.eff.org/sovereign-keys&#34;&gt;Sovereign Keys&lt;/a&gt;,
&lt;a href=&#34;https://www.certificate-transparency.org&#34;&gt;Certificate Transparency&lt;/a&gt;,
&lt;a href=&#34;https://www.cs.cmu.edu/~xia/resources/Documents/kim-www13.pdf&#34;&gt;AKI&lt;/a&gt;, and
&lt;a href=&#34;https://www.cs.cmu.edu/~xia/resources/Documents/basin_ccs14.pdf&#34;&gt;ARPKI&lt;/a&gt;
chip away at this problem.
Certificate Transparency is now
&lt;a href=&#34;https://www.certificate-transparency.org/certificate-transparency-in-chrome&#34;&gt;standard in the Chrome browser&lt;/a&gt;.
&lt;a href=&#34;https://dl.acm.org/citation.cfm?id=2660311&#34;&gt;Application Transparency&lt;/a&gt;
is a proposed variant of Certificate Transparency
adapted to software downloads and updates.
Related proposals such as
&lt;a href=&#34;https://www.cs.cmu.edu/~perspectives/perspectives_usenix08.pdf&#34;&gt;Perspectives&lt;/a&gt;
and
&lt;a href=&#34;http://www.coniks.org&#34;&gt;CONIKS&lt;/a&gt;
address closely-related problems for Secure Shell (SSH) connections
and end-to-end encrypted messaging, respectively.&lt;/p&gt;

&lt;p&gt;These prior transparency mechanisms have two crucial weaknesses, however:
they do not significantly increase the number of secret keys
an attacker must control to compromise any personal device,
and personal devices cannot even retroactively detect such compromise
unless they can actively communicate with multiple well-known Internet servers.
For example, even with Certificate Transparency,
an attacker can forge an
&lt;a href=&#34;https://www.certificate-transparency.org/ev-ct-plan&#34;&gt;Extended Validation (EV) certificate for Chrome&lt;/a&gt;
after compromising or coercing only three parties:
one Certificate Authority (CA) and
two &lt;a href=&#34;https://www.certificate-transparency.org/known-logs&#34;&gt;log servers&lt;/a&gt;.
Since many CAs and log servers are in US jurisdiction,
such an attack is clearly within reach of the US government.
If such an attack does occur,
Certificate Transparency cannot detect it unless
the victim device has a chance to communicate or &lt;em&gt;gossip&lt;/em&gt;
the fake certificate
with other parties on the Internet &amp;ndash;
after it has already accepted and started
using the fake digital certificate.&lt;/p&gt;

&lt;h2 id=&#34;gossip-mechanisms-can-t-guarantee-software-transparency&#34;&gt;Gossip Mechanisms Can&amp;rsquo;t Guarantee Software Transparency&lt;/h2&gt;

&lt;p&gt;These weaknesses are especially severe
in the domain of software transparency,
the central issue in the Apple versus FBI case.
First, if a personal device accepts and starts running
a backdoored software update
before the device has had a chance to gossip
information about the update with other parties on the Internet,
then the backdoored software can evade transparency
simply by disabling gossip in the updated code.
Second, even if for some reason the attacker
cannot or neglects to take this obvious step,
the attacker can still evade transparency by controlling
either the device or its Internet access paths.
In the FBI versus Apple case, for example,
the FBI could trivially evade gossip-based transparency,
and keep its backdoored iOS image secret,
by keeping the device disconnected from the rest of the Internet
after installing their backdoored software update.
(They probably plan to anyway,
to ensure that no &amp;ldquo;&lt;a href=&#34;http://www.theguardian.com/technology/2016/mar/04/san-bernardino-da-baffles-security-community-lying-dormant-cyber-pathogen-iphone&#34;&gt;cyber pathogens&lt;/a&gt;&amp;rdquo; escape.)&lt;/p&gt;

&lt;p&gt;This weakness of gossip-based transparency
also applies to attackers who may not control the device itself
but control the device&amp;rsquo;s Internet access path.
For example, a compromised Internet service provider (ISP)
or corporate Internet gateway can defeat gossip-based transparency
by persistently blocking a victim&amp;rsquo;s access
to transparency servers elsewhere on the Internet.
Even if the user&amp;rsquo;s device is mobile,
a state intelligence service such as China&amp;rsquo;s
&amp;ldquo;&lt;a href=&#34;http://edition.cnn.com/2015/10/25/asia/china-war-internet-great-firewall/&#34;&gt;Great Firewall&lt;/a&gt;&amp;rdquo;
could defeat gossip-based transparency by persistently blocking
connections from a targeted victim&amp;rsquo;s devices to global transparency servers,
in the same way that China already blocks connections to many websites
and &lt;a href=&#34;https://blog.torproject.org/category/tags/china&#34;&gt;to the Tor anonymity network&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;The noisy Apple versus FBI battle is merely the visible tip
of a looming software integrity iceberg,
illustrating both the importance of software transparency mechanisms
and the technical challenges in securing them.
Current gossip-based methods
cannot actually guarantee transparency
if an attacker is in control of the target device or its Internet access path,
as in the current FBI versus Apple scenario.
Even if software updates were guarded by
&lt;a href=&#34;https://www.certificate-transparency.org/&#34;&gt;Certificate Transparency&lt;/a&gt; or
&lt;a href=&#34;http://dl.acm.org/citation.cfm?id=2660311&#34;&gt;Application Transparency&lt;/a&gt;,
the FBI could still secretly force Apple
to sign a backdoored software update,
coerce two US-based log servers to sign fake log entries
while keeping both the software update and the fake logs secret,
and isolate the targeted device offline
so that it cannot gossip the fake update metadata with anyone.&lt;/p&gt;

&lt;p&gt;Decentralized witness cosigning is currently the only known method
of ensuring transparency and public accountability in such situations.
Taking a proactive approach,
witness cosigning provides devices with a standalone cryptographic proof
that a software update has been observed by many independent parties,
&lt;em&gt;before&lt;/em&gt; the device accepts or runs the software.
In this way,
companies such as Apple could offer their customers
a strong guarantee
that every valid software image in existence has been publicly disclosed
before any of their devices, anywhere, will consider it valid &amp;ndash;
even if the device and/or its network
is controlled by an attacker who does &lt;em&gt;not&lt;/em&gt;
exhibit the FBI&amp;rsquo;s fleeting taste for publicity.&lt;/p&gt;

&lt;p&gt;The present public debate over backdoors in personal devices
is of critical importance to our security, privacy, and personal freedom.
But equally important is ensuring that this time
the debate &lt;em&gt;stays&lt;/em&gt; public.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;I wish to thank
&lt;a href=&#34;https://tonyarcieri.com/&#34;&gt;Tony Arcieri&lt;/a&gt;,
&lt;a href=&#34;https://www.lbarman.ch/&#34;&gt;Ludovic Barman&lt;/a&gt;,
&lt;a href=&#34;http://jbonneau.com/&#34;&gt;Joseph Bonneau&lt;/a&gt;,
&lt;a href=&#34;https://github.com/nikkolasg&#34;&gt;Nicolas Gailly&lt;/a&gt;,
&lt;a href=&#34;https://github.com/ineiti&#34;&gt;Linus Gasser&lt;/a&gt;,
&lt;a href=&#34;https://josephhall.org/&#34;&gt;Joseph Lorenzo Hall&lt;/a&gt;,
&lt;a href=&#34;https://zerobyte.io/&#34;&gt;Philipp Jovanovic&lt;/a&gt;,
&lt;a href=&#34;https://www.linkedin.com/in/ismailkhoffi&#34;&gt;Ismail Khoffi&lt;/a&gt;,
&lt;a href=&#34;https://www.technologyreview.com/contributor/tom-simonite/&#34;&gt;Tom Simonite&lt;/a&gt;,
and
&lt;a href=&#34;https://www.internetsociety.org/who-we-are/staff/robin-wilton&#34;&gt;Robin Wilton&lt;/a&gt;,
for helpful feedback on early drafts of this post.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>An advanced crypto library for Go</title>
      <link>https://bford.github.io/2016/03/08/crypto/</link>
      <pubDate>Tue, 08 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://bford.github.io/2016/03/08/crypto/</guid>
      <description>

&lt;h1 id=&#34;page-title&#34;&gt;{{ page.title }}&lt;/h1&gt;

&lt;p&gt;Interesting features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;An abstract group arithmetic framework for public-key cryptography
based on the discrete logarithm problem.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Several alternative concrete instantiations of this abstract
group arithmetic framework,
based on the NIST elliptic curve implementations in the Go standard library
and in the OpenSSL crypto library,
and implementations of both generic Edwards curves
and an adaptation of Adam Langley&amp;rsquo;s Ed25519-curve-specific
optimized group arithmetic code to the abstract group API.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Implementations of a number of advanced crypto algorithms
built on this abstract group arithmetic framework,
and hence automatically compatible woth both integer group
and any suitable elliptic curves:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Shamir Verifiable Secret Sharing (VSS),
the standard foundation for t-of-n threshold cryptographic techniques.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;An implementation of the general Camenisch/Stadler framework
for proofs of knowledge based on the discrete-logarithm problem.
For example&amp;hellip;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Anonymous and pseudonymous public-key encryption and signatures,
where the sender or receiver are identified only as an anonymous member
of some explicit &lt;em&gt;set&lt;/em&gt; of public keys, without revealing anything
about which member of the set signed the message or is to receive it.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;C. Andrew Neff&amp;rsquo;s cryptographic protocol for proving
the correctness of a shuffle.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Backdoors, Trusted Servers, and Deanonymization</title>
      <link>https://bford.github.io/2016/03/08/backdoors/</link>
      <pubDate>Tue, 08 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://bford.github.io/2016/03/08/backdoors/</guid>
      <description>

&lt;h1 id=&#34;page-title&#34;&gt;{{ page.title }}&lt;/h1&gt;

&lt;p&gt;To my knowledge there are currently only two fundamentally distinct approaches
to achieving strong anonymity online,
and the same legendary computing figure, David Chaum,
pioneered both.
His first approach,
&lt;a href=&#34;http://www.freehaven.net/anonbib/cache/chaum-mix.pdf&#34;&gt;mixes&lt;/a&gt;,
relay messages over multi-hop paths around the network
to obscure their source and destinations.
State-of-the-art deployed anonymity systems such as
&lt;a href=&#34;https://www.torproject.org/&#34;&gt;Tor&lt;/a&gt;
are highly evolved and performance-optimized variants
of this basic relaying idea.&lt;/p&gt;

&lt;p&gt;Chaum&amp;rsquo;s second approach,
&lt;a href=&#34;http://www.freehaven.net/anonbib/cache/chaum-dc.pdf&#34;&gt;dining cryptographers&lt;/a&gt;,
instead uses information-coding principles to hide the sender of a message
among a group of nodes all of whom seem to be spewing gibberish at once.
It&amp;rsquo;s as if you are listening to a crowd
&lt;a href=&#34;http://www.christianpublishers.org/Speaking%20in%20Tongues-1.jpg&#34;&gt;speaking in tongues&lt;/a&gt;
but what you hear is a single unified voice,
emanating from no one in particular,
elucidating the Ten Commandments with perfect clarity.
Chaum then moved away from anonymity systems
to other projects such as the first major attempt at practical electronic cash
(yes, he was also the &amp;ldquo;first&amp;rdquo; Satoshi Nakamoto),
and secure electronic voting systems.
While several research projects,
including Cornell&amp;rsquo;s
&lt;a href=&#34;https://www.cs.cornell.edu/people/egs/herbivore/&#34;&gt;Herbivore&lt;/a&gt;
and my own
&lt;a href=&#34;http://dedis.cs.yale.edu/dissent/&#34;&gt;Dissent&lt;/a&gt;
have made progress toward making the dining cryptographers practical,
it has not (yet) made it into widely-deployed systems.&lt;/p&gt;

&lt;p&gt;Given Chaum&amp;rsquo;s status as &amp;ldquo;the father of online anonymity&amp;rdquo;,
it stands to reason
that his first venture &lt;em&gt;back&lt;/em&gt; into anonymity in many years
would get some attention.
Today at &lt;a href=&#34;http://www.realworldcrypto.com/rwc2016&#34;&gt;Real World Crypto&lt;/a&gt;,
he presented
&lt;a href=&#34;http://eprint.iacr.org/2016/008.pdf&#34;&gt;cMix&lt;/a&gt;,
an interesting new take on the mix approach
that aims to achieve better scalability, lower latencies,
and sufficiently low computation costs on client devices
to be practical for use in energy-conscious mobile phone apps.
I had the pleasure of learning about cMix directly from David
and discussing it with him at some length last year,
but my recent move to &lt;a href=&#34;http://www.epfl.ch/&#34;&gt;EPFL&lt;/a&gt; and other time demands
prevented me from being able to take a more active role in the project.
The design of cMix is definitely interesting and contains some promising ideas,
but that is not what this blog post is about.&lt;/p&gt;

&lt;h2 id=&#34;ending-the-crypto-war-or-stoking-the-flames&#34;&gt;Ending the Crypto War, or Stoking the Flames?&lt;/h2&gt;

&lt;p&gt;Earlier today before Chaum&amp;rsquo;s talk, Wired also released
&lt;a href=&#34;http://www.wired.com/2016/01/david-chaum-father-of-online-anonymity-plan-to-end-the-crypto-wars/&#34;&gt;an article on it&lt;/a&gt;
containing a statement that will doubtless attract
a lot more attention than anything in the technical paper on cMix:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Chaum is also building into PrivaTegrity another feature that’s sure to be far more controversial: a carefully controlled backdoor that allows anyone doing something “generally recognized as evil” to have their anonymity and privacy stripped altogether.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Well before Chaum&amp;rsquo;s talk even began,
Twitter was ablaze with discussion about Chaum&amp;rsquo;s &amp;ldquo;backdoor&amp;rdquo; in PrivaTegrity.&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;The main benefit of Chaum&amp;#39;s new system, as far as I can tell, is that it is a political gift to FBI Director Comey. &lt;a href=&#34;https://t.co/64Au0lXxuL&#34;&gt;https://t.co/64Au0lXxuL&lt;/a&gt;&lt;/p&gt;&amp;mdash; Christopher Soghoian (@csoghoian) &lt;a href=&#34;https://twitter.com/csoghoian/status/684730483503149056&#34;&gt;January 6, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;I&amp;#39;m heartbroken to see that Chaum is proposing key escrow for everyone on the planet: &lt;a href=&#34;https://t.co/zWZ3bUQsJf&#34;&gt;https://t.co/zWZ3bUQsJf&lt;/a&gt; What happened to David Chaum?&lt;/p&gt;&amp;mdash; Jacob Appelbaum (@ioerror) &lt;a href=&#34;https://twitter.com/ioerror/status/684763375260270592&#34;&gt;January 6, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&#34;but-where-s-the-backdoor&#34;&gt;But Where&amp;rsquo;s the Backdoor?&lt;/h2&gt;

&lt;p&gt;One important observation, however, is that the word &amp;ldquo;backdoor&amp;rdquo;
appears nowhere in the actual
&lt;a href=&#34;http://eprint.iacr.org/2016/008.pdf&#34;&gt;technical paper on cMix&lt;/a&gt; written by
Chaum and his collaborators.
While cMix is the anonymous communication protocol Chaum is proposing,
PrivaTegrity is a larger system built on cMix
to provide anonymous chat and other anonymous interaction applications
directly usable to ordinary users.
In essence, cMix is just an &amp;ldquo;engine&amp;rdquo; whereas PrivaTegrity is the car.
So where is this supposed &amp;ldquo;backdoor&amp;rdquo; &amp;emdash; in the engine or the car?&lt;/p&gt;

&lt;p&gt;The only part of the technical cMix paper that even suggests
the &amp;ldquo;backdoor&amp;rdquo; idea (without using that term)
is section IX.B., two brief paragraphs on the paper&amp;rsquo;s second-to-last page.
The first is the most crucial:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Independent from cMix, PrivaTegrity addresses potential
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;abuse of anonymity services by establishing a trust model
that offers a balance of anonymity and accountability. On the
one hand, PrivaTegrity aims to provide privacy at a technical
level that is not penetrable by nation states. On the other
hand, PrivaTegrity aims to provide integrity, both prior restraint
and accountability after the fact, that is inescapably tied to
individuals. Only if all of the mixing nodes cooperate, can the
senders and receivers of messages be linked or identified.&lt;/p&gt;

&lt;p&gt;In essence, cMix routes users&amp;rsquo; messages through a series of mixing nodes
(the Wired article talks about nine servers in different countries),
such that none of the servers can individually unmask an anonymous user,
but all of the servers (or their operators) together can unmask a user
that they collectively agree to be deserving of such treatment.&lt;/p&gt;

&lt;p&gt;This property is by no means new, unusual, or unique to cMix, however:
in fact a huge number of cryptographic and distributed systems
have this essential security property.
No one really knows how to build secure systems
in which you need to trust &lt;em&gt;no one at all&lt;/em&gt;.
Instead the best we can really do is to &lt;em&gt;split&lt;/em&gt; trust across multiple entities
that we hope are at least somewhat independent,
so that no one entity needs to be fully trusted.&lt;/p&gt;

&lt;p&gt;This is exactly the same security principle that motivates
&lt;a href=&#34;http://www.deansafe.com/uncodrsawisa.html&#34;&gt;safes with two keys&lt;/a&gt;.
If both keys are required to open the safe and are held by different employees,
then a single dishonest employee working alone will be unable to raid it
without somehow aquiring the other key.
But if the two key-holders conspire,
the two-key mechanism will do nothing to stop them.&lt;/p&gt;

&lt;h2 id=&#34;trust-splitting-in-anonymity-systems&#34;&gt;Trust Splitting in Anonymity Systems&lt;/h2&gt;

&lt;p&gt;Essentially all of the practical anonymity systems,
both deployed and proposed in research,
embody this limited trust-splitting property in some fashion.
Several years ago my group
&lt;a href=&#34;http://dedis.cs.yale.edu/dissent/papers/eurosec12-abs&#34;&gt;coined the term &amp;ldquo;anytrust&amp;rdquo;&lt;/a&gt;
for this security model in the context of anonymity systems,
because users need only assume that &amp;ldquo;any one&amp;rdquo; of the servers is honest
and not colluding with all the others against them.
Users don&amp;rsquo;t even need to know or guess which server is honest;
one merely &lt;em&gt;needs to exist&lt;/em&gt;.
Once again, we did not by any means invent this security model;
it has been in use in many ways and under many names for decades
in cryptography and distributed systems practice.&lt;/p&gt;

&lt;p&gt;Users of the well-known &lt;a href=&#34;https://www.torproject.org/&#34;&gt;Tor&lt;/a&gt; anonymity system,
for example,
depend for their security on a small group of
&lt;em&gt;directory authorities&lt;/em&gt; &amp;emdash;
of which &lt;a href=&#34;https://twitter.com/kristovatlas/status/684845884576796673&#34;&gt;there are currently 10&lt;/a&gt; &amp;emdash;
to keep track of and let Tor clients know the set of relays
available to help anonymize their messages.
If &amp;hellip;&lt;/p&gt;

&lt;p&gt;PrivaTegrity&lt;/p&gt;

&lt;p&gt;is Chaum&amp;rsquo;s &amp;ldquo;backdoor&amp;rdquo; a technical feature?
no, just a common architectural weakness.&lt;/p&gt;

&lt;p&gt;Tor has it&amp;hellip; (examples)&lt;/p&gt;

&lt;p&gt;Can we eliminate such trusted server groups?  Yes, but it&amp;rsquo;s hard.&lt;/p&gt;

&lt;p&gt;Does CT fix it?  Not quite.&lt;/p&gt;

&lt;p&gt;The policy question: are backdoors needed/good in an anonymity systems?&lt;/p&gt;

&lt;p&gt;What would the processes be for controlled deanonymization of a user,
supposing one created a system and set it up like Chaum&amp;rsquo;s
on the (policy) basis that server operators would cooperate
to deanonymize users under &amp;ldquo;the right conditions&amp;rdquo;?&lt;/p&gt;

&lt;p&gt;who picks those 9 server operators?  Who funds them?
(The power of the purse is strong&amp;hellip;)
If a nation-state comes to them and says,
&amp;ldquo;we&amp;rsquo;ll block your service and thus destroy a big part of your legal business
unless you help us deanonymize these people who we call &amp;lsquo;terrorists&amp;rsquo;
but the rest of the world calls &amp;lsquo;political dissidents&amp;rsquo;&amp;ldquo;,
what do they do?&lt;/p&gt;

&lt;p&gt;sybil problem, multiple possible levels of response&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to prove DNSSEC isn&#39;t a key escrow scheme</title>
      <link>https://bford.github.io/2016/03/08/dnssec/</link>
      <pubDate>Tue, 08 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://bford.github.io/2016/03/08/dnssec/</guid>
      <description>

&lt;h1 id=&#34;page-title&#34;&gt;{{ page.title }}&lt;/h1&gt;

&lt;p&gt;&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Let&#39;s verify real people, not real names.</title>
      <link>https://bford.github.io/2015/10/07/names.html</link>
      <pubDate>Wed, 07 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://bford.github.io/2015/10/07/names.html</guid>
      <description>

&lt;p&gt;On Monday the
&lt;a href=&#34;https://www.eff.org/&#34;&gt;EFF&lt;/a&gt;,
together with a &amp;ldquo;Nameless Coalition&amp;rdquo; of like-minded groups,
&lt;a href=&#34;https://www.eff.org/deeplinks/2015/10/global-coalition-facebook-authentic-names-are-authentically-dangerous-your-users&#34;&gt;escalated the backlash&lt;/a&gt;
against
&lt;a href=&#34;https://www.facebook.com/help/112146705538576&#34;&gt;Facebook&amp;rsquo;s &amp;ldquo;real names&amp;rdquo; or &amp;ldquo;authentic identities&amp;rdquo; policy&lt;/a&gt;
with an
&lt;a href=&#34;https://www.eff.org/document/open-letter-facebook-about-its-real-names-policy&#34;&gt;open letter&lt;/a&gt;
urging Facebook to end this policy
like
&lt;a href=&#34;http://www.slate.com/blogs/future_tense/2014/07/17/google_plus_finally_ditches_its_ineffective_dangerous_real_name_policy.html&#34;&gt;Google Plus did last year&lt;/a&gt;.
&lt;a href=&#34;http://motherboard.vice.com/read/nameless-coalition-petitions-facebook-to-rethink-its-real-name-policy&#34;&gt;Facebook&amp;rsquo;s response&lt;/a&gt;
cites concerns about pseudonyms helping to hide
&amp;ldquo;terrorist organizations&amp;rdquo;, &amp;ldquo;school bullies&amp;rdquo;, and &amp;ldquo;criminal behavior.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;While I support anonymity and
&lt;a href=&#34;http://cacm.acm.org/magazines/2015/10/192387-seeking-anonymity-in-an-internet-panopticon/fulltext&#34;&gt;have spent years working to strengthen it&lt;/a&gt;,
terrorist fearmongering aside,
Facebook is right that anonymity is often abused.
Pseudonym-friendly Twitter constantly
&lt;a href=&#34;http://www.wired.com/2015/04/twitter-abuse/&#34;&gt;struggles with trolls&lt;/a&gt;,
and
&lt;a href=&#34;http://www.wired.com/2014/10/trolls-will-always-win/&#34;&gt;has&lt;/a&gt;
&lt;a href=&#34;http://www.theguardian.com/uk-news/2013/jul/27/twitter-trolls-threats-bank-notes-austen&#34;&gt;for&lt;/a&gt;
&lt;a href=&#34;http://mashable.com/2012/11/09/twitter-sports-trolls/#_0rIFtoO8gqI&#34;&gt;years&lt;/a&gt;.
Ironically, such abuse has even
&lt;a href=&#34;http://www.theguardian.com/technology/2014/dec/03/privacy-advocates-unmask-twitter-troll&#34;&gt;led die-hard anonymity advocates to
de-anonymize trolls&lt;/a&gt;.
And even Twitter&amp;rsquo;s
&lt;a href=&#34;http://www.wired.com/2015/03/hey-twitter-killing-anonymitys-dumb-way-fight-trolls/&#34;&gt;demands for phone number verification&lt;/a&gt;
rankle users desiring the stronger anonymity provided by
&lt;a href=&#34;https://www.torproject.org&#34;&gt;Tor&lt;/a&gt;.
Online services seemingly face a zero-sum choice
between protecting people who have legitimate needs for anonymity,
and protecting everyone else from those who abuse anonymity.&lt;/p&gt;

&lt;p&gt;But this is a false choice,
because most of an abuser&amp;rsquo;s power comes not from having &lt;em&gt;one&lt;/em&gt; pseudonym,
but from having &lt;em&gt;many&lt;/em&gt;.
Abuse using an army of fake identities is known as
&lt;a href=&#34;http://www.dailydot.com/lifestyle/wikipedia-sockpuppet-investigation-largest-network-history-wiki-pr/&#34;&gt;sockpuppetry on Wikipedia&lt;/a&gt;,
or in computer science as a
&lt;a href=&#34;http://research.microsoft.com:8082/pubs/74220/IPTPS2002.pdf&#34;&gt;Sybil attack&lt;/a&gt;
after a
&lt;a href=&#34;https://en.wikipedia.org/wiki/Sybil_(book)&#34;&gt;famous psychiatric case&lt;/a&gt;.
The security benefit Facebook arguably derives
from asking suspect users to
&lt;a href=&#34;https://www.facebook.com/help/contact/319547548123767&#34;&gt;confirm their identity&lt;/a&gt;
has little to do with actually knowing the user&amp;rsquo;s real name:
is Facebook going to decide that an &amp;ldquo;Alice&amp;rdquo; is more trustworthy than a &amp;ldquo;Bob&amp;rdquo;?
On the contrary, the perceived security benefit
has everything to do with verifying that the user is a real &lt;em&gt;person&lt;/em&gt;
controlling only that one account.
But what if online services could verify that a user is a real &lt;em&gt;person&lt;/em&gt;
without intrusively demanding to know the user&amp;rsquo;s real &lt;em&gt;name&lt;/em&gt;?&lt;/p&gt;

&lt;h2 id=&#34;pseudonym-parties&#34;&gt;Pseudonym Parties&lt;/h2&gt;

&lt;p&gt;Years ago I
&lt;a href=&#34;http://bford.info/pub/net/sybil.pdf&#34;&gt;proposed a possible solution&lt;/a&gt;
that I believe a determined group of activists like the Nameless Coalition
could readily put into practice on a grassroots budget
and with only minimal buy-in from industry.
The idea is simple:
Once a year, organizers in participating cities and towns host an event
to which anyone may show up in person and obtain a cryptographic token,
which might be simply a random-looking number printed on a slip of paper.
This token carries no identity information whatsoever,
but merely attests that the holder is a &lt;em&gt;real person&lt;/em&gt;.
The holder can subsequently use this token
to register or confirm pseudonymous accounts
with participating online services throughout the subsequent year.
Pseudonym party attendees need not show any ID,
and would even be
&lt;a href=&#34;https://en.wikipedia.org/wiki/Carnival_of_Venice&#34;&gt;welcome to wear masks&lt;/a&gt;,
but everyone would receive an
&lt;a href=&#34;https://en.wikipedia.org/wiki/Election_ink&#34;&gt;indelible ink mark&lt;/a&gt;
making it difficult for cheaters to acquire several tokens the same day.&lt;/p&gt;

&lt;p&gt;Each token enables the holder to register pseudonymous accounts
at many online services,
but &lt;em&gt;only one account&lt;/em&gt; per service.
If the user abuses this one account, the service can shut it down,
and be assured that the abuser will be unable to obtain
another token-verified account until next year.
The main amplication power of anonymous abuse,
through Sybil attacks or sockpuppetry,
would be neutralized without the online service
having to know anything else about the user.&lt;/p&gt;

&lt;h2 id=&#34;real-people-not-real-names&#34;&gt;Real People, Not Real Names&lt;/h2&gt;

&lt;p&gt;Tokens distributed at pseudonym parties
would effectively enable online services to verify
that users are real people without verifying their real names.
For example, Facebook could add token-based verification
as a fourth alternative to their
&lt;a href=&#34;https://www.facebook.com/help/159096464162185&#34;&gt;three current ID-based verification options&lt;/a&gt;.
Would they?
That&amp;rsquo;s up to Facebook, but even if they didn&amp;rsquo;t,
other online services might do so as a way to
compete by presenting a more privacy-friendly image.&lt;/p&gt;

&lt;p&gt;At least for now,
there is no reason to expect that &lt;em&gt;everyone&lt;/em&gt; should be expected
to attend pseudonym parties and obtain tokens each year,
only users who particularly care about their privacy
or have specific need for an alternative
to ID-based account verification.
As a result, the costs of organizing pseudonym parties
should start small, grow gradually with user demand,
and remain within the reach of nonprofit, donation-funded budgets.
Pseudonym party locations would initially be few and far between,
but would also serve as opportunities to organize, celebrate, and meet
other privacy-minded people in the region.
If the idea were successful and proved sustainable
in a few cities,
and even just a few privacy-minded online services
decided to support account verification via tokens,
this would help build critical mass to open more locations
and pressure other online services
to support ID-free account verification.&lt;/p&gt;

&lt;p&gt;The Nameless Coalition is absolutely right to critique
Facebook&amp;rsquo;s real names policy and the problems it creates
for more vulnerable and privacy-sensitive users.
But the Coalition should also acknowledge the difficult tradeoffs
&lt;em&gt;most&lt;/em&gt; online services currently face
between protecting their users&amp;rsquo; privacy
and protecting their users from anonymous abuse.
Instead of treating this problem as a zero-sum cultural tug-of-war,
we must give online services a means to verify
that users are real people without having to check their real names &amp;mdash;
and we should not wait for industry or government to take the first step.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Delegative Democracy Revisited</title>
      <link>https://bford.github.io/2014/11/16/deleg.html</link>
      <pubDate>Sun, 16 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://bford.github.io/2014/11/16/deleg.html</guid>
      <description>

&lt;p&gt;Over a decade ago I wrote up some ideas
I called &amp;ldquo;&lt;a href=&#34;http://www.brynosaurus.com/deleg/&#34;&gt;Delegative Democracy&lt;/a&gt;,&amp;rdquo;
which has also become known as
&amp;ldquo;&lt;a href=&#34;http://p2pfoundation.net/Liquid_Democracy&#34;&gt;Liquid Democracy&lt;/a&gt;.&amp;rdquo;
My &lt;a href=&#34;http://www.brynosaurus.com/deleg/deleg.pdf&#34;&gt;draft paper from 2002&lt;/a&gt;
took a first stab at laying out the general idea,
though I never finished or tried to publish it.
Since a lot has happened in this space since then,
and I get regular inquiries about it,
I thought it was high time to revisit the idea
and review more recent developments.&lt;/p&gt;

&lt;h2 id=&#34;the-basic-idea&#34;&gt;The Basic Idea&lt;/h2&gt;

&lt;p&gt;Many people including myself like the participatory ideal embodied in
&lt;a href=&#34;http://en.wikipedia.org/wiki/Direct_democracy&#34;&gt;direct democracy&lt;/a&gt;,
but this ideal does not readily scale beyond small communities.
As I will shortly be moving to &lt;a href=&#34;http://epfl.ch&#34;&gt;EPFL&lt;/a&gt;,
I look forward to learning first-hand
how the Swiss make direct democracy work for them &amp;mdash;
but Switzerland is a small country divided into even smaller,
fairly autonomous cantons.
A basic criticism of direct democracy is that
expecting that &lt;em&gt;every&lt;/em&gt; eligible voter to
attend &lt;em&gt;all&lt;/em&gt; the meetings and keep up with &lt;em&gt;all&lt;/em&gt; the issues,
rather than actually getting more people involved,
may instead disenfranchise those without infinite spare time or patience.&lt;/p&gt;

&lt;p&gt;Delegative democracy attempts to make direct democracy scale,
by allowing anyone who cannot participate directly in a particular vote
to &lt;em&gt;delegate&lt;/em&gt; their vote to someone they trust
to participate and vote on their behalf.
This process may be viewed as a mechanized equivalent
of seeking advice from a friend and voting based on that advice.
Delegative democracy differs from representative democracy
in the principle that each voter should have free, &lt;em&gt;individual&lt;/em&gt;
choice of their delegate &amp;mdash;
not just a choice among a restricted set of career politicians &amp;mdash;
just as we already make a free, individual choice of our friends.
Further, voters may choose to participate in &lt;em&gt;some&lt;/em&gt; meetings directly,
overriding their delegate&amp;rsquo;s choices in those meetings,
and voters may revoke or change their delegation at any time.&lt;/p&gt;

&lt;p&gt;While corporate governance practice often allows the related idea of
&lt;a href=&#34;http://en.wikipedia.org/wiki/Proxy_voting&#34;&gt;proxy voting&lt;/a&gt;,
a proxy vote often amounts to a &amp;ldquo;pre-packaged mandate&amp;rdquo;:
e.g., a directive to cast an unconditional YES or NO vote on my behalf
regardless of what new information might be presented at the meeting
or what discussion might ensue.
The spirit of delegative democracy is closer to representative democracy,
in that delegation is not about delivering my &amp;ldquo;canned decision&amp;rdquo;
but about asking my trusted delegate to &lt;em&gt;participate&lt;/em&gt;
in the full deliberative process on my behalf.
My delegate can and is expected to listen and engage in the debate,
consider the information available,
and make what his views as the best decision on that basis.
If I dislike his decision,
I can choose a different delegate before the next vote.&lt;/p&gt;

&lt;h2 id=&#34;origins-of-the-idea&#34;&gt;Origins of the Idea&lt;/h2&gt;

&lt;p&gt;Perhaps unsurprisingly,
I was only one of many people to think along these lines over the decades.
In Lewis Carrol&amp;rsquo;s
&lt;a href=&#34;http://books.google.com/books?id=ZCovAAAAYAAJ&#34;&gt;Principles of Parliamentary Representation&lt;/a&gt;
of 1884,
candidates could &amp;ldquo;club&amp;rdquo; their votes together,
allowing a candidate who received more votes than required to win a seat
to delegate the &amp;ldquo;excess&amp;rdquo; votes toward the election of other candidates.
James C. Miller in 1969 foresaw electronic voting and proposed a
&lt;a href=&#34;http://link.springer.com/article/10.1007/BF01718736&#34;&gt;delegate proxy voting scheme&lt;/a&gt;,
to enable more widespread &amp;mdash; and more propoportional &amp;mdash;
representation in political decisions.&lt;/p&gt;

&lt;p&gt;Starting around 2002
the Internet exploded with reinventions
of this and similar ideas.
Besides my
&lt;a href=&#34;http://www.brynosaurus.com/deleg/deleg.pdf&#34;&gt;Delegative Democracy&lt;/a&gt; proposal,
there was
Dennis Lomax&amp;rsquo;s
&lt;a href=&#34;http://web.archive.org/web/20031220012108/www.beyondpolitics.org/Beyond_Politics_Intro.htm&#34;&gt;Beyond Politics&lt;/a&gt;,
Jio Ito&amp;rsquo;s
&lt;a href=&#34;http://joi.ito.com/joiwiki/EmergentDemocracyPaper&#34;&gt;Emergent Democracy&lt;/a&gt;,
Sayke&amp;rsquo;s
&lt;a href=&#34;https://web.archive.org/web/20040616144517/http://www.twiste
dmatrix.com/wiki/python/LiquidDemocracy&#34;&gt;Liquid Democracy&lt;/a&gt; and
&lt;a href=&#34;https://web.archive.org/web/20040518131300/http://twistedmatrix.com/wiki/python/LiquidDemocracyVotingSystem&#34;&gt;voting system&lt;/a&gt;,
Mikael Nordfors&amp;rsquo;
&lt;a href=&#34;https://archive.org/details/politics_Democracy2.1&#34;&gt;Democracy 2.1&lt;/a&gt;,
James Green-Armytage&amp;rsquo;s
&lt;a href=&#34;https://web.archive.org/web/20090528052745/http://fc.antioch.edu/~james_green-armytage/vm/proxy.htm&#34;&gt;delegable proxy system&lt;/a&gt;, and
Mark Rosst&amp;rsquo;s
&lt;a href=&#34;http://www.newciv.org/nl/newslog.php/_v45/__show_article/_a000009-000320.htm&#34;&gt;Structural Deep Democracy&lt;/a&gt;.
The idea of allowing voters to delegate their participation
to individually-chosen representatives
is central to all of these proposals, though details differ.&lt;/p&gt;

&lt;h2 id=&#34;academic-research&#34;&gt;Academic Research&lt;/h2&gt;

&lt;p&gt;Exploration of this idea in the academic literature has been more sparse,
no doubt in part because it&amp;rsquo;s hard to convince reviewers of the novelty
of an idea that&amp;rsquo;s been around in some form since the 1880s or 1960s,
depending on how you count.
However, Rodriguez et al&amp;rsquo;s
&lt;a href=&#34;http://public.lanl.gov/jhw/Jen/Publications_files/Smarto-Share.pdf&#34;&gt;Smartocracy&lt;/a&gt;
develops a trust network and decision ranking algorithm
embodying a form of delegative democracy.
Paolo Boldi et al developed
&lt;a href=&#34;http://www-kdd.isti.cnr.it/~bonchi/votingSN.pdf&#34;&gt;Viscous Democracy&lt;/a&gt;,
a transitive proxy voting algorithm
based on Google&amp;rsquo;s
&lt;a href=&#34;http://ilpubs.stanford.edu:8090/422/1/1999-66.pdf&#34;&gt;PageRank&lt;/a&gt;
and in a vein similar to
&lt;a href=&#34;http://groups.yahoo.com/group/sd-2/&#34;&gt;Structural Deep Democracy&lt;/a&gt;.
Wybo Wiersma explored the
&lt;a href=&#34;http://www.wybowiersma.net/pub/AltFutures2013/Wiersma,Wybo,Transitive_delegative_democracy_through_Facebook.pdf&#34;&gt;integration of delegative democracy into social networking systems&lt;/a&gt; such as FaceBook.&lt;/p&gt;

&lt;p&gt;Taking an economics perspective,
&lt;a href=&#34;http://inside.bard.edu/~armytage/research.html&#34;&gt;James Green-Armytage&lt;/a&gt;
has developed an
&lt;a href=&#34;http://inside.bard.edu/~armytage/proxy.pdf&#34;&gt;axiomatic model and analysis&lt;/a&gt;
of delegate proxy voting systems.
His work formally models the
&lt;em&gt;expressive loss&lt;/em&gt; of alternative voting systems &amp;mdash;
the collective decision-making &amp;ldquo;error&amp;rdquo; induced by voters who may have
limited information about issues and/or
limited choices of possible representatives.
This analysis mathematically confirms the intuition motivating
all the incarnations of delegative democracy:
namely, that &lt;em&gt;voluntary&lt;/em&gt; and &lt;em&gt;free&lt;/em&gt; choice of delegation
yields decisions with no more error (and most likely less)
than conventional alternatives such as direct or representative democracy.&lt;/p&gt;

&lt;p&gt;Yefim Leifman has explored ways to
&lt;a href=&#34;http://eprint.iacr.org/2014/351.pdf&#34;&gt;implement transitive delegation schemes
using cryptography&lt;/a&gt;.
This is a topic I am particularly interested in as well,
since a major motivation for my
&lt;a href=&#34;http://dedis.cs.yale.edu/dissent/&#34;&gt;Dissent project&lt;/a&gt;
was to build practical anonymous communication systems
that would be good not only for &lt;em&gt;communication&lt;/em&gt;
but also for secure &lt;em&gt;deliberation&lt;/em&gt; mechanisms such as voting.
I hope more system-builders and security/privacy researchers
will be bold enough to venture into this space.&lt;/p&gt;

&lt;h2 id=&#34;delegative-liquid-democracy-in-the-real-world&#34;&gt;Delegative/Liquid Democracy in the Real World&lt;/h2&gt;

&lt;p&gt;Increasing participation and engagement in political discourse
has long been a basic goal of many Internet democracy efforts.
&lt;a href=&#34;http://demoex.org&#34;&gt;Demoex&lt;/a&gt;,
an experiment to build political parties based on online direct democracy,
succeeded in Sweeden from 2002
&lt;a href=&#34;https://pernor.wordpress.com&#34;&gt;until this year&lt;/a&gt;,
as recounted in
&lt;em&gt;&lt;a href=&#34;http://www.amazon.com/gp/product/B00A414T9I&#34;&gt;The Little Horse from Athens&lt;/a&gt;&lt;/em&gt;
by Per Norbäck.
While Demoex pursued something closer to traditional direct democracy,
it relied heavily on online participation
and made provision for voters to obtain voting advice from others.&lt;/p&gt;

&lt;p&gt;Perhaps the most exciting development is that
starting around 2006,
free software organizations in Germany began building
two different software platforms for delegation-based
online discussion and deliberation:
&lt;a href=&#34;http://liquidfeedback.org&#34;&gt;LiquidFeedback&lt;/a&gt; and
&lt;a href=&#34;https://adhocracy.de&#34;&gt;Adhocracy&lt;/a&gt;.
LiquidFeedback was adopted and used for the past several years by the
&lt;a href=&#34;http://en.wikipedia.org/wiki/Pirate_Party_Germany&#34;&gt;German Pirate Party&lt;/a&gt;,
as recounted in an
&lt;a href=&#34;http://www.liquid-democracy-journal.org/issue/1/The_Liquid_Democracy_Journal-Issue001-02-Five_years_of_Liquid_Democracy_in_Germany.html&#34;&gt;article by Björn Swierczek&lt;/a&gt;
(&lt;a href=&#34;http://www.liquid-democracy-journal.org/issue/1/The_Liquid_Democracy_Journal-Issue001-03-Fuenf_Jahre_Liquid_Democracy_in_Deutschland.html&#34;&gt;original German version&lt;/a&gt;).
Further information on these tools and their adoption is now available in
&lt;a href=&#34;http://principles.liquidfeedback.org&#34;&gt;a book&lt;/a&gt; and
&lt;a href=&#34;http://www.liquid-democracy-journal.org&#34;&gt;an electronic journal&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;These success stories with delegative democracy in Germany
have started to get noticed and studied internationally.
Articles in
&lt;a href=&#34;http://www.spiegel.de/international/germany/liquid-democracy-web-platform-makes-professor-most-powerful-pirate-a-818683.html&#34;&gt;Spiegel&lt;/a&gt; and
&lt;a href=&#34;http://techpresident.com/news/wegov/22154/how-german-pirate-partys-liquid-democracy-works&#34;&gt;techPresident&lt;/a&gt;
cover the German Pirate Party&amp;rsquo;s use of Liquid Democracy,
and
&lt;a href=&#34;http://www.bostonglobe.com/ideas/2014/10/31/text-aye-matey-the-pirate-party-push-for-direct-democracy/X8dl2dKD73HiXGTXd1yuDP/story.html&#34;&gt;The Boston Globe&lt;/a&gt;
recently covered the party&amp;rsquo;s attempt at a foothold in the US.
There are academic studies of the Pirate Party&amp;rsquo;s use of Liquid Democracy
by
&lt;a href=&#34;http://opendatalabs.org/adhocracy/Bachelorarbeit%20Friedrich%20Lindenberg.pdf&#34;&gt;Friedrich Lindenberg in Germany&lt;/a&gt;
(&lt;a href=&#34;https://translate.google.com/translate?sl=de&amp;amp;tl=en&amp;amp;js=y&amp;amp;prev=_t&amp;amp;hl=en&amp;amp;ie=UTF-8&amp;amp;u=http%3A%2F%2Fopendatalabs.org%2Fadhocracy%2FBachelorarbeit%2520Friedrich%2520Lindenberg.pdf&amp;amp;edit-text=&#34;&gt;auto-translation&lt;/a&gt;),
&lt;a href=&#34;http://books.google.com/books?id=WzoJBAAAQBAJ&amp;amp;pg=PA403&#34;&gt;Anna Litvinenko in Russia&lt;/a&gt;, and
&lt;a href=&#34;http://www.scribd.com/doc/83203862/DELEGATIVE-DEMOCRACY-IS-THE-PIRATENPARTEI-LIQUID-DEMOCRACY-PROPOSAL-FIT-FOR-GERMANY&#34;&gt;Andrea Cangialosi in Italy&lt;/a&gt;.
Back in Germany,
&lt;a href=&#34;http://www.ma-politikmanagement.de/xd/public/content/index.html?pid=868&#34;&gt;Anja Adler&lt;/a&gt;
at the
&lt;a href=&#34;http://www.ma-politikmanagement.de&#34;&gt;NRW School of Governance&lt;/a&gt;
recently interviewed me as part of her thesis studying liquid democracy;
I look forward to seeing the result.&lt;/p&gt;

&lt;h2 id=&#34;where-to-next&#34;&gt;Where To Next?&lt;/h2&gt;

&lt;p&gt;I still believe strongly in the idea of delegative democracy,
regardless of what we decide to call it.
Participatory approaches to democracy are important because they address
a fundamental security flaw in representative democracy,
which in practice allows small groups of elite political insiders
to control and limit voting to choices
&amp;ldquo;&lt;a href=&#34;http://en.wikiquote.org/wiki/Helen_Keller&#34;&gt;between Tweedledum and Tweedledee&lt;/a&gt;.&amp;rdquo;
Delegation is important because it addresses
a basic scaling flaw of direct democracy,
which becomes a critical security flaw
once those members of a community with other demands
on their time and attention
are drowned out and driven away by a vocal minority
with the time and determination to do nothing but push their agenda.&lt;/p&gt;

&lt;p&gt;I see delegation as just one of many improvements needed
to address scaling and security weaknesses
in traditional democratic processes, however.
I am concerned that current tools for delegative democracy
appear to be designed with limited attention to other security concerns.
The current tools depend on a single centralized server
that all users must simply trust,
and offer no cryptographic protections
either to ensure the integrity of the deliberation process,
or to offer privacy, anonymity, or coercion-resistance to voting users.
All of these issues and many others, if inadequately addressed,
could easily become &lt;em&gt;different&lt;/em&gt; but equally critical security flaws
in the overall deliberative process
as it scales up and meets real-world adversaries.&lt;/p&gt;

&lt;p&gt;I found this comment by
&lt;a href=&#34;http://www.kuro5hin.org/user/uid:26945&#34;&gt;godix&lt;/a&gt; in a
&lt;a href=&#34;http://www.kuro5hin.org/story/2003/7/16/201556/896&#34;&gt;a kuro5hin discussion&lt;/a&gt;
to be both amusing and apt. [sic]&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I can easily see the following quotes if this idea ever took hold:&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Congradulations on your new high paying job at monolithic multinational
  corperation. Just a few forms to fill out and you&amp;rsquo;ll be earning three
  figures. First off is the tax form, next is your health insurance, then
  we&amp;rsquo;ll be needing to you proxy your vote to the CEO&amp;hellip;.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Hi, I&amp;rsquo;m Monica from Friends. Sign your vote over to me. I don&amp;rsquo;t know shit
  about politics really, but I&amp;rsquo;m famous. Thank you for giving me political
  power along with fame and wealth you mindless drones.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&amp;ldquo;No child/wife of mine is going to vote while they live in my house.  Sign
  it over or get the fuck out.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Hello, we know many of you are there are used to voting straight
  Republican/Democrat. To continue this fine tradition would you please sign
  your vote over to the DNC/GOP?&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Hi, this is the President speaking. This nation decided I was qualified
  enough to run the free world but COngress is causing me problems. If you
  support me please sign over your vote. In return I&amp;rsquo;ll make sure I&amp;rsquo;m elected
  again and Congress isn&amp;rsquo;t. Thank you for your support.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Hi, you may know me, I&amp;rsquo;m Bill Gates. I&amp;rsquo;m getting sick of government
  investigations. The next one million people to sign their vote over to me
  gets a free copy of Windows 2045. This time we fixed the bugs. No,
  seriously, we did.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We ultimately need not only secure, scalable deliberative processes
such as delegative democracy,
but secure and scalable &lt;em&gt;implementations&lt;/em&gt; of those processes
with strong, decentralized integrity and privacy protections.
As I alluded to above,
building the technical infrastructure needed
integrity-protected, privacy- and anonymity-preserving communication &amp;mdash;
in a decentralized model where
no single person, organization, or server needs to be blindly trusted
&amp;mdash;
has been one of the key goals of my group&amp;rsquo;s
&lt;a href=&#34;http://dedis.cs.yale.edu/dissent/&#34;&gt;Dissent project&lt;/a&gt;
for the past several years.&lt;/p&gt;

&lt;p&gt;I believe we now have all the key cryptographic tools and protocols
we need to create secure implementations of delegative democracy.
To oversimplify things just a bit,
what remains is SMOP, a &amp;ldquo;small matter of programming.&amp;rdquo;
I would be happy to work with any talented coder/activists
interested in collaborating to make this happen.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Faculty size and growth in the top 20 Computer Science departments</title>
      <link>https://bford.github.io/2014/10/22/cs-growth.html</link>
      <pubDate>Wed, 22 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>https://bford.github.io/2014/10/22/cs-growth.html</guid>
      <description>&lt;p&gt;Yesterday the &lt;a href=&#34;http://yaledailynews.com&#34;&gt;Yale Daily News&lt;/a&gt; ran
&lt;a href=&#34;http://yaledailynews.com/blog/2014/10/21/cs-department-struggles-for-faculty/&#34;&gt;an article on our CS department&amp;rsquo;s faculty shortage&lt;/a&gt;,
which generated
&lt;a href=&#34;https://www.facebook.com/randy.katz/posts/10103594916315693&#34;&gt;some discussion among CS colleagues&lt;/a&gt;.
Yale&amp;rsquo;s CS faculty shortage is not really news:
for example,
&lt;a href=&#34;http://yaledailynews.com/blog/2013/01/29/computer-science-dept-overworked-understaffed/&#34;&gt;another YDN article over a year ago&lt;/a&gt;
made basically the same point,
and that probably wasn&amp;rsquo;t the first.&lt;/p&gt;

&lt;p&gt;Setting aside Yale in particular, however,
it is interesting to notice some broader trends in CS department growth.
So here are a couple charts I recently put together.&lt;/p&gt;

&lt;p&gt;The first estimates the number of tenure-track faculty
in each of the top 20 CS departments, ordered accoring to
&lt;a href=&#34;http://grad-schools.usnews.rankingsandreviews.com/best-graduate-schools/top-science-schools/computer-science-rankings&#34;&gt;US News&amp;rsquo;s current rankings&lt;/a&gt;.
&lt;em&gt;Major caveat&lt;/em&gt;:
this faculty size data is completely unofficial and approximate,
based purely on the number of apparent ladder faculty members listed
on the respective CS department web sites.
Obvious potential sources of error include, for example,
faculty positions that are split across departments
but not clearly labeled as &amp;ldquo;adjunct&amp;rdquo; or &amp;ldquo;courtesy&amp;rdquo; appointments,
and combined CS-and-EE departments in which it is not always obvious
which faculty are more &amp;ldquo;CS&amp;rdquo; and which are more &amp;ldquo;EE&amp;rdquo;.
But these represent best guesses based on publicly available information
and are reasonably accurate to the best of my knowledge.
The &lt;a href=&#34;http://cra.org/&#34;&gt;CRA&lt;/a&gt; folks who put together the
&lt;a href=&#34;http://cra.org/resources/taulbee/&#34;&gt;Taulbee Survey&lt;/a&gt;
probably have better and more &amp;ldquo;official&amp;rdquo; data,
but I don&amp;rsquo;t have that data.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&#34;https://bford.github.io/2014/10/22/cs-growth-charts/size-chart.svg&#34; style=&#34;width:40em&#34; /&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;As the orange line indicates across the left half of the chart indicates,
CS departments in the top 10 appear to average about 67 ladder faculty,
with Carnegie Mellon, MIT, and Georgia Tech being by far the largest,
and Princeton being the smallest of the top-10 at around 35 faculty.
As the yellow line on the right side indicates,
departments in the &amp;ldquo;next 10&amp;rdquo; category
appear to average around 39 ladder faculty each.&lt;/p&gt;

&lt;p&gt;None of this is likely to be much of a surprise
to anyone familiar with CS academia.
What is more interesting is to look at the relative faculty growth
over the past decade, broken down the same way below.
The baseline numbers are derived from
the corresponding CS department home pages
as captured by the &lt;a href=&#34;https://archive.org/index.php&#34;&gt;Internet Archive&lt;/a&gt;
around September 2004.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&#34;https://bford.github.io/2014/10/22/cs-growth-charts/growth-chart.svg&#34; style=&#34;width:40em&#34; /&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;The average growth of the CS departments currently in the top 10
is a relatively modest 8% since 2004.
My sense is that most if not all of these top-10 departments
have been hiring aggressively and more-or-less continuously
over the past decade, but mainly just filling the vacancies regularly created
as faculty get sucked away to industry positions or startups.
But these departments haven&amp;rsquo;t needed to grow &amp;ldquo;much&amp;rdquo; because, hey,
they&amp;rsquo;re already on top of the heap.&lt;/p&gt;

&lt;p&gt;But the picture for the &amp;ldquo;next 10&amp;rdquo; category looks interestingly different,
in which faculty size growth over the past decade
appears to have been around 21% on average.
Unless I&amp;rsquo;m mistaken,
USC in particular has nearly doubled in size over this period,
and a majority of departments in this category grew at least 20%.
Might we say these are the departments &amp;ldquo;bucking for the top 10&amp;rdquo;?&lt;/p&gt;

&lt;p&gt;This is all just for what it&amp;rsquo;s worth; no warranties yadda yadda.
Comments or corrections of any inaccuracies are welcome.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Individual Representation</title>
      <link>https://bford.github.io/2004/11/23/indrep/</link>
      <pubDate>Tue, 23 Nov 2004 00:00:00 +0000</pubDate>
      
      <guid>https://bford.github.io/2004/11/23/indrep/</guid>
      <description>&lt;html&gt;&lt;meta http-equiv=&#34;refresh&#34; content=&#34;0; url=http://www.brynosaurus.com/log/2004/1123-IndividualRepresentation/&#34;&gt;&lt;/html&gt;
</description>
    </item>
    
    <item>
      <title>Cache Directory Tagging</title>
      <link>https://bford.github.io/2004/10/27/cachedir/</link>
      <pubDate>Wed, 27 Oct 2004 00:00:00 +0000</pubDate>
      
      <guid>https://bford.github.io/2004/10/27/cachedir/</guid>
      <description>&lt;html&gt;&lt;meta http-equiv=&#34;refresh&#34; content=&#34;0; url=http://www.brynosaurus.com/cachedir/&#34;&gt;&lt;/html&gt;
</description>
    </item>
    
  </channel>
</rss>