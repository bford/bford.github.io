<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Draft-rsses on Bryan Ford&#39;s Blog</title>
    <link>https://bford.github.io/draft/index.xml</link>
    <description>Recent content in Draft-rsses on Bryan Ford&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 31 Jul 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://bford.github.io/draft/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>How Do You Know It&#39;s On the Blockchain?  With a SkipChain.</title>
      <link>https://bford.github.io/2017/07/31/skipchain/</link>
      <pubDate>Mon, 31 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://bford.github.io/2017/07/31/skipchain/</guid>
      <description>

&lt;p&gt;A &lt;a href=&#34;https://en.wikipedia.org/wiki/Blockchain&#34;&gt;blockchain&lt;/a&gt;,
or distributed ledger,
is a log maintained collectively by a distributed group of participants
who agree on and record transactions without relying for security on
any single trusted party.
While initially popularized by &lt;a href=&#34;https://en.wikipedia.org/wiki/Bitcoin&#34;&gt;Bitcoin&lt;/a&gt;
and its derivatives,
the blockchain abstraction is not specific to currencies,
and there is exploding industry interest in many non-currency uses.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&#34;blockchain.svg&#34; alt=&#34;Blockchain&#34;&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Many of these diverse use-cases, however,
require users to be able to &lt;em&gt;verify&lt;/em&gt; whether or not
some transaction has been committed to a blockchain.
With currently-deployed blockchains, however,
securely verifying transactions unfortunately requires the user&amp;rsquo;s device
to be online and connected to the Internet,
and to pay the bandwidth and power costs of maintaining connectivity
with multiple (perhaps many) nodes on the blockchain&amp;rsquo;s overlay network.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;verified.jpg&#34; style=&#34;float:right;width:20%&#34;&gt;&lt;/p&gt;

&lt;p&gt;This blog post explores the challenges this verification problem
presents for important blockchain applications such as
document &lt;a href=&#34;https://en.wikipedia.org/wiki/Notary&#34;&gt;notarization&lt;/a&gt;.
We then explore one possible solution: &lt;em&gt;SkipChains&lt;/em&gt;,
a cryptographically-traversable, offline- and peer-to-peer-verifiable
blockchain structure.
SkipChains were introduced by the
&lt;a href=&#34;http://dedis.epfl.ch/&#34;&gt;Decentralized/Destributed Systems (DEDIS) lab&lt;/a&gt;
at &lt;a href=&#34;https://www.epfl.ch/&#34;&gt;EPFL&lt;/a&gt;
in &lt;a href=&#34;https://eprint.iacr.org/2017/648&#34;&gt;Chainiac&lt;/a&gt;,
a blockchain-based software update system to be presented at
&lt;a href=&#34;https://www.usenix.org/conference/usenixsecurity17/technical-sessions/presentation/nikitin&#34;&gt;USENIX Security &amp;lsquo;17&lt;/a&gt;.
While introduced in the context of a software update system,
this blog post focuses not on software updates
but other potential applications of blockchains and SkipChains.&lt;/p&gt;

&lt;h1 id=&#34;using-blockchains-in-document-notarization&#34;&gt;Using Blockchains in Document Notarization&lt;/h1&gt;

&lt;p&gt;One attractive and widely-discussed non-currency use-case for blockchains is
in electronically timestamping and notarizing documents
such as &lt;a href=&#34;https://link.springer.com/chapter/10.1007/978-3-319-45153-4_48/fulltext.html&#34;&gt;academic degrees&lt;/a&gt;
or &lt;a href=&#34;https://www.ubitquity.io/home/resources/worldbank_land_paper_ubitquity_march_2016.pdf&#34;&gt;land records&lt;/a&gt;.
The essence of the idea is to use a blockchain&amp;rsquo;s tamper-resistance property
to make it harder to forge, back-date, or modify important records.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;award-certificate.jpg&#34; style=&#34;border:10px solid white;float:right;width:30%&#34;&gt;&lt;/p&gt;

&lt;p&gt;While a promising applicaion,
current blockchain approaches to document notarization suffer from
several important caveats and imitations.
Some are already well-known:
for example, that
&lt;a href=&#34;https://www.multichain.com/blog/2017/05/blockchain-immutability-myth/&#34;&gt;blockchains are not really immutable&lt;/a&gt;.
Further,
in this use-case the blockchain itself
really provides only one narrow security property:
proof that a particular electronic document &lt;em&gt;existed&lt;/em&gt; at some time.
A blockchain does not automatically provide
&lt;a href=&#34;https://decentralize.today/does-notarization-on-the-blockchain-actually-work-d8006443c0b9&#34;&gt;other important security properties&lt;/a&gt;
that we traditionally depend on notaries for,
such as to verify the &lt;em&gt;identities&lt;/em&gt; of the parties signing a document,
and to attest that this signing was done freely and not under duress.
Blockchains are certainly useful and can improve the security of notarization,
but are not an automatic replacement.&lt;/p&gt;

&lt;h1 id=&#34;how-do-you-know-it-s-on-the-blockchain&#34;&gt;How Do You Know It&amp;rsquo;s On the Blockchain?&lt;/h1&gt;

&lt;p&gt;However, currently-deployed blockchains have another important limitation
that severely affects their usefulness for notarization applications,
and which has not yet been widely discussed.
If someone shows you an electronic document,
stating they have a particular academic degree
or hold a particular land title for example,
and they claim this document is &amp;ldquo;on the blockchain,&amp;rdquo;
how do you use your favorite personal mobile device
(smart phone, laptop, etc)
to &lt;em&gt;verify&lt;/em&gt; that the claimed document actually &lt;em&gt;is on the blockhchain&lt;/em&gt;?
With current blockchain technologies such as
&lt;a href=&#34;https://en.wikipedia.org/wiki/Bitcoin&#34;&gt;Bitcoin&lt;/a&gt; and
&lt;a href=&#34;https://www.ethereum.org/&#34;&gt;Ethereum&lt;/a&gt;,
securely verifying that a document is indeed on the blockchain
requires your device to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Be online with a working connection to the Internet,&lt;/li&gt;
&lt;li&gt;Be well-connected with multiple &amp;ldquo;full nodes&amp;rdquo;
on the blockchain&amp;rsquo;s overlay network, and&lt;/li&gt;
&lt;li&gt;Regularly &amp;ndash; and ideally continually &amp;ndash; invest the bandwidth
and power costs of &amp;ldquo;following&amp;rdquo; the blockchain.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For example, suppose Alice is a certified electrician
who shows up for a job at Bob&amp;rsquo;s home,
but Bob asks for verifiable proof of Alice&amp;rsquo;s professional credentials.
Assume that Alice&amp;rsquo;s &amp;ldquo;electrician&amp;rdquo; certificate is a digital credential
that was issued by an academic or government organization that Bob trusts,
and was encoded in an open format
such as &lt;a href=&#34;https://www.blockcerts.org/&#34;&gt;Blockcerts&lt;/a&gt;
and &amp;ldquo;notarized&amp;rdquo; by inclusion in a Merkle tree attached to
a blockchain transaction at the time Alice earned the credential.
Alice might have obtained this credential months or even years
before Bob calls Alice to work on his home.&lt;/p&gt;

&lt;p&gt;When Alice shows up to the appointment,
she can use her smart phone to send her credential,
and a &lt;a href=&#34;https://en.wikipedia.org/wiki/Merkle_tree&#34;&gt;Merkle tree proof&lt;/a&gt;
of its inclusion in the blockchain,
to Bob&amp;rsquo;s smart phone for verification
(e.g., via Bluetooth, WiFi,
or scanning a &lt;a href=&#34;https://en.wikipedia.org/wiki/QR_code&#34;&gt;QR code&lt;/a&gt;).
But then what, precisely, does Bob&amp;rsquo;s device &lt;em&gt;do&lt;/em&gt; to verify that
Alice&amp;rsquo;s credential is indeed on the blockchain?
Without this verification critical step,
Bob could be showing Alice a forged certificate
that was never actually notarized,
or a tampered certificate with the name or date changed.
Returning briefly to &lt;a href=&#34;https://eprint.iacr.org/2017/648&#34;&gt;Chainiac&lt;/a&gt;&amp;rsquo;s
motivating use-case,
Alice might be asking Bob to install an application or OS update &amp;ndash;
but without verifying that this document or update is indeed on the blockchain,
Alice could give Bob a secretly backdoored image that the software vendor
&lt;a href=&#34;https://freedom-to-tinker.com/2016/03/10/apple-fbi-and-software-transparency/&#34;&gt;was coerced into signing&lt;/a&gt;.
Bob might never know that the document or software Alice gave her
was not the official, notarized version
that everyone else sees on the public blockchain.&lt;/p&gt;

&lt;h2 id=&#34;bad-solution-just-trust-someone&#34;&gt;Bad Solution: Just Trust Someone&lt;/h2&gt;

&lt;p&gt;The Blockcerts &lt;a href=&#34;https://github.com/blockchain-certificates/cert-verifier-js#verification-process&#34;&gt;verification process&lt;/a&gt; documentation specifies that:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A Blockchain Certificate must have a &lt;code&gt;certificate.signature.anchors&lt;/code&gt; field, which must contain at least one anchor to a blockchain transaction.&lt;/p&gt;

&lt;p&gt;[&amp;hellip;]&lt;/p&gt;

&lt;p&gt;Supplied with the blockchain identifier and transaction id, the transaction can be obtained from a service like &lt;a href=&#34;http://blockchain.info&#34;&gt;blockchain.info&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There are two crucial unstated and unaddressed issues here.&lt;/p&gt;

&lt;p&gt;First, in order for Bob to retrieve the transaction from
&lt;a href=&#34;http://blockchain.info&#34;&gt;blockchain.info&lt;/a&gt;
and verify that it indeed anchors the certificate Alice presented,
both Bob and &lt;a href=&#34;http://blockchain.info&#34;&gt;blockchain.info&lt;/a&gt;
must both be online and able to communicate with each other.
If Bob lives in a remote village in the developing world
where Internet connectivity is slow and expensive,
online verification might not be so practical.
Bob may then just have to take Alice&amp;rsquo;s word &amp;ndash;
not exactly the security advancement we hoped for,
especially since poor, disconnected communities are already
some of the most vulnerable to fraud and criminal attack.
Alternatively, Bob&amp;rsquo;s Internet access might be temporarily unavailable &amp;ndash;
perhaps because that&amp;rsquo;s what Alice showed up to fix.
Or perhaps Alice is the captain of a
&lt;a href=&#34;https://www.nytimes.com/2017/03/04/business/dealbook/blockchain-ibm-bitcoin.html&#34;&gt;container ship&lt;/a&gt;
that just arrived in Bob&amp;rsquo;s port,
in which case Bob needs to verify thousands of bill-of-lading certificates.
This online verification incurs substantial communication costs
even when it works &amp;ndash;
and may force the entire port to shut down during a temporary Internet outage.&lt;/p&gt;

&lt;p&gt;Second, the basic security purpose of the blockchain concept
is to &lt;em&gt;distribute trust&lt;/em&gt; so that your security is not dependent
on any one central authority or trusted third party.
But any Web-based transaction query service like
&lt;a href=&#34;http://blockchain.info&#34;&gt;blockchain.info&lt;/a&gt;
is just such an authority or trusted party.
If the service is compromised or malicious, its HTTPS private key is stolen,
its &lt;a href=&#34;https://www.gohacking.com/dns-hijacking/&#34;&gt;domain name is hijacked&lt;/a&gt;,
or if &lt;em&gt;any&lt;/em&gt; Web certificate authority
&lt;a href=&#34;https://arstechnica.com/information-technology/2017/03/google-takes-symantec-to-the-woodshed-for-mis-issuing-30000-https-certs/&#34;&gt;mis-issues an HTTPS certificate for it&lt;/a&gt;,
then the attacker can work with Alice to convince Bob
that any arbitrary document is &amp;ldquo;on the blockchain&amp;rdquo; when it isn&amp;rsquo;t.&lt;/p&gt;

&lt;p&gt;The transaction query service becomes a single point of failure or compromise,
exactly what the blockchain concept was supposed to eliminate.
And if you&amp;rsquo;re going to have single points of failure or compromise,
you&amp;rsquo;ll be much better off using vastly cheaper and more mature technology
such as Oracle databases or Amazon cloud services.&lt;/p&gt;

&lt;h1 id=&#34;mediocre-solution-simplified-payment-validation-spv&#34;&gt;Mediocre Solution: Simplified Payment Validation (SPV)&lt;/h1&gt;

&lt;p&gt;Bob could in principle run a
&lt;a href=&#34;https://bitcoin.org/en/full-node#what-is-a-full-node&#34;&gt;Bitcoin full node&lt;/a&gt;,
thereby maintaining a mirror copy of the entire blockchain.
Having a full local copy of the blockchain would make it quick and easy
for Bob to verify Alice&amp;rsquo;s certificate,
and quite secure (though not completely).
But the sheer size of the blockchain and the continual bandwidth requirements
of downloading every block is already impractical even for most people
even with desktop PCs and fast Internet connections,
let alone people with only a low-power smartphone and limited network bandwidth.&lt;/p&gt;

&lt;p&gt;This verification efficiency problem is precisely what motivates
&lt;a href=&#34;https://bitcoin.org/en/glossary/simplified-payment-verification&#34;&gt;Simplified Payment Verification (SPV)&lt;/a&gt;,
a common technique in mobile Bitcoin clients.
In short, an SPV client maintains connections
with one or (preferably) several full nodes,
and downloads only block headers (about 80 bytes every 10 minutes)
rather than full blocks.
While vastly more economical than running a full node,
an SPV client must still be online to verify transactions,
and still consumes substantial precious bandwidth and power
to follow the blockchain.
The bandwidth an SPV client must consume to &amp;ldquo;catch up&amp;rdquo; with the blockchain
is linearly proportional to the time since the client was last run,
which can be megabytes if the app hasn&amp;rsquo;t synced for several months &amp;ndash;
and much more on a newer blockchain such as Ethereum,
which produces new blocks
&lt;a href=&#34;https://etherscan.io/chart/blocktime&#34;&gt;every 15 seconds&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;SPV also introduces security weaknesses.
If the client downloads the blockchain from only a single full node,
then that full node again becomes a single point of failure or compromise.
This full node could isolate the client from the rest of the network
and present the client with a fake &amp;ldquo;view&amp;rdquo; of the blockchain &amp;ndash;
e.g., a fork of the public blockchain with much less work,
containing a secretly forged certificate that Alice wants Bob to accept.
If the SPV client adopts the more secure practice of syncing against
multiple independent full nodes,
it consumes more bandwidth and opens more connections.
Even full nodes and well-connected SPV clients
remain vulnerable to
&lt;a href=&#34;http://vanbever.eu/pdfs/vanbever_bitcoin_routing_attacks_oakland_2017.pdf&#34;&gt;routing-based hijacking and isolation attacks&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The fundamental problem is that in a conventional proof-of-work blockchain
like Bitcoin or Ethereum,
there is no cryptographic means for anyone
to distinguish the &lt;em&gt;real&lt;/em&gt; public blockchain from a fake one,
except by comparing the amount of work invested in two competing views.
In other words, current blockchains
can never be validated in any absolute sense,
but only &lt;em&gt;relative&lt;/em&gt; to the perspectives of other active communication partners.
Because of this &amp;ldquo;relativistic verification&amp;rdquo; weakness,
anyone who is not online,
or who an attacker can isolate from the rest of the network even temporarily,
can be tricked into accepting a secret, fake blockchain
forked from the real blockchain at an arbitrary time in the past
with relatively modest proof-of-work effort on the attacker&amp;rsquo;s part.&lt;/p&gt;

&lt;p&gt;In summary, verifying a transaction on a current public blockchain
such as Bitcoin or Ethereum
fundamentally requires the verifier to be &lt;em&gt;online&lt;/em&gt; and &lt;em&gt;well-connected&lt;/em&gt;.
Absent either of these requirements,
verification of a transaction &amp;ndash; or a certificate anchored in a transaction &amp;ndash;
is either impossible or insecure.&lt;/p&gt;

&lt;h1 id=&#34;better-solution-collectively-signed-transactions&#34;&gt;Better Solution: Collectively Signed Transactions&lt;/h1&gt;

&lt;p&gt;In a &lt;a href=&#34;https://www.usenix.org/conference/usenixsecurity16/technical-sessions/presentation/kogias&#34;&gt;paper at USENIX Security &amp;lsquo;16&lt;/a&gt;
we introduced
&lt;a href=&#34;http://hackingdistributed.com/2016/08/04/byzcoin/&#34;&gt;ByzCoin&lt;/a&gt;,
a next-generation blockchain architecture developed by the
&lt;a href=&#34;http://dedis.epfl.ch/&#34;&gt;Decentralized/Destributed Systems (DEDIS) lab&lt;/a&gt;
at &lt;a href=&#34;https://www.epfl.ch/&#34;&gt;EPFL&lt;/a&gt;.
In summary, ByzCoin offers immediate transaction finality
through scalable
&lt;a href=&#34;https://en.wikipedia.org/wiki/Byzantine_fault_tolerance&#34;&gt;Byzantine consensus&lt;/a&gt;,
improves on Bitcoin&amp;rsquo;s transaction throughput by two orders of magnitude
(from ~7 to ~900 transactions per second),
and similarly improves on Bitcoin&amp;rsquo;s transaction latency by
an order magnitude
(from ~10 minutes to 1&amp;ndash;2 minutes).&lt;/p&gt;

&lt;p&gt;One of the tools ByzCoin uses to make Byzantine consensus scale well
is to leverage &lt;em&gt;collective signing&lt;/em&gt; or &lt;em&gt;CoSi&lt;/em&gt;,
an efficient digital signature aggregation protocol
that we introuced in
&lt;a href=&#34;http://dedis.cs.yale.edu/dissent/papers/witness-abs&#34;&gt;an earlier paper&lt;/a&gt;
we presented at
&lt;a href=&#34;http://www.ieee-security.org/TC/SP2016/program.html&#34;&gt;IEEE Security &amp;amp; Privacy &amp;lsquo;16&lt;/a&gt;
(a top security/privacy conference still affectionately known as &amp;ldquo;Oakland&amp;rdquo;
even though the conference is no longer actually held in Oakland).
To enable the use of Byzantine consensus in a proof-of-work blockchain,
ByzCoin forms a &lt;em&gt;consensus group&lt;/em&gt;
from a sample of recently-successful proof-of-work miners &amp;ndash;
e.g., from the past day or past week of mining effort.
This consensus group then executes the classic
&lt;a href=&#34;http://www.pmg.csail.mit.edu/papers/bft-tocs.pdf&#34;&gt;PBFT&lt;/a&gt;
consensus algorithm to commit transactions securely with immediate finality.
However the &lt;em&gt;Prepare&lt;/em&gt; and &lt;em&gt;Commit&lt;/em&gt; phases of in the PBFT protocol
traditionally uses unscalable &amp;ldquo;all-to-all&amp;rdquo; communication,
as illustrated below.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&#34;bft-tocs.svg&#34; alt=&#34;Phases of Castro-Liskov PBFT protocol&#34; style=&#34;width:80%&#34;&gt;
&lt;a href=&#34;http://www.pmg.csail.mit.edu/papers/bft-tocs.pdf&#34;&gt;Castro and Liskov, Fig. 1&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;ByzCoin instead uses CoSi in these phases to form
a single compact, efficiently-verifiable collective signature
cryptographically attesting that a sufficient fraction of the consensus group
has &amp;ldquo;signed off&amp;rdquo; on preparing, then committing, the new block.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&#34;cosi-blocks.svg&#34; alt=&#34;Collectively signed blockchain as in ByzCoin&#34; style=&#34;width:50%&#34;&gt;
&lt;a href=&#34;https://www.usenix.org/system/files/conference/usenixsecurity16/sec16_paper_kokoris-kogias.pdf&#34;&gt;Kokoris et al, Fig. 1&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;While ByzCoin&amp;rsquo;s collective signatures were mainly intended
for the consumption of other miners in the consensus group,
in principle &lt;em&gt;anyone&lt;/em&gt; can actually use these collective signatures
to check whether a block has been committed to the blockchain.
The verifier can be a low-power device with little or no Internet connectivity,
and doesn&amp;rsquo;t need to maintain connections with many other network nodes,
because the collective signature itself contains cryptographic evidence
that a sufficient threshold of miners have validated and committed the block.&lt;/p&gt;

&lt;h1 id=&#34;following-an-evolving-consensus-group&#34;&gt;Following an Evolving Consensus Group&lt;/h1&gt;

&lt;p&gt;So did ByzCoin already solve the offline transaction verification problem?
Not quite.
To check a collective signature,
the verifier needs to know the correct &lt;em&gt;public keys&lt;/em&gt;
representing the set of miners comprising the consensus group
at the moment in time when the block in question was committed.
Because ByzCoin forms this consensus group from a rotating sample
of miners who recently solved proof-of-work puzzles,
this set of public keys may continually change &amp;ndash;
up to once every few minutes.&lt;/p&gt;

&lt;p&gt;If Bob wants to verify a certificate Alice notarized on the blockchain
a year or two,
that block might have been committed and collectively signed
by a completely different set of miners (witb different public keys)
than the set of miners &lt;em&gt;currently&lt;/em&gt; committing transactions &amp;ndash;
or that were committing transactions
as of the last time Bob&amp;rsquo;s personal device caught up with the blockchain.
If Bob&amp;rsquo;s device is online now or synced recently,
then Alice&amp;rsquo;s certificate may be long in the past
with respect to Bob&amp;rsquo;s latest reference point on the blockchain.
In this case,
Bob&amp;rsquo;s device can in principle &amp;ldquo;walk backwards&amp;rdquo; on the blockchain
from his reference point to the block containing Alice&amp;rsquo;s certificate,
following the hash links from each block to the immediately prior one,
provided Bob has stored (or has access to) all the relevant block headers.&lt;/p&gt;

&lt;p&gt;If Bob&amp;rsquo;s device has been offline for a long time, however,
then Bob&amp;rsquo;s reference point on the blockchain may be behind Alice&amp;rsquo;s in time.
In this case, Bob&amp;rsquo;s device must &lt;em&gt;walk forward&lt;/em&gt; in time on the blockchain
from his reference point to the block containing Alice&amp;rsquo;s certificate.
Bob obviously won&amp;rsquo;t have the relevant block headers yet,
since he was offline when they were committed &amp;ndash;
but &lt;em&gt;Alice&lt;/em&gt; might have copies of those intervening block headers,
which she can simply send to Bob via peer-to-peer communication.
How does Bob know these more recent block headers Alice supplied him
represent correct blocks from &amp;ldquo;the one true blockchain&amp;rdquo;
and not a fake blockchain that Alice concocted to mislead Bob?
With conventional blockchains, he can&amp;rsquo;t tell the difference &amp;ndash;
but with ByzCoin or Chainiac, he simply checks the collective signatures.&lt;/p&gt;

&lt;p&gt;Given that the consensus group changes over time, however,
what set of public keys does Bob check the collective signatures against?
This is where Chainiac&amp;rsquo;s first key feature comes into play.
Whenever the consensus group changes,
Chainiac uses the &lt;em&gt;previous&lt;/em&gt; consensus group to sign a &amp;ldquo;forward link&amp;rdquo;
containing two pieces of information:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A secure hash-pointer to the first block committed by
the &lt;em&gt;next&lt;/em&gt; consensus group, and&lt;/li&gt;
&lt;li&gt;A description of how the consensus group changed;
i.e., which miners&amp;rsquo; public keys were added and/or removed.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Using these collectively signed forward links
supplied by Alice along with the block headers,
Bob can walk forward in time from his last blockchain reference point
to Alice&amp;rsquo;s.
Bob learns about all relevant consensus group changes along the way,
so that he always knows exactly the correct set of public keys
against which to check each collective signature in the chain.
Since all of these forward links are collectively signed by many miners,
Alice cannot create a fake blockchain that Bob will accept
unless she compromises or colludes with a large number of miners
during the time period since Bob last synced with the blockchain.&lt;/p&gt;

&lt;h1 id=&#34;leaping-through-time-with-skipchains&#34;&gt;Leaping Through Time with SkipChains&lt;/h1&gt;

&lt;p&gt;Between the back links that are already standard in blockchains,
and the collectively-signed forward links that Chainiac introduces,
any party can securely &amp;ldquo;catch up&amp;rdquo; on a Chainiac blockchain
via peer-to-peer communication with anyone else who is more up-to-date &amp;ndash;
provided the latter party has actually stored and can forward
&lt;em&gt;all&lt;/em&gt; the intervening block headers and forward links.
As with the SPV approach, however,
even just downloading and storing all block &lt;em&gt;headers&lt;/em&gt;
can impose a significant bandwidth, power, and storage burden
on low-power mobile devices.&lt;/p&gt;

&lt;p&gt;For this reason, Chainiac introduces &lt;em&gt;SkipChains&lt;/em&gt;,
a novel cryptographic blockchain structure loosely inspired by
&lt;a href=&#34;https://en.wikipedia.org/wiki/Skip_list&#34;&gt;skip lists&lt;/a&gt;.
The fundamental idea of a skip list is to augment a conventional
&lt;a href=&#34;https://en.wikipedia.org/wiki/Linked_list&#34;&gt;singly-linked&lt;/a&gt; or
&lt;a href=&#34;https://en.wikipedia.org/wiki/Doubly_linked_list&#34;&gt;doubly-linked list&lt;/a&gt;
with additional &lt;em&gt;long-distance&lt;/em&gt; links,
which are structurally redendant,
but allow much more efficient traversal and search
across arbitrary distances along the timeline
in a logarithmic, rather than linear, number of steps.&lt;/p&gt;

&lt;p&gt;Chainiac adapts the skip list idea to blockchains
by adding long-distance links both forward and backward in time.&lt;/p&gt;

&lt;p&gt;When Chainiac creates a new block,
that block includes not just one hash link to the immediately prior block,
but also additional hash links to that point farther backward in time.
This way, any party can find, or prove the integrity of,
an old transaction anywhere in a blockchain&amp;rsquo;s prior history
with a small (logarithmic) number of hash-link steps.
This long-distance back-link refinement is not new or unique to Chainiac,
however;
other blockchain and hash-chain designs have used the same idea.&lt;/p&gt;

&lt;p&gt;What &lt;em&gt;is&lt;/em&gt; new and unique to Chainiac is
to provide long-distance &lt;em&gt;forward&lt;/em&gt; links as well
via collective signatures.
With both long-distance forward and backward links,
a SkipChain becomes cryptographically traversable in both directions,
such that one party can efficiently prove the correctness of a transaction
anywhere in time with respect to
the other party&amp;rsquo;s reference point on the blockchain,
in a logarithmic number of steps,
regardless of which party has a more up-to-date view of the blockchain.&lt;/p&gt;

&lt;p&gt;If Alice wishes to show her professional certificate to Bob, for example,
but Bob&amp;rsquo;s personal device last synced with the blockchain
months or years before when Alice received her certificate,
Alice&amp;rsquo;s device simply needs to send Bob&amp;rsquo;s device
a small (logarithmic) number of collectively signed forward links
to prove securely that Alice&amp;rsquo;s certificate is indeed on the blockchain.
Through this peer-to-peer interaction,
Bob&amp;rsquo;s device has now obtained a more recent blockchain reference point
from which he can not only validate Alice&amp;rsquo;s certificate,
but also validate future blockchain updates more securely.
Even if a particularly strong attacker
eventually cracks or steals the private keys
of a threshold number of members of an old consensus group,
the attacker cannot get Bob &amp;ndash;
or any other party with a more recent reference point &amp;ndash;
to accept a fake version of the blockchain.&lt;/p&gt;

&lt;h1 id=&#34;secure-key-evolution-and-management-in-skipchains&#34;&gt;Secure Key Evolution and Management in SkipChains&lt;/h1&gt;

&lt;p&gt;Like single-step forward links,
long-distance forward links in Chainiac
include metadata summarizing any changes in the public keys
of consensus group members between the source and destination points in time.
A long-distance forward link effectively summarizes all the public key changes
in the consensus group
across all the single-hop forward links the long-distance link skips over.
The size of such an update is limited
to the total number of public keys in the consensus group,
regardless of the distance in time or number of blocks the link represents,
in the worst-case where the consensus group &amp;ldquo;rolled over&amp;rdquo; completely
within that time period.&lt;/p&gt;

&lt;p&gt;Since a long-distance forward link cannot actually be formed and signed
until the (future) block it points to is committed to the blockchain,
Chainiac keeps a subset of &amp;ldquo;old&amp;rdquo; consensus groups alive and active
for longer than they might otherwise be,
&amp;ldquo;watching&amp;rdquo; for the blockchain to grow long enough
to create and collectively sign the desired forward link.
This need to extend the &amp;ldquo;signing lifetimes&amp;rdquo; of some consensus groups
can create a risk of marginally weakening security,
by giving a potential attacker more time to crack or steal
the private keys of a threshold number of members of that consensus group.
The collective signatures still ensure that the attacker
would have to compromise &lt;em&gt;many&lt;/em&gt; such members&amp;rsquo; private keys and not just one,
but even so, we would prefer to minimize the blockchain&amp;rsquo;s potential weakness
to a powerful, patient, and persistent attacker.&lt;/p&gt;

&lt;p&gt;We can bolster Chainiac&amp;rsquo;s security against long-term persistent attacks
in at least two ways.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A Chainiac blockchain can enforce a maximum forward-link distance:
one year might be reasonable, for example.
This policy ensures that all (honest) consensus group members
securely erase their private keys after at most one year,
limiting the time window an attacker has to compromise
a threshold number of private keys from an old consensus group.
This forward-link distance limit implies that extremely out-of-date
devices needing to catch up with the blockchain after multiple years
will need to catch up &amp;ldquo;one year at a time&amp;rdquo; &amp;ndash;
at a cost linear rather than logarithmic in the number of years.
This is probably not much of a problem in practice,
since few electronic devices tend to remain in use
after &lt;em&gt;that&lt;/em&gt; many years anyway.&lt;/li&gt;
&lt;li&gt;Another way to strengthen a SkipChain&amp;rsquo;s forward security,
which we have not yet implemented but plan to,
is for consensus group members to use
&lt;a href=&#34;https://en.wikipedia.org/wiki/Key_derivation_function&#34;&gt;derived keys&lt;/a&gt;
instead of their &amp;ldquo;base&amp;rdquo; keys,
when collectively signing higher-level, long-distance forward links.
Each time a consensus group signs a forward link at one level,
all consensus group members derive new key pairs for the next level
and include the next-level public keys in the metadata
for the forward link currently being signed.
Once the collective signature at this level is formed,
all honest consensus group members then securely erase their private keys
at this level and retain only the private keys for the next level.
In this way, a powerful attacker
who can compromise a threshold of private keys over a long time period
obtains only the ability to forge comparably long-distance forward links:
all shorter-distance forward links remain secure and unforgeable.
Such an attacker then can only compromise devices
that sync with the blockchain extremely rarely.
Devices that sync more regularly,
either by going online or via peer-to-peer updates,
remain immune to such an attacker
because they only ever follow shorter-distance forward links.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Note that even devices that sync regularly with the blockchain
may sometimes still have to follow long-distance &lt;em&gt;backward&lt;/em&gt; links,
e.g., if Alice obtained her certificate several years
before she needs to show it to Bob.
Long-distance backward links are somewhat less of a security concern, however,
because they are represented by hashes rather than collective signatures,
and a hash has no private key that might be stolen or coerced with time.
The cryptographic hash &lt;em&gt;algorithm&lt;/em&gt; might still eventually be compromised,
but by then hopefully the blockchain has migrated to
a stronger hash algorithm with a wider output.
At this point, assuming the migration is handled carefully,
all devices with reasonably up-to-date software
need rely only on the new, stronger hashes
and become invulnerable even to an outright break
in the original hash algorithm.&lt;/p&gt;

&lt;h1 id=&#34;summary&#34;&gt;Summary&lt;/h1&gt;

&lt;p&gt;Current blockchains such as Bitcoin or Ethereum,
while showing great promise for notarization applications
such as academic credentials or professional certificates,
present the serious problem of not supporting secure
offline or peer-to-peer verification.
SkipChains solve this problem by creating a blockchain
that is cryptographically traversible and efficiently verifiable
both forward and backward in time,
using hashes for back links and collective signatures for forward links.
Multiple levels of links, inspired by skip lists,
enable efficient traversal and proofs over long distances in both directions
in a small (logarithmic) number of steps.
We hope that the offline and peer-to-peer verifiability properties
that SkipChains provide
will substantially extend the effective applicability
of future blockchain technology,
as well as increase their robustness and resilience
to communication failures or
&lt;a href=&#34;http://vanbever.eu/pdfs/vanbever_bitcoin_routing_attacks_oakland_2017.pdf&#34;&gt;routing-based attacks&lt;/a&gt;.&lt;/p&gt;

&lt;!--
---

*I wish to thank ...
for helpful feedback on early drafts of this post.*
--&gt;
</description>
    </item>
    
    <item>
      <title>Selfish Mining in Bitcoin and ByzCoin</title>
      <link>https://bford.github.io/2016/xx/xx/selfish/</link>
      <pubDate>Mon, 31 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://bford.github.io/2016/xx/xx/selfish/</guid>
      <description>

&lt;p&gt;XXX intro&lt;/p&gt;

&lt;p&gt;summary of selfish mining&lt;/p&gt;

&lt;p&gt;selfish mining as a transparency problem:
you get to build on a blockchain head you haven&amp;rsquo;t published.&lt;/p&gt;

&lt;p&gt;same as transparency problem in Apple FBI case for example;
that&amp;rsquo;s what CoSi is for.&lt;/p&gt;

&lt;p&gt;solution: any keyblock you build on is collectively signed,
and the next block&amp;rsquo;s hash covers the last block&amp;rsquo;s signature.&lt;/p&gt;

&lt;p&gt;if you withhold a block, you can&amp;rsquo;t get a collective signature on it;
without that collective signature,
you can&amp;rsquo;t secretly mine a next block on top of it.&lt;/p&gt;

&lt;h2 id=&#34;selfish-mining&#34;&gt;Selfish Mining&lt;/h2&gt;

&lt;p&gt;Finally, we consider the now much more well-understood problem of
&lt;a href=&#34;http://hackingdistributed.com/2013/11/04/bitcoin-is-broken/&#34;&gt;selfish mining&lt;/a&gt;.
A selfish miner strategically withholds some of its successfully mined blocks
in attempt to gain a higher share of mining rewards,
by causing other miners to waste effort mining redundant blocks.
For example, if Greedy Greg successfully mines a new block,
he might deliberately delay announcing it.
If Innocent Ivan announces a competing block,
Greg quickly races to announce and widely distribute his,
which may reliably overtake Ivan&amp;rsquo;s if Greg is fast and well-connected.
Alternatively, if Greg manages to mine a &lt;em&gt;second&lt;/em&gt; block in private
before a competing first block appears,
then Greg is in the enviable position of being able to &amp;ldquo;trump&amp;rdquo;
and eliminate that competing block once it does appear,
simply by revealing his longer private blockchain.&lt;/p&gt;

&lt;p&gt;While ByzCoin&amp;rsquo;s keyblock mining mechanism alone is still
vulnerable to selfish mining,
its microblock commitment process using Byzantine consensus
provides a clean, simple defense against selfish mining.
Any transaction microblock the consensus group commits
contains a cryptographic hash of the latest known keyblock at the time,
and any newly-mined keyblock must similarly contain
a cryptographic hash of a recently-committed microblock
(e.g., within a few microblocks from the head).
Whenever the consensus group commits a new microblock,
all honest members verify that the keyblock pointer in the new microblock
is consistent with those in all prior microblocks,
ensuring that any new keyblock is &amp;ldquo;locked in&amp;rdquo;
irreversably once the new keyblock is known.
This leaves only seconds, rather than minutes,
in which a selfish miner could
try to announce and distribute a competing keyblock.
Further, because each keyblock must reference a recent microblock,
any newly-mined keyblock becomes invalid and useless
if its owner fails to announce it
within a few microblock commitment cycles &amp;mdash;
again, on the order of seconds rather than minutes.&lt;/p&gt;

&lt;p&gt;In essence, ByzCoin&amp;rsquo;s microblock commit mechanism
enforces transparency on the keyblock mining process,
ensuring that a selfish ByzCoin miner would likely be faced with
a vanishingly small probability of profiting from
any keyblock-withholding strategy.&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;This post of course represents only an informal,
and no doubt incomplete, analysis
of the differences in incentives between Bitcoin and ByzCoin,
focusing primarily on mining incentives.
It is quite possible that a full, rigorous incentive analysis of ByzCoin
may reveal new incentive-compatibility issues that its architecture introduces.
Further, ByzCoin is still an experimental protocol
under rapid development and evoluation.&lt;/p&gt;

&lt;p&gt;Given these caveats, however,
ByzCoin&amp;rsquo;s architecture at least appears to be much more resilient
to the known strategic mining attacks against Bitcoin,
whether through block withholding or deliberate forking.
In particular,
by replacing Bitcoin&amp;rsquo;s instant-gratification, winner-take-all reward model
with a delayed-gratification, investment-dividend model,
ByzCoin ensures that the distribution of mining profits are fixed
long before any strategic miner might know about or be able to respond to
the appearance of a goose egg or other transaction fee variance.
By ensuring that keyblocks and microblocks track each other cryptographically,
ByzCoin forces miners either to announce new keyblocks quickly
or else lose them,
making selfish mining unprofitable.&lt;/p&gt;

&lt;p&gt;In short, it does not appear necessary for new cryptocurrencies to
&amp;ldquo;&lt;a href=&#34;http://freedom-to-tinker.com/2016/10/21/bitcoin-is-unstable-without-the-block-reward/&#34;&gt;make the block reward permanent and accept monetary inflation
as inevitable&lt;/a&gt;&amp;rdquo;
as Narayanan suggests.
Whether inflationary or deflationary monetary policies are preferable
is an important and highly debatable question,
but it need not be constrained by technical weaknesses of Bitcoin.
With more sophisticated blockchain architectures such as ByzCoin,
there is plenty of hope that mining incentives can work
independent of monetary policy.&lt;/p&gt;

&lt;!--
---

*I wish to thank ...
for helpful feedback on early drafts of this post.*
--&gt;
</description>
    </item>
    
    <item>
      <title>An advanced crypto library for Go</title>
      <link>https://bford.github.io/2016/03/08/crypto/</link>
      <pubDate>Tue, 08 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://bford.github.io/2016/03/08/crypto/</guid>
      <description>

&lt;h1 id=&#34;page-title&#34;&gt;{{ page.title }}&lt;/h1&gt;

&lt;p&gt;Interesting features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;An abstract group arithmetic framework for public-key cryptography
based on the discrete logarithm problem.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Several alternative concrete instantiations of this abstract
group arithmetic framework,
based on the NIST elliptic curve implementations in the Go standard library
and in the OpenSSL crypto library,
and implementations of both generic Edwards curves
and an adaptation of Adam Langley&amp;rsquo;s Ed25519-curve-specific
optimized group arithmetic code to the abstract group API.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Implementations of a number of advanced crypto algorithms
built on this abstract group arithmetic framework,
and hence automatically compatible woth both integer group
and any suitable elliptic curves:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Shamir Verifiable Secret Sharing (VSS),
the standard foundation for t-of-n threshold cryptographic techniques.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;An implementation of the general Camenisch/Stadler framework
for proofs of knowledge based on the discrete-logarithm problem.
For example&amp;hellip;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Anonymous and pseudonymous public-key encryption and signatures,
where the sender or receiver are identified only as an anonymous member
of some explicit &lt;em&gt;set&lt;/em&gt; of public keys, without revealing anything
about which member of the set signed the message or is to receive it.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;C. Andrew Neff&amp;rsquo;s cryptographic protocol for proving
the correctness of a shuffle.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Backdoors, Trusted Servers, and Deanonymization</title>
      <link>https://bford.github.io/2016/03/08/backdoors/</link>
      <pubDate>Tue, 08 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://bford.github.io/2016/03/08/backdoors/</guid>
      <description>

&lt;h1 id=&#34;page-title&#34;&gt;{{ page.title }}&lt;/h1&gt;

&lt;p&gt;To my knowledge there are currently only two fundamentally distinct approaches
to achieving strong anonymity online,
and the same legendary computing figure, David Chaum,
pioneered both.
His first approach,
&lt;a href=&#34;http://www.freehaven.net/anonbib/cache/chaum-mix.pdf&#34;&gt;mixes&lt;/a&gt;,
relay messages over multi-hop paths around the network
to obscure their source and destinations.
State-of-the-art deployed anonymity systems such as
&lt;a href=&#34;https://www.torproject.org/&#34;&gt;Tor&lt;/a&gt;
are highly evolved and performance-optimized variants
of this basic relaying idea.&lt;/p&gt;

&lt;p&gt;Chaum&amp;rsquo;s second approach,
&lt;a href=&#34;http://www.freehaven.net/anonbib/cache/chaum-dc.pdf&#34;&gt;dining cryptographers&lt;/a&gt;,
instead uses information-coding principles to hide the sender of a message
among a group of nodes all of whom seem to be spewing gibberish at once.
It&amp;rsquo;s as if you are listening to a crowd
&lt;a href=&#34;http://www.christianpublishers.org/Speaking%20in%20Tongues-1.jpg&#34;&gt;speaking in tongues&lt;/a&gt;
but what you hear is a single unified voice,
emanating from no one in particular,
elucidating the Ten Commandments with perfect clarity.
Chaum then moved away from anonymity systems
to other projects such as the first major attempt at practical electronic cash
(yes, he was also the &amp;ldquo;first&amp;rdquo; Satoshi Nakamoto),
and secure electronic voting systems.
While several research projects,
including Cornell&amp;rsquo;s
&lt;a href=&#34;https://www.cs.cornell.edu/people/egs/herbivore/&#34;&gt;Herbivore&lt;/a&gt;
and my own
&lt;a href=&#34;http://dedis.cs.yale.edu/dissent/&#34;&gt;Dissent&lt;/a&gt;
have made progress toward making the dining cryptographers practical,
it has not (yet) made it into widely-deployed systems.&lt;/p&gt;

&lt;p&gt;Given Chaum&amp;rsquo;s status as &amp;ldquo;the father of online anonymity&amp;rdquo;,
it stands to reason
that his first venture &lt;em&gt;back&lt;/em&gt; into anonymity in many years
would get some attention.
Today at &lt;a href=&#34;http://www.realworldcrypto.com/rwc2016&#34;&gt;Real World Crypto&lt;/a&gt;,
he presented
&lt;a href=&#34;http://eprint.iacr.org/2016/008.pdf&#34;&gt;cMix&lt;/a&gt;,
an interesting new take on the mix approach
that aims to achieve better scalability, lower latencies,
and sufficiently low computation costs on client devices
to be practical for use in energy-conscious mobile phone apps.
I had the pleasure of learning about cMix directly from David
and discussing it with him at some length last year,
but my recent move to &lt;a href=&#34;http://www.epfl.ch/&#34;&gt;EPFL&lt;/a&gt; and other time demands
prevented me from being able to take a more active role in the project.
The design of cMix is definitely interesting and contains some promising ideas,
but that is not what this blog post is about.&lt;/p&gt;

&lt;h2 id=&#34;ending-the-crypto-war-or-stoking-the-flames&#34;&gt;Ending the Crypto War, or Stoking the Flames?&lt;/h2&gt;

&lt;p&gt;Earlier today before Chaum&amp;rsquo;s talk, Wired also released
&lt;a href=&#34;http://www.wired.com/2016/01/david-chaum-father-of-online-anonymity-plan-to-end-the-crypto-wars/&#34;&gt;an article on it&lt;/a&gt;
containing a statement that will doubtless attract
a lot more attention than anything in the technical paper on cMix:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Chaum is also building into PrivaTegrity another feature that’s sure to be far more controversial: a carefully controlled backdoor that allows anyone doing something “generally recognized as evil” to have their anonymity and privacy stripped altogether.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Well before Chaum&amp;rsquo;s talk even began,
Twitter was ablaze with discussion about Chaum&amp;rsquo;s &amp;ldquo;backdoor&amp;rdquo; in PrivaTegrity.&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;The main benefit of Chaum&amp;#39;s new system, as far as I can tell, is that it is a political gift to FBI Director Comey. &lt;a href=&#34;https://t.co/64Au0lXxuL&#34;&gt;https://t.co/64Au0lXxuL&lt;/a&gt;&lt;/p&gt;&amp;mdash; Christopher Soghoian (@csoghoian) &lt;a href=&#34;https://twitter.com/csoghoian/status/684730483503149056&#34;&gt;January 6, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;I&amp;#39;m heartbroken to see that Chaum is proposing key escrow for everyone on the planet: &lt;a href=&#34;https://t.co/zWZ3bUQsJf&#34;&gt;https://t.co/zWZ3bUQsJf&lt;/a&gt; What happened to David Chaum?&lt;/p&gt;&amp;mdash; Jacob Appelbaum (@ioerror) &lt;a href=&#34;https://twitter.com/ioerror/status/684763375260270592&#34;&gt;January 6, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&#34;but-where-s-the-backdoor&#34;&gt;But Where&amp;rsquo;s the Backdoor?&lt;/h2&gt;

&lt;p&gt;One important observation, however, is that the word &amp;ldquo;backdoor&amp;rdquo;
appears nowhere in the actual
&lt;a href=&#34;http://eprint.iacr.org/2016/008.pdf&#34;&gt;technical paper on cMix&lt;/a&gt; written by
Chaum and his collaborators.
While cMix is the anonymous communication protocol Chaum is proposing,
PrivaTegrity is a larger system built on cMix
to provide anonymous chat and other anonymous interaction applications
directly usable to ordinary users.
In essence, cMix is just an &amp;ldquo;engine&amp;rdquo; whereas PrivaTegrity is the car.
So where is this supposed &amp;ldquo;backdoor&amp;rdquo; &amp;emdash; in the engine or the car?&lt;/p&gt;

&lt;p&gt;The only part of the technical cMix paper that even suggests
the &amp;ldquo;backdoor&amp;rdquo; idea (without using that term)
is section IX.B., two brief paragraphs on the paper&amp;rsquo;s second-to-last page.
The first is the most crucial:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Independent from cMix, PrivaTegrity addresses potential
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;abuse of anonymity services by establishing a trust model
that offers a balance of anonymity and accountability. On the
one hand, PrivaTegrity aims to provide privacy at a technical
level that is not penetrable by nation states. On the other
hand, PrivaTegrity aims to provide integrity, both prior restraint
and accountability after the fact, that is inescapably tied to
individuals. Only if all of the mixing nodes cooperate, can the
senders and receivers of messages be linked or identified.&lt;/p&gt;

&lt;p&gt;In essence, cMix routes users&amp;rsquo; messages through a series of mixing nodes
(the Wired article talks about nine servers in different countries),
such that none of the servers can individually unmask an anonymous user,
but all of the servers (or their operators) together can unmask a user
that they collectively agree to be deserving of such treatment.&lt;/p&gt;

&lt;p&gt;This property is by no means new, unusual, or unique to cMix, however:
in fact a huge number of cryptographic and distributed systems
have this essential security property.
No one really knows how to build secure systems
in which you need to trust &lt;em&gt;no one at all&lt;/em&gt;.
Instead the best we can really do is to &lt;em&gt;split&lt;/em&gt; trust across multiple entities
that we hope are at least somewhat independent,
so that no one entity needs to be fully trusted.&lt;/p&gt;

&lt;p&gt;This is exactly the same security principle that motivates
&lt;a href=&#34;http://www.deansafe.com/uncodrsawisa.html&#34;&gt;safes with two keys&lt;/a&gt;.
If both keys are required to open the safe and are held by different employees,
then a single dishonest employee working alone will be unable to raid it
without somehow aquiring the other key.
But if the two key-holders conspire,
the two-key mechanism will do nothing to stop them.&lt;/p&gt;

&lt;h2 id=&#34;trust-splitting-in-anonymity-systems&#34;&gt;Trust Splitting in Anonymity Systems&lt;/h2&gt;

&lt;p&gt;Essentially all of the practical anonymity systems,
both deployed and proposed in research,
embody this limited trust-splitting property in some fashion.
Several years ago my group
&lt;a href=&#34;http://dedis.cs.yale.edu/dissent/papers/eurosec12-abs&#34;&gt;coined the term &amp;ldquo;anytrust&amp;rdquo;&lt;/a&gt;
for this security model in the context of anonymity systems,
because users need only assume that &amp;ldquo;any one&amp;rdquo; of the servers is honest
and not colluding with all the others against them.
Users don&amp;rsquo;t even need to know or guess which server is honest;
one merely &lt;em&gt;needs to exist&lt;/em&gt;.
Once again, we did not by any means invent this security model;
it has been in use in many ways and under many names for decades
in cryptography and distributed systems practice.&lt;/p&gt;

&lt;p&gt;Users of the well-known &lt;a href=&#34;https://www.torproject.org/&#34;&gt;Tor&lt;/a&gt; anonymity system,
for example,
depend for their security on a small group of
&lt;em&gt;directory authorities&lt;/em&gt; &amp;emdash;
of which &lt;a href=&#34;https://twitter.com/kristovatlas/status/684845884576796673&#34;&gt;there are currently 10&lt;/a&gt; &amp;emdash;
to keep track of and let Tor clients know the set of relays
available to help anonymize their messages.
If &amp;hellip;&lt;/p&gt;

&lt;p&gt;PrivaTegrity&lt;/p&gt;

&lt;p&gt;is Chaum&amp;rsquo;s &amp;ldquo;backdoor&amp;rdquo; a technical feature?
no, just a common architectural weakness.&lt;/p&gt;

&lt;p&gt;Tor has it&amp;hellip; (examples)&lt;/p&gt;

&lt;p&gt;Can we eliminate such trusted server groups?  Yes, but it&amp;rsquo;s hard.&lt;/p&gt;

&lt;p&gt;Does CT fix it?  Not quite.&lt;/p&gt;

&lt;p&gt;The policy question: are backdoors needed/good in an anonymity systems?&lt;/p&gt;

&lt;p&gt;What would the processes be for controlled deanonymization of a user,
supposing one created a system and set it up like Chaum&amp;rsquo;s
on the (policy) basis that server operators would cooperate
to deanonymize users under &amp;ldquo;the right conditions&amp;rdquo;?&lt;/p&gt;

&lt;p&gt;who picks those 9 server operators?  Who funds them?
(The power of the purse is strong&amp;hellip;)
If a nation-state comes to them and says,
&amp;ldquo;we&amp;rsquo;ll block your service and thus destroy a big part of your legal business
unless you help us deanonymize these people who we call &amp;lsquo;terrorists&amp;rsquo;
but the rest of the world calls &amp;lsquo;political dissidents&amp;rsquo;&amp;ldquo;,
what do they do?&lt;/p&gt;

&lt;p&gt;sybil problem, multiple possible levels of response&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to prove DNSSEC isn&#39;t a key escrow scheme</title>
      <link>https://bford.github.io/2016/03/08/dnssec/</link>
      <pubDate>Tue, 08 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://bford.github.io/2016/03/08/dnssec/</guid>
      <description>

&lt;h1 id=&#34;page-title&#34;&gt;{{ page.title }}&lt;/h1&gt;

&lt;p&gt;&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rethinking Social Media to Escape the Echo Chamber</title>
      <link>https://bford.github.io/2016/11/13/info/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bford.github.io/2016/11/13/info/</guid>
      <description>

&lt;p&gt;Hillary Clinton&amp;rsquo;s [electoral college defeat]()
has provoked many questions about how so many Americans
could have choosen a
[misogynistic](),
[xenophobic](),
[pathologically lying](),
[authoritarian]()
[ideologue]()
as their next President &amp;ndash;
and one of many targets of their blame is
[social media]().
Compounding its
[polarizing &amp;ldquo;echo chamber&amp;rdquo; effect](),
online discussions were tarnished with
[deliberate misinformation](),
including
[incorrect instructions on how to vote]().
But is the solution for social media companies like Facebook
to ``do a better job&amp;rdquo; at curating the world&amp;rsquo;s content
to suppress out false or hateful speech?&lt;/p&gt;

&lt;p&gt;Asking technology companies
to serve as the world&amp;rsquo;s arbiters of truth and civility
is not only counterproductive but
just as profoundly dangerous as the social maladies
that social media creates or exacerbates.
We need to rethink social media from the ground up
to make it &lt;em&gt;more&lt;/em&gt; open and transparent, not less &amp;ndash;
and most importantly, to infuse online debate with
some semblance of democratic legitimacy.
The purpose of this blog post is not to dwell on
[the many flaws of social media]()
but to explore how we could get it better.&lt;/p&gt;

&lt;p&gt;What would an ethical, secure, and democratic alternative
to either conventional ``elitist&amp;rdquo; media
or the polarizing echo chamber of social media look like?
It would need to be built on a foundation of equality among
all &lt;em&gt;real&lt;/em&gt; people;
it would ensure &lt;em&gt;proportional&lt;/em&gt; speech and accurately expose biases;
it would counteract polarization by ensuring that
all participants are exposed to all viewpoints;
and it would provide strong but proportionate and abuse-resistant
protections for anonymity and free speech &lt;em&gt;before&lt;/em&gt; the ballot box,
in order to head off unpleasant surprises being revealed
only &lt;em&gt;at&lt;/em&gt; the ballot box.&lt;/p&gt;

&lt;h2 id=&#34;foundation-the-equality-of-real-people&#34;&gt;Foundation: The Equality of &lt;em&gt;Real&lt;/em&gt; People&lt;/h2&gt;

&lt;p&gt;When a story or claim appears with 1,000 ``likes&amp;rdquo;,
how do we know whether 1,000 &lt;em&gt;real&lt;/em&gt; people liked the story,
or only one real troll and his 999 [sock puppet accounts]()?&lt;/p&gt;

&lt;p&gt;Doesn&amp;rsquo;t mean all people are equally smart, equally capable, equally right,
or should end up having equal power or influence &lt;em&gt;in the end&lt;/em&gt;.
It means all people should be given an equal &lt;em&gt;starting point&lt;/em&gt;
in apportioning power,
and be free to ``become unequal&amp;rdquo; as their words and actions
are subject to the review of their peers.&lt;/p&gt;

&lt;p&gt;Need to be able to quantify the number of people&lt;/p&gt;

&lt;p&gt;Need a mechanism to ensure that these are &lt;em&gt;real&lt;/em&gt; people we are counting,
not fake accounts created
by whoever has the most time, money, or determination.&lt;/p&gt;

&lt;p&gt;Content-based analysis versus account validation.
Content-based analysis [has often proven successful](),
but relies on complex algorithms that &lt;em&gt;someone&lt;/em&gt; must keep updating
(and making still more complex)
to keep up with the ``arms race&amp;rdquo;,
as attackers develop more sophisticated algorithms
to farm fake accounts that remain under the detection radar.
Relying on complex algorithms that need to adapt constantly
creates inherent risks that they will become opaque and vulnerable
to accidental bias or deliberate attacks,
such as the secret inclusion of &amp;ldquo;back doors&amp;rdquo; that produces false positives
designed to close the accounts of and hence disenfranchise populations
disfavored by the attacker.
While I believe content-based analysis plays an important scientific role,
it is unsuitable as a &lt;em&gt;foundation&lt;/em&gt; for ensuring the equality of real people
in online public discourse.&lt;/p&gt;

&lt;h2 id=&#34;proportional-speech-and-bias-transparency&#34;&gt;Proportional Speech and Bias Transparency&lt;/h2&gt;

&lt;p&gt;Need an objective way to avoid bias,
or clearly and quantitatively expose it when it exists.&lt;/p&gt;

&lt;p&gt;&amp;hellip;like wearing blinders&amp;hellip;&lt;/p&gt;

&lt;p&gt;Pressuring Mark Zuckerberg to deploy Facebook&amp;rsquo;s minions
to do a better job of censoring fake or misleading social media posts
does not solve the problem,
but instead shifts the power to decide between ultimate truth and falsehood
to precisely the place it does not belong:
to the anonymous employees and proprietary algorithms
of corporations that are accountable to no one but their shareholders.&lt;/p&gt;

&lt;p&gt;All relevant algorithms need to be public and accountable.
Algorithms need to be as simple as possible
[but no simpler]():
in particular, not so simplistic as to ignore the many lessons
from past failures.&lt;/p&gt;

&lt;p&gt;A fake or misleading claim on social media,
as soon as it starts collecting nontrivial interest,
needs to become inextricably attached to the counter-claims that debunk it.
These counter-claims must prominently include
accurate, quantitative evidence that the debunking experts are trustworthy
and not &lt;a href=&#34;Ebell guy&#34;&gt;paid lobbyists masquerading as scientists&lt;/a&gt; &amp;ndash;
together with accurate quantitative measures of the number of people
(&lt;em&gt;real&lt;/em&gt; people) who support the false statement despite its being debunked.&lt;/p&gt;

&lt;h2 id=&#34;depolarizing-echo-chambers-with-soft-focus-feeds&#34;&gt;Depolarizing Echo Chambers with Soft-Focus Feeds&lt;/h2&gt;

&lt;p&gt;Even when people are willing to hear viewpoints they don&amp;rsquo;t like,
there is a matter of scalability:
everyone simply does not have time to listen to everything everyone else says.
Speech needs to be filtered or summarized.&lt;/p&gt;

&lt;h2 id=&#34;anonymity-and-free-speech-before-the-ballot-box&#34;&gt;Anonymity and Free Speech &lt;em&gt;Before&lt;/em&gt; the Ballot Box&lt;/h2&gt;

&lt;p&gt;one of many explanations, possibly contributing but probably not only factor&amp;hellip;
other explanations include
[normal polling errors](),
[hacking of the election system](),
[the FBI](), &amp;hellip;&lt;/p&gt;

&lt;p&gt;Some Trump supporters are certainly racist and xenophobic;
most of them are probably not,
but voted Trump for other reasons.
In order to protect our civilization,
we the people need to be fully aware of size and malignancy of
any malignancy affecting it:
you do not beat a cancerous tumor by ignoring it
or sanitizing the doctor&amp;rsquo;s diagnosis.
We need &lt;em&gt;know&lt;/em&gt; the true, complex set of reasons that
people are inclined to support someone like Trump&lt;/p&gt;

&lt;p&gt;Need regular opportunities for speech
ensuring that &lt;em&gt;all&lt;/em&gt; voices are represented,
and [building anger over policies]()
actually have [a chance to influence policy]()
before that anger
explodes in a self-defeating electoral choice
of an [authoritarian]() [con-artist]()
and [places freedom and democracy in existential risk]().&lt;/p&gt;

&lt;h2 id=&#34;incentives-who-will-finance-a-decentralized-social-forum&#34;&gt;Incentives: Who Will Finance a Decentralized Social Forum?&lt;/h2&gt;

&lt;!--
---

*I wish to thank ...
for helpful feedback on early drafts of this post.*
--&gt;
</description>
    </item>
    
  </channel>
</rss>