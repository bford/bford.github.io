<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Draft-rsses on Bryan Ford&#39;s Blog</title>
    <link>http://bford.github.io/draft/index.xml</link>
    <description>Recent content in Draft-rsses on Bryan Ford&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 22 Oct 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://bford.github.io/draft/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Untangling Mining Incentives in Bitcoin and ByzCoin</title>
      <link>http://bford.github.io/2017/10/22/mining/</link>
      <pubDate>Sun, 22 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>http://bford.github.io/2017/10/22/mining/</guid>
      <description>

&lt;!--

&lt;figure &gt;
    
        &lt;img src=&#34;blockchain.jpg&#34; /&gt;
    
    
&lt;/figure&gt;

--&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&#34;blockchain.jpg&#34; width=&#34;100%&#34;&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;As the first widely-deployed cryptocurrency,
&lt;a href=&#34;https://bitcoin.org/&#34;&gt;Bitcoin&lt;/a&gt;
has proven hugely successful and inspired a
&lt;a href=&#34;https://www.cryptocoinsnews.com/study-shows-bitcoin-blockchain-investments-near-300-million-first-six-months/&#34;&gt;blockchain fever&lt;/a&gt;
(or &lt;a href=&#34;https://joi.ito.com/weblog/2016/06/14/-the-fintech-bu.html&#34;&gt;is it a bubble?&lt;/a&gt;).
Bitcoin&amp;rsquo;s security and economic assumptions
are showing significant fractures, however.
Following previously-identified
&lt;a href=&#34;http://hackingdistributed.com/2013/11/04/bitcoin-is-broken/&#34;&gt;selfish mining&lt;/a&gt;
and
&lt;a href=&#34;http://eprint.iacr.org/2015/796&#34;&gt;stubborn mining&lt;/a&gt; attacks,
&lt;a href=&#34;http://freedom-to-tinker.com/2016/10/21/bitcoin-is-unstable-without-the-block-reward/&#34;&gt;new research from Princeton&lt;/a&gt;
about to
&lt;a href=&#34;http://randomwalker.info/publications/mining_CCS.pdf&#34;&gt;appear at CCS&lt;/a&gt;
identifies further incentive weaknesses
that appear as
&lt;a href=&#34;http://qz.com/681996/everything-you-need-to-know-about-the-bitcoin-halving-event/&#34;&gt;transaction fees supplant block rewards&lt;/a&gt;
as the primary incentive for mining.&lt;/p&gt;

&lt;p&gt;In short, miners motivated by transaction fees have even greater incentive
to deviate strategically from the standard Bitcoin protocol
in selfish and potentially destructive ways.
In his summary,
&lt;a href=&#34;http://freedom-to-tinker.com/2016/10/21/bitcoin-is-unstable-without-the-block-reward/&#34;&gt;Arvind Narayanan notes&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;i&gt;
At a deeper level, our results suggest a fundamental rethinking of the role of block rewards in cryptocurrency design.
&lt;/i&gt;
&lt;/blockquote&gt;

&lt;p&gt;At least one such &amp;ldquo;rethinking of the role of block rewards&amp;rdquo;
already exists, however.
You may judge for yourself
how &amp;ldquo;fundamental&amp;rdquo; this rethinking is.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://hackingdistributed.com/2016/08/04/byzcoin/&#34;&gt;ByzCoin&lt;/a&gt;
is an experimental protocol created by the
&lt;a href=&#34;http://dedis.epfl.ch/&#34;&gt;Decentralized and Distributed Systems (DEDIS) lab&lt;/a&gt; at
&lt;a href=&#34;http://epfl.ch/&#34;&gt;EPFL&lt;/a&gt;
and presented at the
&lt;a href=&#34;https://www.usenix.org/conference/usenixsecurity16/technical-sessions/presentation/kogias&#34;&gt;USENIX Security&lt;/a&gt;
conference this past summer.
While a rigorous incentive analysis has not yet been done on ByzCoin,
informal analysis suggests that ByzCoin&amp;rsquo;s architecture
may be much more resilient to these known incentive-compatibility weaknesses.
In essence, both the new attacks &amp;mdash;
and the earlier selfish or stubborn mining attacks &amp;mdash;
appear to be ineffective against ByzCoin.
This blog post informally compares the way Bitcoin and ByzCoin
handle transaction fee incentives,
deferring the topic of selfish mining to a followup post.&lt;/p&gt;

&lt;h2 id=&#34;instant-gratification-in-bitcoin&#34;&gt;Instant Gratification in Bitcoin&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.bigfatpurse.com/2015/01/12-timeless-and-invaluable-investment-lessons-from-dilbert/&#34;&gt;
&lt;img src=&#34;dilbert.png&#34; style=&#34;float:right&#34;&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In Bitcoin, miners earn &lt;em&gt;immediate rewards&lt;/em&gt;
for successfully solving the cryptographic puzzles
that allow them to extend the blockchain.
These rewards are devided into &lt;em&gt;block rewards&lt;/em&gt;,
in which the miner may create a fixed amount of &amp;ldquo;new money&amp;rdquo;
according to
&lt;a href=&#34;http://www.coindesk.com/making-sense-bitcoins-halving/&#34;&gt;a hard-coded schedule&lt;/a&gt;,
and &lt;em&gt;transaction fees&lt;/em&gt;,
which the miner receives from Bitcoin users as an incentive
to include their transactions in the blockchain.
As block rewards regularly decrease by half &amp;mdash;
eventually dropping to zero in the year 2140 &amp;mdash;
miners&amp;rsquo; incentives shift from block rewards to transaction fees.
For the moment, however, the important point
is that Bitcoin confers both block rewards and transaction fees
to miners &lt;em&gt;immediately&lt;/em&gt;
upon the successful mining of a new block.
We might describe Bitcoin
as an &amp;ldquo;instant gratification cryptocurrency.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;Note that Bitcoin does impose a 100-block delay
before newly-mined block rewards can actually be &lt;em&gt;spent&lt;/em&gt;.
But this rule does not apply to transaction fees &amp;mdash;
and even if it did, that would be irrelevant for mining incentive purposes.
The critical fact is that the miner immediately &lt;em&gt;knows&lt;/em&gt; what his payoff will be
for successfully mining a particular block at a particular time,
and can use that information to mine strategically,
e.g., by selfishly withholding blocks
or deliberately forking the blockchain.&lt;/p&gt;

&lt;h2 id=&#34;delayed-gratification-in-byzcoin&#34;&gt;Delayed Gratification in ByzCoin&lt;/h2&gt;

&lt;div style=&#34;float:right&#34;&gt;
&lt;center&gt;
&lt;img src=&#34;byzcoin-arch.svg&#34;&gt;
&lt;p&gt;
&lt;b&gt;ByzCoin architecture&lt;/b&gt;
&lt;/center&gt;
&lt;/div&gt;

&lt;p&gt;Mining in ByzCoin, in contrast,
does not immediately confer &lt;em&gt;any&lt;/em&gt; reward on the successful miner,
but instead represents an &lt;em&gt;investment&lt;/em&gt;
whose rewards accrue gradually over a fixed time period,
such as the following day or week.
In particular, solving a cryptographic puzzle
and mining a &lt;em&gt;keyblock&lt;/em&gt; in ByzCoin
rewards the miner with a temporary &lt;em&gt;share&lt;/em&gt; in a &lt;em&gt;consensus group&lt;/em&gt;.
This consensus group is defined by a sliding window
of recently-mined blocks:
e.g., the last 1008 blocks, representing one share per keyblock mined
within approximately the past week,
at Bitcoin&amp;rsquo;s self-adjusting mining rate of 10 minutes per block.
Adopting a refinement
&lt;a href=&#34;http://eprint.iacr.org/2016/917.pdf&#34;&gt;recently suggested by Pass and Shi&lt;/a&gt;,
ByzCoin also adds a short delay, e.g., six blocks (about one hour),
before a newly-mined keyblock &lt;em&gt;enters&lt;/em&gt; the consensus group,
ensuring that miners agree on all rather than just &amp;ldquo;almost all&amp;rdquo;
consensus group members in the presence of temporary keyblock forks.&lt;/p&gt;

&lt;p&gt;The consensus group formed this way
then uses a scalable
&lt;a href=&#34;https://en.wikipedia.org/wiki/Byzantine_fault_tolerance&#34;&gt;Byzantine consensus&lt;/a&gt;
protocol based on
&lt;a href=&#34;http://dedis.cs.yale.edu/dissent/papers/witness-abs&#34;&gt;collective signing&lt;/a&gt;
to agree on and commit to &lt;em&gt;microblocks&lt;/em&gt; containing actual transactions.
Building on ideas in Eyal and Sirer&amp;rsquo;s
&lt;a href=&#34;http://hackingdistributed.com/2015/10/14/bitcoin-ng/&#34;&gt;Bitcoin-NG&lt;/a&gt;,
this decoupling enables ByzCoin to commit transaction microblocks
much more frequently than keyblocks are mined
(e.g., in seconds rather than minutes).
Due to its Byzantine consensus, however,
ByzCoin subsequently
ensures that microblocks are immediately committed permanently and
cannot subsequently be reverted or double-spent even in the near future,
as is possible in Bitcoin or Bitcoin-NG.&lt;/p&gt;

&lt;p&gt;Independent of its Byzantine consensus process,
ByzCoin also makes an important change to the way miners earn rewards.
Instead of conferring block rewards and transaction fees immediately
on the miner of each new block,
ByzCoin divides all block rewards and transaction fees
evenly among the shareholders comprising the current consensus group.
If the consensus group consists of the last 1008 successful keyblock miners,
for example,
then the transaction fees derived from all transactions committed
while this consensus group is in charge &amp;mdash;
together with the block reward associated
with the mining of the next keyblock &amp;mdash;
are split evenly among the 1008 shareholders
comprising the current consensus group.&lt;/p&gt;

&lt;p&gt;Thus, while ByzCoin miners earn no rewards immediately
upon mining a new keyblock,
that keyblock confers on them a &lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;1008&lt;/sub&gt; share
of all the block rewards &lt;em&gt;and&lt;/em&gt; transaction fees earned by anyone
during the 1008 sliding-window positions
during which this share is within the consensus group.
In short, ByzCoin gives miners &lt;em&gt;delayed&lt;/em&gt;
rather than instant gratification.
And this characteristic could have important benefits
in the stability and security of its mining incentives,
as we discuss next.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;golden-egg.jpg&#34; style=&#34;float:right;width:256px;height:266px&#34;&gt;&lt;/p&gt;

&lt;h2 id=&#34;the-goose-egg-problem&#34;&gt;The Goose Egg Problem&lt;/h2&gt;

&lt;p&gt;The creator of any Bitcoin transaction defines a &lt;em&gt;transaction fee&lt;/em&gt;,
which goes to the miner
as an incentive to include the transaction in the blockchain.
Occasionally &amp;mdash;
most likely in error &amp;mdash;
users have proven spectacularly generous with their transaction fees.
Transactions with inordinately huge fees are sometimes called &lt;em&gt;goose eggs&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;For example,
in 2015 a user
&lt;a href=&#34;https://bitcointalk.org/index.php?topic=135665.0&#34;&gt;accidentally donated 111 BTC to a miner&lt;/a&gt;,
which in this case the lucky miner graciously refunded.
This past April a transaction with
&lt;a href=&#34;https://www.cryptocoinsnews.com/user-error-sees-bitcoin-mining-pool-earn-135000-fee/&#34;&gt;a 291 BTC fee&lt;/a&gt;
(worth $139,000 at the time) appeared.
But these are only the most spectacular goose eggs:
as Arvind Narayanan observed in May,
&amp;ldquo;&lt;a href=&#34;https://twitter.com/random_walker/status/729800710280335361&#34;&gt;there have been ~150 transactions with a fee over $1,000.&lt;/a&gt;&amp;rdquo;&lt;/p&gt;

&lt;p&gt;For several years,
&lt;a href=&#34;https://www.cs.cornell.edu/people/egs/&#34;&gt;Emin Gün Sirer&lt;/a&gt;
and others have warned that goose eggs pose
an incentive problem to Bitcoin security,
in strategic miners may be inclined to &amp;ldquo;fight over&amp;rdquo; the goose egg.
Suppose for example that a goose egg appears in the transaction pool,
and Innocent Ivan is the first miner lucky enough
to create a valid Bitcoin block including this transaction.
But suppose another miner, Greedy Greg, is paying attention and controls
significant mining power (but still under &lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;3&lt;/sub&gt; of the total).&lt;/p&gt;

&lt;p&gt;Even if Greedy Greg is well aware of Innocent Ivan&amp;rsquo;s new block,
Greg may be strongly inclined to ignore it and instead try to mine
a &lt;em&gt;competing&lt;/em&gt; block in hopes of &amp;ldquo;stealing&amp;rdquo; the goose egg from Ivan.
To pull off this heist,
Greg may have to &amp;ldquo;get lucky&amp;rdquo; twice in a row
and produce &lt;em&gt;two&lt;/em&gt; new blocks
before another miner extends Ivan&amp;rsquo;s chain:
one block to compete with Ivan&amp;rsquo;s, and a second block
to convince other miners to ditch Ivan&amp;rsquo;s chain for Greg&amp;rsquo;s.
Even if this gamble presents fairly long odds for Greg,
the spectacular payoff presented by the goose egg makes it worth the risk.&lt;/p&gt;

&lt;div style=&#34;float:right&#34;&gt;

&lt;style&gt;
.Pileup {
 width:240px;
 height:180px;
 background:url(&#39;pileup-stat.gif&#39;);
}
.Pileup:hover {
 cursor:pointer; 
 background:url(&#39;pileup-anim.gif&#39;);
}
&lt;/style&gt;

&lt;center&gt;
&lt;div class=&#34;Pileup&#34;&gt;&lt;/div&gt;
&lt;p&gt;
&lt;b&gt;Bitcoin miners find a goose egg&lt;/b&gt;
&lt;/center&gt;
&lt;/div&gt;

&lt;p&gt;If &lt;em&gt;multiple&lt;/em&gt; miners independently emulate Greedy Greg,
this could lead to chaos and large amounts of wasted hash power
as miners clamor over the goose egg.
In the worst case, if multiple large mining pools behaved this way,
the blockchain could even deadlock or permanently hard-fork
as different entrenched pools stubbornly refuse to honor any blockchain
other than the one in which &lt;em&gt;they&lt;/em&gt; captured the egg.&lt;/p&gt;

&lt;p&gt;Consider ByzCoin, in contrast,
where mining a keyblock confers no immediate reward,
but merely a &lt;em&gt;share&lt;/em&gt; in rewards that arrive later
while the mined keyblock is part of a consensus group.
If a transaction containing a goose egg appears,
the one and only way for &lt;em&gt;any&lt;/em&gt; miner to profit from it
is to divide it equally across the entire consensus group,
like dividends paid to shareholders.
At this point, it is too late for any greedy keyblock mining strategy
to affect this distribution of profits significantly.&lt;/p&gt;

&lt;p&gt;To start with, since ByzCoin irreversibly commits transactions
every few seconds as part of microblocks,
a greedy miner has only seconds, not minutes,
to carry out any potential mining strategy &amp;mdash;
whereas the expected time to mine a new keyblock is still long
(e.g., 10 minutes).
Second, any profit advantage of such a strategy will be counted
only in &lt;em&gt;shares&lt;/em&gt; of a goose egg;
no single miner ever gets the whole egg.
For example, suppose a goose egg appears at about the time Innocent Ivan
mines a new keyblock.
Greedy Greg can try to mine against Ivan&amp;rsquo;s keyblock,
but this will not change the consensus group that distributes the goose egg,
since new keyblocks must &amp;ldquo;mature&amp;rdquo; for a time (e.g., six blocks)
before they become active shares in any consensus group.
Greg would have to displace not only Ivan&amp;rsquo;s keyblock
but &lt;em&gt;several blocks before it&lt;/em&gt; to affect the profit distribution at all.
Even if he succeeded, Greg would get only an additional 1/1008th
of the goose egg for each additional share acquired strategically.&lt;/p&gt;

&lt;h2 id=&#34;transaction-fee-market-incentives&#34;&gt;Transaction Fee Market Incentives&lt;/h2&gt;

&lt;p&gt;The &lt;a href=&#34;http://freedom-to-tinker.com/2016/10/21/bitcoin-is-unstable-without-the-block-reward/&#34;&gt;new incentive analysis by Narayanan&amp;rsquo;s group&lt;/a&gt;
in essence observes that,
as block rewards decrease and transaction fees gradually supplant them
as the primary motivation for miners to mine,
Bitcoin encounters a miniature goose egg problem
at &lt;em&gt;every single block&lt;/em&gt;.
The problem is that just after any block has been successfully mined,
there are few uncommitted transactions available &amp;mdash;
and hence minimal fees to be collected &amp;mdash;
for mining a subsequent block.
Thus, at least until this pool of uncommitted transactions builds up again,
it is more profitable for miners to treat
the bundle of ordinary transaction fees in the &lt;em&gt;previous&lt;/em&gt; block
as a small goose egg and try to capture it
by mining &lt;em&gt;against&lt;/em&gt; it rather than on top of it.&lt;/p&gt;

&lt;p&gt;Further, Narayanan&amp;rsquo;s group identifies &amp;ldquo;second-order&amp;rdquo;
greedy deviations that work even better when other miners are greedy.
For example, if Innocent Ivan has just mined a block that commits
transactions worth 10 BTC in fees,
Greedy Greg no longer necessarily needs to mine &lt;em&gt;two&lt;/em&gt; blocks
in order to steal Ivan&amp;rsquo;s fees;
instead Greg might just mine &lt;em&gt;one&lt;/em&gt; block that deliberately
&amp;ldquo;consumes&amp;rdquo; only a subset of transactions worth 5 BTC of fees,
deliberately leaving the other 5 BTC worth of fees
as an incentive for other greedy miners to prefer Greg&amp;rsquo;s chain over Ivan&amp;rsquo;s.&lt;/p&gt;

&lt;p&gt;Now consider again how ByzCoin affects this situation.
Since transaction fees are divided equally
among the current consensus group,
whose membership is determined not by the &lt;em&gt;latest&lt;/em&gt; keyblock miner
but by &lt;em&gt;all&lt;/em&gt; the successful miners between an hour and a week ago,
any keyblock mining strategy has a miniscule chance
of affecting profit distribution significantly.
Since ByzCoin commits many transaction microblocks for each mined keyblock,
and rewards from all microblocks committed by the consensus group
are distributed to the same miners in the same proportion,
the precise time a transaction appears
has almost no bearing on reward distribution.
Strategic keyblock mining might, at best,
affect transactions committed close to another keyblock mining event
causing a consensus group shift &amp;mdash;
but any such effect can at most amount to changing the distribution
of one share (e.g., &lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;1008&lt;/sub&gt;) worth of transaction fee profits
from that microblock.&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;This post of course represents only an informal
and certainly incomplete analysis
of differences in incentives between Bitcoin and ByzCoin,
focusing specifically on transaction fees.
It is quite possible that a full, rigorous analysis of ByzCoin
may reveal new incentive-compatibility issues that its architecture introduces.
Further, ByzCoin is still an experimental protocol
under rapid development and evolution.&lt;/p&gt;

&lt;p&gt;Given these caveats, however,
ByzCoin&amp;rsquo;s architecture at least appears to be much more resilient
to several known strategic mining attacks against Bitcoin,
including the new attacks identified by Narayanan&amp;rsquo;s group.
By replacing Bitcoin&amp;rsquo;s instant-gratification, winner-take-all reward model
with a delayed-gratification, investment-dividend model,
ByzCoin ensures that the distribution of mining profits are fixed
long before any strategic miner might know about or be able to respond to
the appearance of a goose egg or other transaction fee variance.&lt;/p&gt;

&lt;p&gt;In short, it does not appear necessary for new cryptocurrencies to
&amp;ldquo;&lt;a href=&#34;http://freedom-to-tinker.com/2016/10/21/bitcoin-is-unstable-without-the-block-reward/&#34;&gt;make the block reward permanent and accept monetary inflation
as inevitable&lt;/a&gt;&amp;rdquo;
as Narayanan suggests.
Whether inflationary or deflationary monetary policies are preferable
is an important and highly debatable question,
but its answer need not be constrained by Bitcoin&amp;rsquo;s technical weaknesses.
With more sophisticated blockchain architectures such as ByzCoin,
there is plenty of hope that mining incentives can work
independent of monetary policy.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;The author wishes to thank
&lt;a href=&#34;https://twitter.com/lefkok&#34;&gt;Lefteris Kokoris-Kogias&lt;/a&gt;,
&lt;a href=&#34;https://github.com/Daeinar&#34;&gt;Philipp Jovanovic&lt;/a&gt;,
&lt;a href=&#34;http://randomwalker.info/&#34;&gt;Arvind Narayanan&lt;/a&gt;, and
&lt;a href=&#34;https://www.cs.cornell.edu/people/egs/&#34;&gt;Emin Gün Sirer&lt;/a&gt;
for helpful feedback on early drafts of this post.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Selfish Mining in Bitcoin and ByzCoin</title>
      <link>http://bford.github.io/2016/xx/xx/selfish/</link>
      <pubDate>Mon, 31 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>http://bford.github.io/2016/xx/xx/selfish/</guid>
      <description>

&lt;p&gt;XXX intro&lt;/p&gt;

&lt;p&gt;summary of selfish mining&lt;/p&gt;

&lt;p&gt;selfish mining as a transparency problem:
you get to build on a blockchain head you haven&amp;rsquo;t published.&lt;/p&gt;

&lt;p&gt;same as transparency problem in Apple FBI case for example;
that&amp;rsquo;s what CoSi is for.&lt;/p&gt;

&lt;p&gt;solution: any keyblock you build on is collectively signed,
and the next block&amp;rsquo;s hash covers the last block&amp;rsquo;s signature.&lt;/p&gt;

&lt;p&gt;if you withhold a block, you can&amp;rsquo;t get a collective signature on it;
without that collective signature,
you can&amp;rsquo;t secretly mine a next block on top of it.&lt;/p&gt;

&lt;h2 id=&#34;selfish-mining&#34;&gt;Selfish Mining&lt;/h2&gt;

&lt;p&gt;Finally, we consider the now much more well-understood problem of
&lt;a href=&#34;http://hackingdistributed.com/2013/11/04/bitcoin-is-broken/&#34;&gt;selfish mining&lt;/a&gt;.
A selfish miner strategically withholds some of its successfully mined blocks
in attempt to gain a higher share of mining rewards,
by causing other miners to waste effort mining redundant blocks.
For example, if Greedy Greg successfully mines a new block,
he might deliberately delay announcing it.
If Innocent Ivan announces a competing block,
Greg quickly races to announce and widely distribute his,
which may reliably overtake Ivan&amp;rsquo;s if Greg is fast and well-connected.
Alternatively, if Greg manages to mine a &lt;em&gt;second&lt;/em&gt; block in private
before a competing first block appears,
then Greg is in the enviable position of being able to &amp;ldquo;trump&amp;rdquo;
and eliminate that competing block once it does appear,
simply by revealing his longer private blockchain.&lt;/p&gt;

&lt;p&gt;While ByzCoin&amp;rsquo;s keyblock mining mechanism alone is still
vulnerable to selfish mining,
its microblock commitment process using Byzantine consensus
provides a clean, simple defense against selfish mining.
Any transaction microblock the consensus group commits
contains a cryptographic hash of the latest known keyblock at the time,
and any newly-mined keyblock must similarly contain
a cryptographic hash of a recently-committed microblock
(e.g., within a few microblocks from the head).
Whenever the consensus group commits a new microblock,
all honest members verify that the keyblock pointer in the new microblock
is consistent with those in all prior microblocks,
ensuring that any new keyblock is &amp;ldquo;locked in&amp;rdquo;
irreversably once the new keyblock is known.
This leaves only seconds, rather than minutes,
in which a selfish miner could
try to announce and distribute a competing keyblock.
Further, because each keyblock must reference a recent microblock,
any newly-mined keyblock becomes invalid and useless
if its owner fails to announce it
within a few microblock commitment cycles &amp;mdash;
again, on the order of seconds rather than minutes.&lt;/p&gt;

&lt;p&gt;In essence, ByzCoin&amp;rsquo;s microblock commit mechanism
enforces transparency on the keyblock mining process,
ensuring that a selfish ByzCoin miner would likely be faced with
a vanishingly small probability of profiting from
any keyblock-withholding strategy.&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;This post of course represents only an informal,
and no doubt incomplete, analysis
of the differences in incentives between Bitcoin and ByzCoin,
focusing primarily on mining incentives.
It is quite possible that a full, rigorous incentive analysis of ByzCoin
may reveal new incentive-compatibility issues that its architecture introduces.
Further, ByzCoin is still an experimental protocol
under rapid development and evoluation.&lt;/p&gt;

&lt;p&gt;Given these caveats, however,
ByzCoin&amp;rsquo;s architecture at least appears to be much more resilient
to the known strategic mining attacks against Bitcoin,
whether through block withholding or deliberate forking.
In particular,
by replacing Bitcoin&amp;rsquo;s instant-gratification, winner-take-all reward model
with a delayed-gratification, investment-dividend model,
ByzCoin ensures that the distribution of mining profits are fixed
long before any strategic miner might know about or be able to respond to
the appearance of a goose egg or other transaction fee variance.
By ensuring that keyblocks and microblocks track each other cryptographically,
ByzCoin forces miners either to announce new keyblocks quickly
or else lose them,
making selfish mining unprofitable.&lt;/p&gt;

&lt;p&gt;In short, it does not appear necessary for new cryptocurrencies to
&amp;ldquo;&lt;a href=&#34;http://freedom-to-tinker.com/2016/10/21/bitcoin-is-unstable-without-the-block-reward/&#34;&gt;make the block reward permanent and accept monetary inflation
as inevitable&lt;/a&gt;&amp;rdquo;
as Narayanan suggests.
Whether inflationary or deflationary monetary policies are preferable
is an important and highly debatable question,
but it need not be constrained by technical weaknesses of Bitcoin.
With more sophisticated blockchain architectures such as ByzCoin,
there is plenty of hope that mining incentives can work
independent of monetary policy.&lt;/p&gt;

&lt;!--
---

*I wish to thank ...
for helpful feedback on early drafts of this post.*
--&gt;
</description>
    </item>
    
    <item>
      <title>An advanced crypto library for Go</title>
      <link>http://bford.github.io/2016/03/08/crypto/</link>
      <pubDate>Tue, 08 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>http://bford.github.io/2016/03/08/crypto/</guid>
      <description>

&lt;h1 id=&#34;page-title&#34;&gt;{{ page.title }}&lt;/h1&gt;

&lt;p&gt;Interesting features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;An abstract group arithmetic framework for public-key cryptography
based on the discrete logarithm problem.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Several alternative concrete instantiations of this abstract
group arithmetic framework,
based on the NIST elliptic curve implementations in the Go standard library
and in the OpenSSL crypto library,
and implementations of both generic Edwards curves
and an adaptation of Adam Langley&amp;rsquo;s Ed25519-curve-specific
optimized group arithmetic code to the abstract group API.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Implementations of a number of advanced crypto algorithms
built on this abstract group arithmetic framework,
and hence automatically compatible woth both integer group
and any suitable elliptic curves:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Shamir Verifiable Secret Sharing (VSS),
the standard foundation for t-of-n threshold cryptographic techniques.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;An implementation of the general Camenisch/Stadler framework
for proofs of knowledge based on the discrete-logarithm problem.
For example&amp;hellip;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Anonymous and pseudonymous public-key encryption and signatures,
where the sender or receiver are identified only as an anonymous member
of some explicit &lt;em&gt;set&lt;/em&gt; of public keys, without revealing anything
about which member of the set signed the message or is to receive it.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;C. Andrew Neff&amp;rsquo;s cryptographic protocol for proving
the correctness of a shuffle.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Backdoors, Trusted Servers, and Deanonymization</title>
      <link>http://bford.github.io/2016/03/08/backdoors/</link>
      <pubDate>Tue, 08 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>http://bford.github.io/2016/03/08/backdoors/</guid>
      <description>

&lt;h1 id=&#34;page-title&#34;&gt;{{ page.title }}&lt;/h1&gt;

&lt;p&gt;To my knowledge there are currently only two fundamentally distinct approaches
to achieving strong anonymity online,
and the same legendary computing figure, David Chaum,
pioneered both.
His first approach,
&lt;a href=&#34;http://www.freehaven.net/anonbib/cache/chaum-mix.pdf&#34;&gt;mixes&lt;/a&gt;,
relay messages over multi-hop paths around the network
to obscure their source and destinations.
State-of-the-art deployed anonymity systems such as
&lt;a href=&#34;https://www.torproject.org/&#34;&gt;Tor&lt;/a&gt;
are highly evolved and performance-optimized variants
of this basic relaying idea.&lt;/p&gt;

&lt;p&gt;Chaum&amp;rsquo;s second approach,
&lt;a href=&#34;http://www.freehaven.net/anonbib/cache/chaum-dc.pdf&#34;&gt;dining cryptographers&lt;/a&gt;,
instead uses information-coding principles to hide the sender of a message
among a group of nodes all of whom seem to be spewing gibberish at once.
It&amp;rsquo;s as if you are listening to a crowd
&lt;a href=&#34;http://www.christianpublishers.org/Speaking%20in%20Tongues-1.jpg&#34;&gt;speaking in tongues&lt;/a&gt;
but what you hear is a single unified voice,
emanating from no one in particular,
elucidating the Ten Commandments with perfect clarity.
Chaum then moved away from anonymity systems
to other projects such as the first major attempt at practical electronic cash
(yes, he was also the &amp;ldquo;first&amp;rdquo; Satoshi Nakamoto),
and secure electronic voting systems.
While several research projects,
including Cornell&amp;rsquo;s
&lt;a href=&#34;https://www.cs.cornell.edu/people/egs/herbivore/&#34;&gt;Herbivore&lt;/a&gt;
and my own
&lt;a href=&#34;http://dedis.cs.yale.edu/dissent/&#34;&gt;Dissent&lt;/a&gt;
have made progress toward making the dining cryptographers practical,
it has not (yet) made it into widely-deployed systems.&lt;/p&gt;

&lt;p&gt;Given Chaum&amp;rsquo;s status as &amp;ldquo;the father of online anonymity&amp;rdquo;,
it stands to reason
that his first venture &lt;em&gt;back&lt;/em&gt; into anonymity in many years
would get some attention.
Today at &lt;a href=&#34;http://www.realworldcrypto.com/rwc2016&#34;&gt;Real World Crypto&lt;/a&gt;,
he presented
&lt;a href=&#34;http://eprint.iacr.org/2016/008.pdf&#34;&gt;cMix&lt;/a&gt;,
an interesting new take on the mix approach
that aims to achieve better scalability, lower latencies,
and sufficiently low computation costs on client devices
to be practical for use in energy-conscious mobile phone apps.
I had the pleasure of learning about cMix directly from David
and discussing it with him at some length last year,
but my recent move to &lt;a href=&#34;http://www.epfl.ch/&#34;&gt;EPFL&lt;/a&gt; and other time demands
prevented me from being able to take a more active role in the project.
The design of cMix is definitely interesting and contains some promising ideas,
but that is not what this blog post is about.&lt;/p&gt;

&lt;h2 id=&#34;ending-the-crypto-war-or-stoking-the-flames&#34;&gt;Ending the Crypto War, or Stoking the Flames?&lt;/h2&gt;

&lt;p&gt;Earlier today before Chaum&amp;rsquo;s talk, Wired also released
&lt;a href=&#34;http://www.wired.com/2016/01/david-chaum-father-of-online-anonymity-plan-to-end-the-crypto-wars/&#34;&gt;an article on it&lt;/a&gt;
containing a statement that will doubtless attract
a lot more attention than anything in the technical paper on cMix:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Chaum is also building into PrivaTegrity another feature that’s sure to be far more controversial: a carefully controlled backdoor that allows anyone doing something “generally recognized as evil” to have their anonymity and privacy stripped altogether.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Well before Chaum&amp;rsquo;s talk even began,
Twitter was ablaze with discussion about Chaum&amp;rsquo;s &amp;ldquo;backdoor&amp;rdquo; in PrivaTegrity.&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;The main benefit of Chaum&amp;#39;s new system, as far as I can tell, is that it is a political gift to FBI Director Comey. &lt;a href=&#34;https://t.co/64Au0lXxuL&#34;&gt;https://t.co/64Au0lXxuL&lt;/a&gt;&lt;/p&gt;&amp;mdash; Christopher Soghoian (@csoghoian) &lt;a href=&#34;https://twitter.com/csoghoian/status/684730483503149056&#34;&gt;January 6, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;I&amp;#39;m heartbroken to see that Chaum is proposing key escrow for everyone on the planet: &lt;a href=&#34;https://t.co/zWZ3bUQsJf&#34;&gt;https://t.co/zWZ3bUQsJf&lt;/a&gt; What happened to David Chaum?&lt;/p&gt;&amp;mdash; Jacob Appelbaum (@ioerror) &lt;a href=&#34;https://twitter.com/ioerror/status/684763375260270592&#34;&gt;January 6, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&#34;but-where-s-the-backdoor&#34;&gt;But Where&amp;rsquo;s the Backdoor?&lt;/h2&gt;

&lt;p&gt;One important observation, however, is that the word &amp;ldquo;backdoor&amp;rdquo;
appears nowhere in the actual
&lt;a href=&#34;http://eprint.iacr.org/2016/008.pdf&#34;&gt;technical paper on cMix&lt;/a&gt; written by
Chaum and his collaborators.
While cMix is the anonymous communication protocol Chaum is proposing,
PrivaTegrity is a larger system built on cMix
to provide anonymous chat and other anonymous interaction applications
directly usable to ordinary users.
In essence, cMix is just an &amp;ldquo;engine&amp;rdquo; whereas PrivaTegrity is the car.
So where is this supposed &amp;ldquo;backdoor&amp;rdquo; &amp;emdash; in the engine or the car?&lt;/p&gt;

&lt;p&gt;The only part of the technical cMix paper that even suggests
the &amp;ldquo;backdoor&amp;rdquo; idea (without using that term)
is section IX.B., two brief paragraphs on the paper&amp;rsquo;s second-to-last page.
The first is the most crucial:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Independent from cMix, PrivaTegrity addresses potential
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;abuse of anonymity services by establishing a trust model
that offers a balance of anonymity and accountability. On the
one hand, PrivaTegrity aims to provide privacy at a technical
level that is not penetrable by nation states. On the other
hand, PrivaTegrity aims to provide integrity, both prior restraint
and accountability after the fact, that is inescapably tied to
individuals. Only if all of the mixing nodes cooperate, can the
senders and receivers of messages be linked or identified.&lt;/p&gt;

&lt;p&gt;In essence, cMix routes users&amp;rsquo; messages through a series of mixing nodes
(the Wired article talks about nine servers in different countries),
such that none of the servers can individually unmask an anonymous user,
but all of the servers (or their operators) together can unmask a user
that they collectively agree to be deserving of such treatment.&lt;/p&gt;

&lt;p&gt;This property is by no means new, unusual, or unique to cMix, however:
in fact a huge number of cryptographic and distributed systems
have this essential security property.
No one really knows how to build secure systems
in which you need to trust &lt;em&gt;no one at all&lt;/em&gt;.
Instead the best we can really do is to &lt;em&gt;split&lt;/em&gt; trust across multiple entities
that we hope are at least somewhat independent,
so that no one entity needs to be fully trusted.&lt;/p&gt;

&lt;p&gt;This is exactly the same security principle that motivates
&lt;a href=&#34;http://www.deansafe.com/uncodrsawisa.html&#34;&gt;safes with two keys&lt;/a&gt;.
If both keys are required to open the safe and are held by different employees,
then a single dishonest employee working alone will be unable to raid it
without somehow aquiring the other key.
But if the two key-holders conspire,
the two-key mechanism will do nothing to stop them.&lt;/p&gt;

&lt;h2 id=&#34;trust-splitting-in-anonymity-systems&#34;&gt;Trust Splitting in Anonymity Systems&lt;/h2&gt;

&lt;p&gt;Essentially all of the practical anonymity systems,
both deployed and proposed in research,
embody this limited trust-splitting property in some fashion.
Several years ago my group
&lt;a href=&#34;http://dedis.cs.yale.edu/dissent/papers/eurosec12-abs&#34;&gt;coined the term &amp;ldquo;anytrust&amp;rdquo;&lt;/a&gt;
for this security model in the context of anonymity systems,
because users need only assume that &amp;ldquo;any one&amp;rdquo; of the servers is honest
and not colluding with all the others against them.
Users don&amp;rsquo;t even need to know or guess which server is honest;
one merely &lt;em&gt;needs to exist&lt;/em&gt;.
Once again, we did not by any means invent this security model;
it has been in use in many ways and under many names for decades
in cryptography and distributed systems practice.&lt;/p&gt;

&lt;p&gt;Users of the well-known &lt;a href=&#34;https://www.torproject.org/&#34;&gt;Tor&lt;/a&gt; anonymity system,
for example,
depend for their security on a small group of
&lt;em&gt;directory authorities&lt;/em&gt; &amp;emdash;
of which &lt;a href=&#34;https://twitter.com/kristovatlas/status/684845884576796673&#34;&gt;there are currently 10&lt;/a&gt; &amp;emdash;
to keep track of and let Tor clients know the set of relays
available to help anonymize their messages.
If &amp;hellip;&lt;/p&gt;

&lt;p&gt;PrivaTegrity&lt;/p&gt;

&lt;p&gt;is Chaum&amp;rsquo;s &amp;ldquo;backdoor&amp;rdquo; a technical feature?
no, just a common architectural weakness.&lt;/p&gt;

&lt;p&gt;Tor has it&amp;hellip; (examples)&lt;/p&gt;

&lt;p&gt;Can we eliminate such trusted server groups?  Yes, but it&amp;rsquo;s hard.&lt;/p&gt;

&lt;p&gt;Does CT fix it?  Not quite.&lt;/p&gt;

&lt;p&gt;The policy question: are backdoors needed/good in an anonymity systems?&lt;/p&gt;

&lt;p&gt;What would the processes be for controlled deanonymization of a user,
supposing one created a system and set it up like Chaum&amp;rsquo;s
on the (policy) basis that server operators would cooperate
to deanonymize users under &amp;ldquo;the right conditions&amp;rdquo;?&lt;/p&gt;

&lt;p&gt;who picks those 9 server operators?  Who funds them?
(The power of the purse is strong&amp;hellip;)
If a nation-state comes to them and says,
&amp;ldquo;we&amp;rsquo;ll block your service and thus destroy a big part of your legal business
unless you help us deanonymize these people who we call &amp;lsquo;terrorists&amp;rsquo;
but the rest of the world calls &amp;lsquo;political dissidents&amp;rsquo;&amp;ldquo;,
what do they do?&lt;/p&gt;

&lt;p&gt;sybil problem, multiple possible levels of response&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to prove DNSSEC isn&#39;t a key escrow scheme</title>
      <link>http://bford.github.io/2016/03/08/dnssec/</link>
      <pubDate>Tue, 08 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>http://bford.github.io/2016/03/08/dnssec/</guid>
      <description>

&lt;h1 id=&#34;page-title&#34;&gt;{{ page.title }}&lt;/h1&gt;

&lt;p&gt;&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>